

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 31 21:47:08 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0011CA                     __pidataCOMRAM:
    79                           	opt callstack 0
    80                           
    81                           ;initializer for lcd@F3185
    82  0011CA  31                 	db	49
    83  0011CB  32                 	db	50
    84  0011CC  33                 	db	51
    85  0011CD  41                 	db	65
    86  0011CE  34                 	db	52
    87  0011CF  35                 	db	53
    88  0011D0  36                 	db	54
    89  0011D1  42                 	db	66
    90  0011D2  37                 	db	55
    91  0011D3  38                 	db	56
    92  0011D4  39                 	db	57
    93  0011D5  43                 	db	67
    94  0011D6  2A                 	db	42
    95  0011D7  30                 	db	48
    96  0011D8  23                 	db	35
    97  0011D9  44                 	db	68
    98                           
    99                           ;initializer for _cursor
   100  0011DA  00C1               	dw	193
   101  0000                     _TMR0	set	4054
   102  0000                     _LATEbits	set	3981
   103  0000                     _TRISEbits	set	3990
   104  0000                     _TRISD	set	3989
   105  0000                     _PORTD	set	3971
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PIR2bits	set	4001
   108  0000                     _EECON2	set	4007
   109  0000                     _EECON1bits	set	4006
   110  0000                     _EEDATA	set	4008
   111  0000                     _EEADR	set	4009
   112  0000                     _RCONbits	set	4048
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _T0CONbits	set	4053
   115  0000                     _INTCONbits	set	4082
   116  0000                     _INTCON3bits	set	4080
   117  0000                     _TRISDbits	set	3989
   118  0000                     _TRISBbits	set	3987
   119  0000                     _ADCON1	set	4033
   120  0000                     _PORTDbits	set	3971
   121  0000                     _PORTBbits	set	3969
   122  0000                     _RBPU	set	32655
   123                           
   124                           	psect	smallconst
   125  000800                     __psmallconst:
   126                           	opt callstack 0
   127  000800  00                 	db	0
   128  000801                     STR_2:
   129  000801  46                 	db	70	;'F'
   130  000802  65                 	db	101	;'e'
   131  000803  63                 	db	99	;'c'
   132  000804  68                 	db	104	;'h'
   133  000805  61                 	db	97	;'a'
   134  000806  64                 	db	100	;'d'
   135  000807  75                 	db	117	;'u'
   136  000808  72                 	db	114	;'r'
   137  000809  61                 	db	97	;'a'
   138  00080A  00                 	db	0
   139  00080B                     STR_1:
   140  00080B  3A                 	db	58	;':'
   141  00080C  00                 	db	0
   142  0000                     
   143                           ; #config settings
   144  00080D  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	cinit
   147  0010D4                     __pcinit:
   148                           	opt callstack 0
   149  0010D4                     start_initialization:
   150                           	opt callstack 0
   151  0010D4                     __initialization:
   152                           	opt callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (18 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156  0010D4  0ECA               	movlw	low __pidataCOMRAM
   157  0010D6  6EF6               	movwf	tblptrl,c
   158  0010D8  0E11               	movlw	high __pidataCOMRAM
   159  0010DA  6EF7               	movwf	tblptrh,c
   160  0010DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161  0010DE  6EF8               	movwf	tblptru,c
   162  0010E0  EE00  F04A         	lfsr	0,__pdataCOMRAM
   163  0010E4  EE10 F012          	lfsr	1,18
   164  0010E8                     copy_data0:
   165  0010E8  0009               	tblrd		*+
   166  0010EA  CFF5 FFEE          	movff	tablat,postinc0
   167  0010EE  50E5               	movf	postdec1,w,c
   168  0010F0  50E1               	movf	fsr1l,w,c
   169  0010F2  E1FA               	bnz	copy_data0
   170  0010F4                     end_of_initialization:
   171                           	opt callstack 0
   172  0010F4                     __end_of__initialization:
   173                           	opt callstack 0
   174  0010F4  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   175  0010F6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   176  0010F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  0010FA  6EF8               	movwf	tblptru,c
   178  0010FC  0100               	movlb	0
   179  0010FE  EF07  F004         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	dataCOMRAM
   182  00004A                     __pdataCOMRAM:
   183                           	opt callstack 0
   184  00004A                     lcd@F3185:
   185                           	opt callstack 0
   186  00004A                     	ds	16
   187  00005A                     _cursor:
   188                           	opt callstack 0
   189  00005A                     	ds	2
   190                           
   191                           	psect	cstackCOMRAM
   192  000001                     __pcstackCOMRAM:
   193                           	opt callstack 0
   194  000001                     ??_varreduraTeclado:
   195  000001                     
   196                           ; 1 bytes @ 0x0
   197  000001                     	ds	1
   198  000002                     ??_DelayPORXLCD:
   199  000002                     ??_DelayXLCD:
   200  000002                     ?_isspace:
   201                           	opt callstack 0
   202  000002                     ?_isdigit:
   203                           	opt callstack 0
   204  000002                     ?_tecladoMatricial:
   205                           	opt callstack 0
   206  000002                     ?___wmul:
   207                           	opt callstack 0
   208  000002                     SetDDRamAddr@DDaddr:
   209                           	opt callstack 0
   210  000002                     WriteCmdXLCD@cmd:
   211                           	opt callstack 0
   212  000002                     WriteDataXLCD@data:
   213                           	opt callstack 0
   214  000002                     EEPROM_Ler@dir:
   215                           	opt callstack 0
   216  000002                     ___wmul@multiplier:
   217                           	opt callstack 0
   218  000002                     isdigit@c:
   219                           	opt callstack 0
   220  000002                     isspace@c:
   221                           	opt callstack 0
   222                           
   223                           ; 2 bytes @ 0x1
   224  000002                     	ds	1
   225  000003                     OpenXLCD@lcdtype:
   226                           	opt callstack 0
   227  000003                     lcd@tecla:
   228                           	opt callstack 0
   229  000003                     putsXLCD@buffer:
   230                           	opt callstack 0
   231  000003                     putrsXLCD@buffer:
   232                           	opt callstack 0
   233                           
   234                           ; 2 bytes @ 0x2
   235  000003                     	ds	1
   236  000004                     ??_isspace:
   237  000004                     ??_isdigit:
   238  000004                     ?_verificaMemoria:
   239                           	opt callstack 0
   240  000004                     _tecladoMatricial$624:
   241                           	opt callstack 0
   242  000004                     ___wmul@multiplicand:
   243                           	opt callstack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000004                     	ds	1
   247  000005                     ??_lcd:
   248  000005                     lcdTxt@txt:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x4
   252  000005                     	ds	1
   253  000006                     _tecladoMatricial$625:
   254                           	opt callstack 0
   255  000006                     ___wmul@product:
   256                           	opt callstack 0
   257  000006                     lcd@teclado:
   258                           	opt callstack 0
   259                           
   260                           ; 16 bytes @ 0x5
   261  000006                     	ds	1
   262  000007                     ??_lcdTxt:
   263                           
   264                           ; 1 bytes @ 0x6
   265  000007                     	ds	1
   266  000008                     _isspace$1330:
   267                           	opt callstack 0
   268  000008                     _tecladoMatricial$626:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x7
   272  000008                     	ds	1
   273  000009                     ?_atoi:
   274                           	opt callstack 0
   275  000009                     atoi@s:
   276                           	opt callstack 0
   277                           
   278                           ; 3 bytes @ 0x8
   279  000009                     	ds	1
   280  00000A                     _tecladoMatricial$627:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x9
   284  00000A                     	ds	2
   285  00000C                     ??_atoi:
   286  00000C                     _tecladoMatricial$628:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0xB
   290  00000C                     	ds	2
   291  00000E                     _tecladoMatricial$629:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0xD
   295  00000E                     	ds	2
   296  000010                     _tecladoMatricial$630:
   297                           	opt callstack 0
   298  000010                     atoi@neg:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0xF
   302  000010                     	ds	2
   303  000012                     _tecladoMatricial$631:
   304                           	opt callstack 0
   305  000012                     _atoi$1312:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x11
   309  000012                     	ds	2
   310  000014                     _tecladoMatricial$632:
   311                           	opt callstack 0
   312  000014                     _atoi$1314:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x13
   316  000014                     	ds	2
   317  000016                     _atoi$1313:
   318                           	opt callstack 0
   319  000016                     _tecladoMatricial$633:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x15
   323  000016                     	ds	1
   324  000017                     atoi@n:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x16
   328  000017                     	ds	1
   329  000018                     _tecladoMatricial$634:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x17
   333  000018                     	ds	2
   334  00001A                     _tecladoMatricial$635:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x19
   338  00001A                     	ds	2
   339  00001C                     tecladoMatricial@tecla:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x1B
   343  00001C                     	ds	2
   344  00001E                     ??_main:
   345                           
   346                           ; 1 bytes @ 0x1D
   347  00001E                     	ds	4
   348  000022                     main@senha:
   349                           	opt callstack 0
   350                           
   351                           ; 8 bytes @ 0x21
   352  000022                     	ds	8
   353  00002A                     main@senhaAtual:
   354                           	opt callstack 0
   355                           
   356                           ; 8 bytes @ 0x29
   357  00002A                     	ds	8
   358  000032                     main@senhaAdmin:
   359                           	opt callstack 0
   360                           
   361                           ; 8 bytes @ 0x31
   362  000032                     	ds	8
   363  00003A                     main@tecla:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x39
   367  00003A                     	ds	2
   368  00003C                     main@ctrl:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x3B
   372  00003C                     	ds	2
   373  00003E                     main@i_766:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x3D
   377  00003E                     	ds	2
   378  000040                     main@i_763:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x3F
   382  000040                     	ds	2
   383  000042                     main@i_765:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x41
   387  000042                     	ds	2
   388  000044                     main@i_769:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x43
   392  000044                     	ds	2
   393  000046                     main@i_770:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x45
   397  000046                     	ds	2
   398  000048                     main@i:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x47
   402  000048                     	ds	2
   403                           
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 290 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  i               2   69[COMRAM] int 
   414 ;;  i               2   67[COMRAM] int 
   415 ;;  i               2   61[COMRAM] int 
   416 ;;  i               2   65[COMRAM] int 
   417 ;;  i               2   63[COMRAM] int 
   418 ;;  i               2   71[COMRAM] int 
   419 ;;  senhaAdmin      8   49[COMRAM] int [4]
   420 ;;  senhaAtual      8   41[COMRAM] int [4]
   421 ;;  senha           8   33[COMRAM] int [4]
   422 ;;  ctrl            2   59[COMRAM] int 
   423 ;;  tecla           2   57[COMRAM] int 
   424 ;;  teclaAnterio    2    0        int 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   434 ;;      Params:         0       0       0       0       0       0       0       0       0
   435 ;;      Locals:        40       0       0       0       0       0       0       0       0
   436 ;;      Temps:          4       0       0       0       0       0       0       0       0
   437 ;;      Totals:        44       0       0       0       0       0       0       0       0
   438 ;;Total ram usage:       44 bytes
   439 ;; Hardware stack levels required when called:    7
   440 ;; This function calls:
   441 ;;		_EEPROM_Ler
   442 ;;		_WriteCmdXLCD
   443 ;;		_atoi
   444 ;;		_config_interrupcao
   445 ;;		_config_ldc
   446 ;;		_config_led
   447 ;;		_config_teclado
   448 ;;		_config_timer0
   449 ;;		_lcd
   450 ;;		_putsXLCD
   451 ;;		_tecladoMatricial
   452 ;;		_verificaMemoria
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text0
   459  00080E                     __ptext0:
   460                           	opt callstack 0
   461  00080E                     _main:
   462                           	opt callstack 24
   463                           
   464                           ;main.c: 292:     config_interrupcao();
   465                           
   466                           ;incstack = 0
   467  00080E  EC0B  F009         	call	_config_interrupcao	;wreg free
   468                           
   469                           ;main.c: 296:     config_timer0();
   470  000812  ECCB  F008         	call	_config_timer0	;wreg free
   471                           
   472                           ;main.c: 297:     config_led();
   473  000816  EC0F  F009         	call	_config_led	;wreg free
   474                           
   475                           ;main.c: 298:     config_teclado();
   476  00081A  ECBB  F008         	call	_config_teclado	;wreg free
   477                           
   478                           ;main.c: 299:     config_ldc();
   479  00081E  ECD8  F008         	call	_config_ldc	;wreg free
   480                           
   481                           ;main.c: 301:     WriteCmdXLCD(0x80);
   482  000822  0E80               	movlw	128
   483  000824  EC86  F007         	call	_WriteCmdXLCD
   484                           
   485                           ;main.c: 302:     putsXLCD("Fechadura");
   486  000828  0E01               	movlw	low STR_2
   487  00082A  6E03               	movwf	putsXLCD@buffer,c
   488  00082C  0E08               	movlw	high STR_2
   489  00082E  6E04               	movwf	putsXLCD@buffer+1,c
   490  000830  EC1E  F008         	call	_putsXLCD	;wreg free
   491                           
   492                           ;main.c: 303:     WriteCmdXLCD(0xC0);
   493  000834  0EC0               	movlw	192
   494  000836  EC86  F007         	call	_WriteCmdXLCD
   495                           
   496                           ;main.c: 304:     putsXLCD(":");
   497  00083A  0E0B               	movlw	low STR_1
   498  00083C  6E03               	movwf	putsXLCD@buffer,c
   499  00083E  0E08               	movlw	high STR_1
   500  000840  6E04               	movwf	putsXLCD@buffer+1,c
   501  000842  EC1E  F008         	call	_putsXLCD	;wreg free
   502                           
   503                           ;main.c: 305:     WriteCmdXLCD(0xC1);
   504  000846  0EC1               	movlw	193
   505  000848  EC86  F007         	call	_WriteCmdXLCD
   506                           
   507                           ;main.c: 307:     int tecla, teclaAnterior, senha[4];;main.c: 308:     int ctrl;;main.c:
      +                           309:     int senhaAtual[4], senhaAdmin[4];;main.c: 312:     if(verificaMemoria()){
   508  00084C  EC95  F008         	call	_verificaMemoria	;wreg free
   509  000850  5004               	movf	?_verificaMemoria,w,c
   510  000852  1005               	iorwf	?_verificaMemoria+1,w,c
   511  000854  B4D8               	btfsc	status,2,c
   512  000856  D02F               	goto	l1991
   513                           
   514                           ;main.c: 313:         for (int i = 0;i<4;i++){
   515  000858  0E00               	movlw	0
   516  00085A  6E49               	movwf	main@i+1,c
   517  00085C  0E00               	movlw	0
   518  00085E  6E48               	movwf	main@i,c
   519  000860                     l1985:
   520                           
   521                           ;main.c: 314:             senhaAtual[i] = 0;
   522  000860  90D8               	bcf	status,0,c
   523  000862  3448               	rlcf	main@i,w,c
   524  000864  6ED9               	movwf	fsr2l,c
   525  000866  3449               	rlcf	main@i+1,w,c
   526  000868  6EDA               	movwf	fsr2h,c
   527  00086A  0E2A               	movlw	low main@senhaAtual
   528  00086C  26D9               	addwf	fsr2l,f,c
   529  00086E  0E00               	movlw	high main@senhaAtual
   530  000870  22DA               	addwfc	fsr2h,f,c
   531  000872  0E00               	movlw	0
   532  000874  6EDE               	movwf	postinc2,c
   533  000876  0E00               	movlw	0
   534  000878  6EDD               	movwf	postdec2,c
   535                           
   536                           ;main.c: 315:             senhaAdmin[i] = i+1;
   537  00087A  0E01               	movlw	1
   538  00087C  2448               	addwf	main@i,w,c
   539  00087E  6E1E               	movwf	??_main& (0+255),c
   540  000880  0E00               	movlw	0
   541  000882  2049               	addwfc	main@i+1,w,c
   542  000884  6E1F               	movwf	(??_main+1)& (0+255),c
   543  000886  90D8               	bcf	status,0,c
   544  000888  3448               	rlcf	main@i,w,c
   545  00088A  6ED9               	movwf	fsr2l,c
   546  00088C  3449               	rlcf	main@i+1,w,c
   547  00088E  6EDA               	movwf	fsr2h,c
   548  000890  0E32               	movlw	low main@senhaAdmin
   549  000892  26D9               	addwf	fsr2l,f,c
   550  000894  0E00               	movlw	high main@senhaAdmin
   551  000896  22DA               	addwfc	fsr2h,f,c
   552  000898  C01E  FFDE         	movff	??_main,postinc2
   553  00089C  C01F  FFDD         	movff	??_main+1,postdec2
   554                           
   555                           ;main.c: 316:         }
   556  0008A0  4A48               	infsnz	main@i,f,c
   557  0008A2  2A49               	incf	main@i+1,f,c
   558  0008A4  BE49               	btfsc	main@i+1,7,c
   559  0008A6  D7DC               	goto	l1985
   560  0008A8  5049               	movf	main@i+1,w,c
   561  0008AA  E15D               	bnz	l2015
   562  0008AC  0E04               	movlw	4
   563  0008AE  5C48               	subwf	main@i,w,c
   564  0008B0  B0D8               	btfsc	status,0,c
   565  0008B2  D059               	goto	u1140
   566  0008B4  D7D5               	goto	l1985
   567  0008B6                     l1991:
   568                           
   569                           ;main.c: 318:         for (int i = 1;i<5;i++){
   570  0008B6  0E00               	movlw	0
   571  0008B8  6E41               	movwf	main@i_763+1,c
   572  0008BA  0E01               	movlw	1
   573  0008BC  6E40               	movwf	main@i_763,c
   574  0008BE                     l1997:
   575                           
   576                           ;main.c: 319:             senhaAtual[i] = atoi(EEPROM_Ler(i));
   577  0008BE  C040  F002         	movff	main@i_763,EEPROM_Ler@dir
   578  0008C2  C041  F003         	movff	main@i_763+1,EEPROM_Ler@dir+1
   579  0008C6  ECFF  F008         	call	_EEPROM_Ler	;wreg free
   580  0008CA  6E1E               	movwf	??_main& (0+255),c
   581  0008CC  6A1F               	clrf	(??_main+1)& (0+255),c
   582  0008CE  6A20               	clrf	(??_main+2)& (0+255),c
   583  0008D0  C01E  F009         	movff	??_main,atoi@s
   584  0008D4  C01F  F00A         	movff	??_main+1,atoi@s+1
   585  0008D8  C020  F00B         	movff	??_main+2,atoi@s+2
   586  0008DC  ECFB  F005         	call	_atoi	;wreg free
   587  0008E0  90D8               	bcf	status,0,c
   588  0008E2  3440               	rlcf	main@i_763,w,c
   589  0008E4  6ED9               	movwf	fsr2l,c
   590  0008E6  3441               	rlcf	main@i_763+1,w,c
   591  0008E8  6EDA               	movwf	fsr2h,c
   592  0008EA  0E2A               	movlw	low main@senhaAtual
   593  0008EC  26D9               	addwf	fsr2l,f,c
   594  0008EE  0E00               	movlw	high main@senhaAtual
   595  0008F0  22DA               	addwfc	fsr2h,f,c
   596  0008F2  C009  FFDE         	movff	?_atoi,postinc2
   597  0008F6  C00A  FFDD         	movff	?_atoi+1,postdec2
   598                           
   599                           ;main.c: 320:         }
   600  0008FA  4A40               	infsnz	main@i_763,f,c
   601  0008FC  2A41               	incf	main@i_763+1,f,c
   602  0008FE  BE41               	btfsc	main@i_763+1,7,c
   603  000900  D7DE               	goto	l1997
   604  000902  5041               	movf	main@i_763+1,w,c
   605  000904  E104               	bnz	u1130
   606  000906  0E05               	movlw	5
   607  000908  5C40               	subwf	main@i_763,w,c
   608  00090A  A0D8               	btfss	status,0,c
   609  00090C  D7D8               	goto	l1997
   610  00090E                     u1130:
   611                           
   612                           ;main.c: 321:         for (int i = 5;i<9;i++){
   613  00090E  0E00               	movlw	0
   614  000910  6E43               	movwf	main@i_765+1,c
   615  000912  0E05               	movlw	5
   616  000914  6E42               	movwf	main@i_765,c
   617  000916                     l2009:
   618                           
   619                           ;main.c: 322:             senhaAdmin[i] = atoi(EEPROM_Ler(i));
   620  000916  C042  F002         	movff	main@i_765,EEPROM_Ler@dir
   621  00091A  C043  F003         	movff	main@i_765+1,EEPROM_Ler@dir+1
   622  00091E  ECFF  F008         	call	_EEPROM_Ler	;wreg free
   623  000922  6E1E               	movwf	??_main& (0+255),c
   624  000924  6A1F               	clrf	(??_main+1)& (0+255),c
   625  000926  6A20               	clrf	(??_main+2)& (0+255),c
   626  000928  C01E  F009         	movff	??_main,atoi@s
   627  00092C  C01F  F00A         	movff	??_main+1,atoi@s+1
   628  000930  C020  F00B         	movff	??_main+2,atoi@s+2
   629  000934  ECFB  F005         	call	_atoi	;wreg free
   630  000938  90D8               	bcf	status,0,c
   631  00093A  3442               	rlcf	main@i_765,w,c
   632  00093C  6ED9               	movwf	fsr2l,c
   633  00093E  3443               	rlcf	main@i_765+1,w,c
   634  000940  6EDA               	movwf	fsr2h,c
   635  000942  0E32               	movlw	low main@senhaAdmin
   636  000944  26D9               	addwf	fsr2l,f,c
   637  000946  0E00               	movlw	high main@senhaAdmin
   638  000948  22DA               	addwfc	fsr2h,f,c
   639  00094A  C009  FFDE         	movff	?_atoi,postinc2
   640  00094E  C00A  FFDD         	movff	?_atoi+1,postdec2
   641                           
   642                           ;main.c: 323:         }
   643  000952  4A42               	infsnz	main@i_765,f,c
   644  000954  2A43               	incf	main@i_765+1,f,c
   645  000956  BE43               	btfsc	main@i_765+1,7,c
   646  000958  D7DE               	goto	l2009
   647  00095A  5043               	movf	main@i_765+1,w,c
   648  00095C  E104               	bnz	l2015
   649  00095E  0E09               	movlw	9
   650  000960  5C42               	subwf	main@i_765,w,c
   651  000962  A0D8               	btfss	status,0,c
   652  000964  D7D8               	goto	l2009
   653  000966                     u1140:
   654  000966                     l2015:
   655                           
   656                           ;main.c: 330:         for(int i =0; i<4;i++){
   657  000966  0E00               	movlw	0
   658  000968  6E3F               	movwf	main@i_766+1,c
   659  00096A  0E00               	movlw	0
   660  00096C  6E3E               	movwf	main@i_766,c
   661  00096E                     l2021:
   662                           
   663                           ;main.c: 331:             tecla = tecladoMatricial();
   664  00096E  EC46  F005         	call	_tecladoMatricial	;wreg free
   665  000972  C002  F03A         	movff	?_tecladoMatricial,main@tecla
   666  000976  C003  F03B         	movff	?_tecladoMatricial+1,main@tecla+1
   667                           
   668                           ;main.c: 332:             lcd(tecla);
   669  00097A  C03A  F003         	movff	main@tecla,lcd@tecla
   670  00097E  C03B  F004         	movff	main@tecla+1,lcd@tecla+1
   671  000982  EC01  F007         	call	_lcd	;wreg free
   672                           
   673                           ;main.c: 333:             senha[i]=tecla;
   674  000986  90D8               	bcf	status,0,c
   675  000988  343E               	rlcf	main@i_766,w,c
   676  00098A  6ED9               	movwf	fsr2l,c
   677  00098C  343F               	rlcf	main@i_766+1,w,c
   678  00098E  6EDA               	movwf	fsr2h,c
   679  000990  0E22               	movlw	low main@senha
   680  000992  26D9               	addwf	fsr2l,f,c
   681  000994  0E00               	movlw	high main@senha
   682  000996  22DA               	addwfc	fsr2h,f,c
   683  000998  C03A  FFDE         	movff	main@tecla,postinc2
   684  00099C  C03B  FFDD         	movff	main@tecla+1,postdec2
   685                           
   686                           ;main.c: 334:         }
   687  0009A0  4A3E               	infsnz	main@i_766,f,c
   688  0009A2  2A3F               	incf	main@i_766+1,f,c
   689  0009A4  BE3F               	btfsc	main@i_766+1,7,c
   690  0009A6  D7E3               	goto	l2021
   691  0009A8  503F               	movf	main@i_766+1,w,c
   692  0009AA  E104               	bnz	u1150
   693  0009AC  0E04               	movlw	4
   694  0009AE  5C3E               	subwf	main@i_766,w,c
   695  0009B0  A0D8               	btfss	status,0,c
   696  0009B2  D7DD               	goto	l2021
   697  0009B4                     u1150:
   698                           
   699                           ;main.c: 336:         ctrl = 1;
   700  0009B4  0E00               	movlw	0
   701  0009B6  6E3D               	movwf	main@ctrl+1,c
   702  0009B8  0E01               	movlw	1
   703  0009BA  6E3C               	movwf	main@ctrl,c
   704                           
   705                           ;main.c: 337:         for(int i=0;i<4;i++){
   706  0009BC  0E00               	movlw	0
   707  0009BE  6E45               	movwf	main@i_769+1,c
   708  0009C0  0E00               	movlw	0
   709  0009C2  6E44               	movwf	main@i_769,c
   710  0009C4                     l2037:
   711                           
   712                           ;main.c: 338:             if(senha[i] != senhaAtual[i]){
   713  0009C4  90D8               	bcf	status,0,c
   714  0009C6  3444               	rlcf	main@i_769,w,c
   715  0009C8  6ED9               	movwf	fsr2l,c
   716  0009CA  3445               	rlcf	main@i_769+1,w,c
   717  0009CC  6EDA               	movwf	fsr2h,c
   718  0009CE  0E2A               	movlw	low main@senhaAtual
   719  0009D0  26D9               	addwf	fsr2l,f,c
   720  0009D2  0E00               	movlw	high main@senhaAtual
   721  0009D4  22DA               	addwfc	fsr2h,f,c
   722  0009D6  90D8               	bcf	status,0,c
   723  0009D8  3444               	rlcf	main@i_769,w,c
   724  0009DA  6EE1               	movwf	fsr1l,c
   725  0009DC  3445               	rlcf	main@i_769+1,w,c
   726  0009DE  6EE2               	movwf	fsr1h,c
   727  0009E0  0E22               	movlw	low main@senha
   728  0009E2  26E1               	addwf	fsr1l,f,c
   729  0009E4  0E00               	movlw	high main@senha
   730  0009E6  22E2               	addwfc	fsr1h,f,c
   731  0009E8  50DE               	movf	postinc2,w,c
   732  0009EA  18E6               	xorwf	postinc1,w,c
   733  0009EC  E104               	bnz	u1160
   734  0009EE  50DE               	movf	postinc2,w,c
   735  0009F0  18E6               	xorwf	postinc1,w,c
   736  0009F2  B4D8               	btfsc	status,2,c
   737  0009F4  D004               	goto	l2041
   738  0009F6                     u1160:
   739                           
   740                           ;main.c: 339:                 ctrl = 2;
   741  0009F6  0E00               	movlw	0
   742  0009F8  6E3D               	movwf	main@ctrl+1,c
   743  0009FA  0E02               	movlw	2
   744  0009FC  6E3C               	movwf	main@ctrl,c
   745  0009FE                     l2041:
   746                           
   747                           ;main.c: 341:         }
   748  0009FE  4A44               	infsnz	main@i_769,f,c
   749  000A00  2A45               	incf	main@i_769+1,f,c
   750  000A02  BE45               	btfsc	main@i_769+1,7,c
   751  000A04  D7DF               	goto	l2037
   752  000A06  5045               	movf	main@i_769+1,w,c
   753  000A08  E104               	bnz	u1170
   754  000A0A  0E04               	movlw	4
   755  000A0C  5C44               	subwf	main@i_769,w,c
   756  000A0E  A0D8               	btfss	status,0,c
   757  000A10  D7D9               	goto	l2037
   758  000A12                     u1170:
   759                           
   760                           ;main.c: 343:         for(int i=0;i<4;i++){
   761  000A12  0E00               	movlw	0
   762  000A14  6E47               	movwf	main@i_770+1,c
   763  000A16  0E00               	movlw	0
   764  000A18  6E46               	movwf	main@i_770,c
   765  000A1A                     l2051:
   766                           
   767                           ;main.c: 344:             if(senha[i] != senhaAdmin[i]){
   768  000A1A  90D8               	bcf	status,0,c
   769  000A1C  3446               	rlcf	main@i_770,w,c
   770  000A1E  6ED9               	movwf	fsr2l,c
   771  000A20  3447               	rlcf	main@i_770+1,w,c
   772  000A22  6EDA               	movwf	fsr2h,c
   773  000A24  0E32               	movlw	low main@senhaAdmin
   774  000A26  26D9               	addwf	fsr2l,f,c
   775  000A28  0E00               	movlw	high main@senhaAdmin
   776  000A2A  22DA               	addwfc	fsr2h,f,c
   777  000A2C  90D8               	bcf	status,0,c
   778  000A2E  3446               	rlcf	main@i_770,w,c
   779  000A30  6EE1               	movwf	fsr1l,c
   780  000A32  3447               	rlcf	main@i_770+1,w,c
   781  000A34  6EE2               	movwf	fsr1h,c
   782  000A36  0E22               	movlw	low main@senha
   783  000A38  26E1               	addwf	fsr1l,f,c
   784  000A3A  0E00               	movlw	high main@senha
   785  000A3C  22E2               	addwfc	fsr1h,f,c
   786  000A3E  50DE               	movf	postinc2,w,c
   787  000A40  18E6               	xorwf	postinc1,w,c
   788  000A42  E104               	bnz	u1180
   789  000A44  50DE               	movf	postinc2,w,c
   790  000A46  18E6               	xorwf	postinc1,w,c
   791  000A48  B4D8               	btfsc	status,2,c
   792  000A4A  D004               	goto	l2055
   793  000A4C                     u1180:
   794                           
   795                           ;main.c: 345:                 ctrl = 0;
   796  000A4C  0E00               	movlw	0
   797  000A4E  6E3D               	movwf	main@ctrl+1,c
   798  000A50  0E00               	movlw	0
   799  000A52  6E3C               	movwf	main@ctrl,c
   800  000A54                     l2055:
   801                           
   802                           ;main.c: 347:         }
   803  000A54  4A46               	infsnz	main@i_770,f,c
   804  000A56  2A47               	incf	main@i_770+1,f,c
   805  000A58  BE47               	btfsc	main@i_770+1,7,c
   806  000A5A  D7DF               	goto	l2051
   807  000A5C  5047               	movf	main@i_770+1,w,c
   808  000A5E  E104               	bnz	u1190
   809  000A60  0E04               	movlw	4
   810  000A62  5C46               	subwf	main@i_770,w,c
   811  000A64  A0D8               	btfss	status,0,c
   812  000A66  D7D9               	goto	l2051
   813  000A68                     u1190:
   814                           
   815                           ;main.c: 349:         if(ctrl == 1){
   816  000A68  043C               	decf	main@ctrl,w,c
   817  000A6A  103D               	iorwf	main@ctrl+1,w,c
   818  000A6C  A4D8               	btfss	status,2,c
   819  000A6E  D77B               	goto	u1140
   820                           
   821                           ;main.c: 352:             PORTCbits.RC6 = 1;
   822  000A70  8C82               	bsf	3970,6,c	;volatile
   823                           
   824                           ;main.c: 353:             _delay((unsigned long)((100)*(20000000/4000.0)));
   825  000A72  0E03               	movlw	3
   826  000A74  6E1F               	movwf	(??_main+1)& (0+255),c
   827  000A76  0E8A               	movlw	138
   828  000A78  6E1E               	movwf	??_main& (0+255),c
   829  000A7A  0E56               	movlw	86
   830  000A7C                     u1217:
   831  000A7C  2EE8               	decfsz	wreg,f,c
   832  000A7E  D7FE               	bra	u1217
   833  000A80  2E1E               	decfsz	??_main& (0+255),f,c
   834  000A82  D7FC               	bra	u1217
   835  000A84  2E1F               	decfsz	(??_main+1)& (0+255),f,c
   836  000A86  D7FA               	bra	u1217
   837                           
   838                           ;main.c: 354:             PORTCbits.RC6 = 0;
   839  000A88  9C82               	bcf	3970,6,c	;volatile
   840  000A8A  D76D               	goto	u1140
   841  000A8C                     __end_of_main:
   842                           	opt callstack 0
   843                           
   844 ;; *************** function _verificaMemoria *****************
   845 ;; Defined at:
   846 ;;		line 283 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2    3[COMRAM] int 
   853 ;; Registers used:
   854 ;;		wreg, status,2, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         2       0       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         2       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        2 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    3
   867 ;; This function calls:
   868 ;;		_EEPROM_Ler
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text1
   875  00112A                     __ptext1:
   876                           	opt callstack 0
   877  00112A                     _verificaMemoria:
   878                           	opt callstack 27
   879                           
   880                           ;main.c: 284:     if(EEPROM_Ler(0)=='S'){
   881                           
   882                           ;incstack = 0
   883  00112A  0E00               	movlw	0
   884  00112C  6E03               	movwf	EEPROM_Ler@dir+1,c
   885  00112E  0E00               	movlw	0
   886  001130  6E02               	movwf	EEPROM_Ler@dir,c
   887  001132  ECFF  F008         	call	_EEPROM_Ler	;wreg free
   888  001136  0A53               	xorlw	83
   889  001138  A4D8               	btfss	status,2,c
   890  00113A  D005               	goto	l1913
   891                           
   892                           ;main.c: 285:         return 0;
   893  00113C  0E00               	movlw	0
   894  00113E  6E05               	movwf	?_verificaMemoria+1,c
   895  001140  0E00               	movlw	0
   896  001142  6E04               	movwf	?_verificaMemoria,c
   897  001144  0012               	return	
   898  001146                     l1913:
   899  001146  0E00               	movlw	0
   900  001148  6E05               	movwf	?_verificaMemoria+1,c
   901  00114A  0E01               	movlw	1
   902  00114C  6E04               	movwf	?_verificaMemoria,c
   903  00114E  0012               	return		;funcret
   904  001150                     __end_of_verificaMemoria:
   905                           	opt callstack 0
   906                           
   907 ;; *************** function _EEPROM_Ler *****************
   908 ;; Defined at:
   909 ;;		line 275 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  dir             2    1[COMRAM] int 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      unsigned char 
   916 ;; Registers used:
   917 ;;		wreg, status,2
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         2       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         2       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        2 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    2
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_verificaMemoria
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text2
   939  0011FE                     __ptext2:
   940                           	opt callstack 0
   941  0011FE                     _EEPROM_Ler:
   942                           	opt callstack 27
   943                           
   944                           ;main.c: 276:     EEADR = dir;
   945                           
   946                           ;incstack = 0
   947  0011FE  C002  FFA9         	movff	EEPROM_Ler@dir,4009	;volatile
   948                           
   949                           ;main.c: 277:     EECON1bits.EEPGD = 0;
   950  001202  9EA6               	bcf	4006,7,c	;volsfr
   951                           
   952                           ;main.c: 278:     EECON1bits.CFGS = 0;
   953  001204  9CA6               	bcf	4006,6,c	;volsfr
   954                           
   955                           ;main.c: 279:     EECON1bits.RD = 1;
   956  001206  80A6               	bsf	4006,0,c	;volsfr
   957                           
   958                           ;main.c: 280:     return EEDATA;
   959  001208  50A8               	movf	4008,w,c	;volatile
   960  00120A  0012               	return		;funcret
   961  00120C                     __end_of_EEPROM_Ler:
   962                           	opt callstack 0
   963                           
   964 ;; *************** function _tecladoMatricial *****************
   965 ;; Defined at:
   966 ;;		line 136 in file "main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  tecla           2   27[COMRAM] int 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2    1[COMRAM] int 
   973 ;; Registers used:
   974 ;;		wreg, status,2
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         2       0       0       0       0       0       0       0       0
   981 ;;      Locals:        26       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:        28       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:       28 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    2
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text3
   995  000A8C                     __ptext3:
   996                           	opt callstack 0
   997  000A8C                     _tecladoMatricial:
   998                           	opt callstack 28
   999                           
  1000                           ;main.c: 137:     int tecla;;main.c: 138:     if(!PORTBbits.RB3){
  1001                           
  1002                           ;incstack = 0
  1003  000A8C  B681               	btfsc	3969,3,c	;volatile
  1004  000A8E  D02A               	goto	l81
  1005                           
  1006                           ;main.c: 139:         tecla = !PORTBbits.RB4 ? 0:
  1007  000A90  A881               	btfss	3969,4,c	;volatile
  1008  000A92  D024               	goto	l1823
  1009  000A94  AA81               	btfss	3969,5,c	;volatile
  1010  000A96  D019               	goto	l1819
  1011  000A98  AC81               	btfss	3969,6,c	;volatile
  1012  000A9A  D00E               	goto	l1815
  1013  000A9C  AE81               	btfss	3969,7,c	;volatile
  1014  000A9E  D003               	goto	l1811
  1015  000AA0  6808               	setf	_tecladoMatricial$626,c
  1016  000AA2  6809               	setf	_tecladoMatricial$626+1,c
  1017  000AA4  D004               	goto	l1813
  1018  000AA6                     l1811:
  1019  000AA6  0E00               	movlw	0
  1020  000AA8  6E09               	movwf	_tecladoMatricial$626+1,c
  1021  000AAA  0E0C               	movlw	12
  1022  000AAC  6E08               	movwf	_tecladoMatricial$626,c
  1023  000AAE                     l1813:
  1024  000AAE  C008  F006         	movff	_tecladoMatricial$626,_tecladoMatricial$625
  1025  000AB2  C009  F007         	movff	_tecladoMatricial$626+1,_tecladoMatricial$625+1
  1026  000AB6  D004               	goto	l1817
  1027  000AB8                     l1815:
  1028  000AB8  0E00               	movlw	0
  1029  000ABA  6E07               	movwf	_tecladoMatricial$625+1,c
  1030  000ABC  0E08               	movlw	8
  1031  000ABE  6E06               	movwf	_tecladoMatricial$625,c
  1032  000AC0                     l1817:
  1033  000AC0  C006  F004         	movff	_tecladoMatricial$625,_tecladoMatricial$624
  1034  000AC4  C007  F005         	movff	_tecladoMatricial$625+1,_tecladoMatricial$624+1
  1035  000AC8  D004               	goto	l1821
  1036  000ACA                     l1819:
  1037  000ACA  0E00               	movlw	0
  1038  000ACC  6E05               	movwf	_tecladoMatricial$624+1,c
  1039  000ACE  0E04               	movlw	4
  1040  000AD0  6E04               	movwf	_tecladoMatricial$624,c
  1041  000AD2                     l1821:
  1042  000AD2  C004  F01C         	movff	_tecladoMatricial$624,tecladoMatricial@tecla
  1043  000AD6  C005  F01D         	movff	_tecladoMatricial$624+1,tecladoMatricial@tecla+1
  1044  000ADA  D088               	goto	l1897
  1045  000ADC                     l1823:
  1046  000ADC  0E00               	movlw	0
  1047  000ADE  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1048  000AE0  0E00               	movlw	0
  1049  000AE2  D083               	goto	L1
  1050  000AE4                     l81:
  1051  000AE4  B481               	btfsc	3969,2,c	;volatile
  1052  000AE6  D02A               	goto	l99
  1053                           
  1054                           ;main.c: 144:         tecla = !PORTBbits.RB4 ? 1:
  1055  000AE8  A881               	btfss	3969,4,c	;volatile
  1056  000AEA  D024               	goto	l1847
  1057  000AEC  AA81               	btfss	3969,5,c	;volatile
  1058  000AEE  D019               	goto	l1843
  1059  000AF0  AC81               	btfss	3969,6,c	;volatile
  1060  000AF2  D00E               	goto	l1839
  1061  000AF4  AE81               	btfss	3969,7,c	;volatile
  1062  000AF6  D003               	goto	l1835
  1063  000AF8  680E               	setf	_tecladoMatricial$629,c
  1064  000AFA  680F               	setf	_tecladoMatricial$629+1,c
  1065  000AFC  D004               	goto	l1837
  1066  000AFE                     l1835:
  1067  000AFE  0E00               	movlw	0
  1068  000B00  6E0F               	movwf	_tecladoMatricial$629+1,c
  1069  000B02  0E0D               	movlw	13
  1070  000B04  6E0E               	movwf	_tecladoMatricial$629,c
  1071  000B06                     l1837:
  1072  000B06  C00E  F00C         	movff	_tecladoMatricial$629,_tecladoMatricial$628
  1073  000B0A  C00F  F00D         	movff	_tecladoMatricial$629+1,_tecladoMatricial$628+1
  1074  000B0E  D004               	goto	l1841
  1075  000B10                     l1839:
  1076  000B10  0E00               	movlw	0
  1077  000B12  6E0D               	movwf	_tecladoMatricial$628+1,c
  1078  000B14  0E09               	movlw	9
  1079  000B16  6E0C               	movwf	_tecladoMatricial$628,c
  1080  000B18                     l1841:
  1081  000B18  C00C  F00A         	movff	_tecladoMatricial$628,_tecladoMatricial$627
  1082  000B1C  C00D  F00B         	movff	_tecladoMatricial$628+1,_tecladoMatricial$627+1
  1083  000B20  D004               	goto	l1845
  1084  000B22                     l1843:
  1085  000B22  0E00               	movlw	0
  1086  000B24  6E0B               	movwf	_tecladoMatricial$627+1,c
  1087  000B26  0E05               	movlw	5
  1088  000B28  6E0A               	movwf	_tecladoMatricial$627,c
  1089  000B2A                     l1845:
  1090  000B2A  C00A  F01C         	movff	_tecladoMatricial$627,tecladoMatricial@tecla
  1091  000B2E  C00B  F01D         	movff	_tecladoMatricial$627+1,tecladoMatricial@tecla+1
  1092  000B32  D05C               	goto	l1897
  1093  000B34                     l1847:
  1094  000B34  0E00               	movlw	0
  1095  000B36  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1096  000B38  0E01               	movlw	1
  1097  000B3A  D057               	goto	L1
  1098  000B3C                     l99:
  1099  000B3C  B281               	btfsc	3969,1,c	;volatile
  1100  000B3E  D02A               	goto	l117
  1101                           
  1102                           ;main.c: 149:         tecla = !PORTBbits.RB4 ? 2:
  1103  000B40  A881               	btfss	3969,4,c	;volatile
  1104  000B42  D024               	goto	l1871
  1105  000B44  AA81               	btfss	3969,5,c	;volatile
  1106  000B46  D019               	goto	l1867
  1107  000B48  AC81               	btfss	3969,6,c	;volatile
  1108  000B4A  D00E               	goto	l1863
  1109  000B4C  AE81               	btfss	3969,7,c	;volatile
  1110  000B4E  D003               	goto	l1859
  1111  000B50  6814               	setf	_tecladoMatricial$632,c
  1112  000B52  6815               	setf	_tecladoMatricial$632+1,c
  1113  000B54  D004               	goto	l1861
  1114  000B56                     l1859:
  1115  000B56  0E00               	movlw	0
  1116  000B58  6E15               	movwf	_tecladoMatricial$632+1,c
  1117  000B5A  0E0E               	movlw	14
  1118  000B5C  6E14               	movwf	_tecladoMatricial$632,c
  1119  000B5E                     l1861:
  1120  000B5E  C014  F012         	movff	_tecladoMatricial$632,_tecladoMatricial$631
  1121  000B62  C015  F013         	movff	_tecladoMatricial$632+1,_tecladoMatricial$631+1
  1122  000B66  D004               	goto	l1865
  1123  000B68                     l1863:
  1124  000B68  0E00               	movlw	0
  1125  000B6A  6E13               	movwf	_tecladoMatricial$631+1,c
  1126  000B6C  0E0A               	movlw	10
  1127  000B6E  6E12               	movwf	_tecladoMatricial$631,c
  1128  000B70                     l1865:
  1129  000B70  C012  F010         	movff	_tecladoMatricial$631,_tecladoMatricial$630
  1130  000B74  C013  F011         	movff	_tecladoMatricial$631+1,_tecladoMatricial$630+1
  1131  000B78  D004               	goto	l1869
  1132  000B7A                     l1867:
  1133  000B7A  0E00               	movlw	0
  1134  000B7C  6E11               	movwf	_tecladoMatricial$630+1,c
  1135  000B7E  0E06               	movlw	6
  1136  000B80  6E10               	movwf	_tecladoMatricial$630,c
  1137  000B82                     l1869:
  1138  000B82  C010  F01C         	movff	_tecladoMatricial$630,tecladoMatricial@tecla
  1139  000B86  C011  F01D         	movff	_tecladoMatricial$630+1,tecladoMatricial@tecla+1
  1140  000B8A  D030               	goto	l1897
  1141  000B8C                     l1871:
  1142  000B8C  0E00               	movlw	0
  1143  000B8E  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1144  000B90  0E02               	movlw	2
  1145  000B92  D02B               	goto	L1
  1146  000B94                     l117:
  1147  000B94  B081               	btfsc	3969,0,c	;volatile
  1148  000B96  D02A               	goto	l1897
  1149                           
  1150                           ;main.c: 154:         tecla = !PORTBbits.RB4 ? 3:
  1151  000B98  A881               	btfss	3969,4,c	;volatile
  1152  000B9A  D024               	goto	l1895
  1153  000B9C  AA81               	btfss	3969,5,c	;volatile
  1154  000B9E  D019               	goto	l1891
  1155  000BA0  AC81               	btfss	3969,6,c	;volatile
  1156  000BA2  D00E               	goto	l1887
  1157  000BA4  AE81               	btfss	3969,7,c	;volatile
  1158  000BA6  D003               	goto	l1883
  1159  000BA8  681A               	setf	_tecladoMatricial$635,c
  1160  000BAA  681B               	setf	_tecladoMatricial$635+1,c
  1161  000BAC  D004               	goto	l1885
  1162  000BAE                     l1883:
  1163  000BAE  0E00               	movlw	0
  1164  000BB0  6E1B               	movwf	_tecladoMatricial$635+1,c
  1165  000BB2  0E0F               	movlw	15
  1166  000BB4  6E1A               	movwf	_tecladoMatricial$635,c
  1167  000BB6                     l1885:
  1168  000BB6  C01A  F018         	movff	_tecladoMatricial$635,_tecladoMatricial$634
  1169  000BBA  C01B  F019         	movff	_tecladoMatricial$635+1,_tecladoMatricial$634+1
  1170  000BBE  D004               	goto	l1889
  1171  000BC0                     l1887:
  1172  000BC0  0E00               	movlw	0
  1173  000BC2  6E19               	movwf	_tecladoMatricial$634+1,c
  1174  000BC4  0E0B               	movlw	11
  1175  000BC6  6E18               	movwf	_tecladoMatricial$634,c
  1176  000BC8                     l1889:
  1177  000BC8  C018  F016         	movff	_tecladoMatricial$634,_tecladoMatricial$633
  1178  000BCC  C019  F017         	movff	_tecladoMatricial$634+1,_tecladoMatricial$633+1
  1179  000BD0  D004               	goto	l1893
  1180  000BD2                     l1891:
  1181  000BD2  0E00               	movlw	0
  1182  000BD4  6E17               	movwf	_tecladoMatricial$633+1,c
  1183  000BD6  0E07               	movlw	7
  1184  000BD8  6E16               	movwf	_tecladoMatricial$633,c
  1185  000BDA                     l1893:
  1186  000BDA  C016  F01C         	movff	_tecladoMatricial$633,tecladoMatricial@tecla
  1187  000BDE  C017  F01D         	movff	_tecladoMatricial$633+1,tecladoMatricial@tecla+1
  1188  000BE2  D004               	goto	l1897
  1189  000BE4                     l1895:
  1190  000BE4  0E00               	movlw	0
  1191  000BE6  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1192  000BE8  0E03               	movlw	3
  1193  000BEA                     L1:
  1194  000BEA  6E1C               	movwf	tecladoMatricial@tecla,c
  1195  000BEC                     l1897:
  1196                           
  1197                           ;main.c: 159:     return tecla;
  1198  000BEC  C01C  F002         	movff	tecladoMatricial@tecla,?_tecladoMatricial
  1199  000BF0  C01D  F003         	movff	tecladoMatricial@tecla+1,?_tecladoMatricial+1
  1200  000BF4  0012               	return		;funcret
  1201  000BF6                     __end_of_tecladoMatricial:
  1202                           	opt callstack 0
  1203                           
  1204 ;; *************** function _lcd *****************
  1205 ;; Defined at:
  1206 ;;		line 94 in file "main.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  tecla           2    2[COMRAM] int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  teclado        16    5[COMRAM] unsigned char [16]
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         2       0       0       0       0       0       0       0       0
  1221 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1223 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:       19 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    4
  1227 ;; This function calls:
  1228 ;;		_BusyXLCD
  1229 ;;		_WriteCmdXLCD
  1230 ;;		_WriteDataXLCD
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text4
  1237  000E02                     __ptext4:
  1238                           	opt callstack 0
  1239  000E02                     _lcd:
  1240                           	opt callstack 26
  1241                           
  1242                           ;main.c: 95:     char teclado[16] = {
  1243                           
  1244                           ;incstack = 0
  1245  000E02  EE20  F04A         	lfsr	2,lcd@F3185
  1246  000E06  EE10  F006         	lfsr	1,lcd@teclado
  1247  000E0A  0E0F               	movlw	15
  1248  000E0C                     u781:
  1249  000E0C  CFDB FFE3          	movff	plusw2,plusw1
  1250  000E10  06E8               	decf	wreg,f,c
  1251  000E12  E2FC               	bc	u781
  1252                           
  1253                           ;main.c: 102:     if(tecla != -1){
  1254  000E14  2803               	incf	lcd@tecla,w,c
  1255  000E16  E103               	bnz	u790
  1256  000E18  2804               	incf	lcd@tecla+1,w,c
  1257  000E1A  B4D8               	btfsc	status,2,c
  1258  000E1C  D02B               	goto	l1795
  1259  000E1E                     u790:
  1260                           
  1261                           ;main.c: 103:         if(teclado[tecla] == '*'){
  1262  000E1E  0E06               	movlw	low lcd@teclado
  1263  000E20  2403               	addwf	lcd@tecla,w,c
  1264  000E22  6ED9               	movwf	fsr2l,c
  1265  000E24  0E00               	movlw	high lcd@teclado
  1266  000E26  2004               	addwfc	lcd@tecla+1,w,c
  1267  000E28  6EDA               	movwf	fsr2h,c
  1268  000E2A  0E2A               	movlw	42
  1269  000E2C  18DE               	xorwf	postinc2,w,c
  1270  000E2E  A4D8               	btfss	status,2,c
  1271  000E30  D004               	goto	l1783
  1272                           
  1273                           ;main.c: 104:             cursor--;
  1274  000E32  065A               	decf	_cursor,f,c
  1275  000E34  A0D8               	btfss	status,0,c
  1276  000E36  065B               	decf	_cursor+1,f,c
  1277                           
  1278                           ;main.c: 105:         }else if(teclado[tecla] == '#'){
  1279  000E38  D01A               	goto	l1793
  1280  000E3A                     l1783:
  1281  000E3A  0E06               	movlw	low lcd@teclado
  1282  000E3C  2403               	addwf	lcd@tecla,w,c
  1283  000E3E  6ED9               	movwf	fsr2l,c
  1284  000E40  0E00               	movlw	high lcd@teclado
  1285  000E42  2004               	addwfc	lcd@tecla+1,w,c
  1286  000E44  6EDA               	movwf	fsr2h,c
  1287  000E46  0E23               	movlw	35
  1288  000E48  18DE               	xorwf	postinc2,w,c
  1289  000E4A  A4D8               	btfss	status,2,c
  1290  000E4C  D003               	goto	l1787
  1291  000E4E                     u810:
  1292                           
  1293                           ;main.c: 106:             cursor++;
  1294  000E4E  4A5A               	infsnz	_cursor,f,c
  1295  000E50  2A5B               	incf	_cursor+1,f,c
  1296                           
  1297                           ;main.c: 107:         }else{
  1298  000E52  D00D               	goto	l1793
  1299  000E54                     l1787:
  1300                           
  1301                           ;main.c: 108:             WriteCmdXLCD(cursor);
  1302  000E54  505A               	movf	_cursor,w,c
  1303  000E56  EC86  F007         	call	_WriteCmdXLCD
  1304                           
  1305                           ;main.c: 109:             WriteDataXLCD(teclado[tecla]);
  1306  000E5A  0E06               	movlw	low lcd@teclado
  1307  000E5C  2403               	addwf	lcd@tecla,w,c
  1308  000E5E  6ED9               	movwf	fsr2l,c
  1309  000E60  0E00               	movlw	high lcd@teclado
  1310  000E62  2004               	addwfc	lcd@tecla+1,w,c
  1311  000E64  6EDA               	movwf	fsr2h,c
  1312  000E66  50DF               	movf	indf2,w,c
  1313  000E68  EC67  F007         	call	_WriteDataXLCD
  1314  000E6C  D7F0               	goto	u810
  1315  000E6E                     l1793:
  1316                           
  1317                           ;main.c: 112:         WriteCmdXLCD(cursor);
  1318  000E6E  505A               	movf	_cursor,w,c
  1319  000E70  EC86  F007         	call	_WriteCmdXLCD
  1320  000E74                     l1795:
  1321                           
  1322                           ;main.c: 114:     if(!BusyXLCD()){
  1323  000E74  EC01  F008         	call	_BusyXLCD	;wreg free
  1324  000E78  0900               	iorlw	0
  1325  000E7A  A4D8               	btfss	status,2,c
  1326  000E7C  0012               	return	
  1327                           
  1328                           ;main.c: 115:         _delay((unsigned long)((8)*(20000000/4000.0)));
  1329  000E7E  0E34               	movlw	52
  1330  000E80  6E05               	movwf	??_lcd& (0+255),c
  1331  000E82  0EF2               	movlw	242
  1332  000E84                     u1227:
  1333  000E84  2EE8               	decfsz	wreg,f,c
  1334  000E86  D7FE               	bra	u1227
  1335  000E88  2E05               	decfsz	??_lcd& (0+255),f,c
  1336  000E8A  D7FC               	bra	u1227
  1337  000E8C  0012               	return		;funcret
  1338  000E8E                     __end_of_lcd:
  1339                           	opt callstack 0
  1340                           
  1341 ;; *************** function _config_timer0 *****************
  1342 ;; Defined at:
  1343 ;;		line 220 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    2
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text5
  1372  001196                     __ptext5:
  1373                           	opt callstack 0
  1374  001196                     _config_timer0:
  1375                           	opt callstack 28
  1376                           
  1377                           ;main.c: 221:     T0CONbits.TMR0ON = 1;
  1378                           
  1379                           ;incstack = 0
  1380  001196  8ED5               	bsf	4053,7,c	;volatile
  1381                           
  1382                           ;main.c: 222:     T0CONbits.T08BIT = 1;
  1383  001198  8CD5               	bsf	4053,6,c	;volatile
  1384                           
  1385                           ;main.c: 223:     T0CONbits.T0CS = 0;
  1386  00119A  9AD5               	bcf	4053,5,c	;volatile
  1387                           
  1388                           ;main.c: 225:     T0CONbits.PSA = 1;
  1389  00119C  86D5               	bsf	4053,3,c	;volatile
  1390                           
  1391                           ;main.c: 226:     T0CONbits.T0PS2 = 1;
  1392  00119E  84D5               	bsf	4053,2,c	;volatile
  1393                           
  1394                           ;main.c: 227:     T0CONbits.T0PS1 = 0;
  1395  0011A0  92D5               	bcf	4053,1,c	;volatile
  1396                           
  1397                           ;main.c: 228:     T0CONbits.T0PS0 = 0;
  1398  0011A2  90D5               	bcf	4053,0,c	;volatile
  1399                           
  1400                           ;main.c: 229:     INTCONbits.TMR0IE = 1;
  1401  0011A4  8AF2               	bsf	4082,5,c	;volatile
  1402                           
  1403                           ;main.c: 230:     TMR0 = 100;
  1404  0011A6  0E00               	movlw	0
  1405  0011A8  6ED7               	movwf	4055,c	;volatile
  1406  0011AA  0E64               	movlw	100
  1407  0011AC  6ED6               	movwf	4054,c	;volatile
  1408  0011AE  0012               	return		;funcret
  1409  0011B0                     __end_of_config_timer0:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _config_teclado *****************
  1413 ;; Defined at:
  1414 ;;		line 162 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    2
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text6
  1443  001176                     __ptext6:
  1444                           	opt callstack 0
  1445  001176                     _config_teclado:
  1446                           	opt callstack 28
  1447                           
  1448                           ;main.c: 163:     RBPU = 0;
  1449                           
  1450                           ;incstack = 0
  1451  001176  9EF1               	bcf	4081,7,c	;volatile
  1452                           
  1453                           ;main.c: 165:     ADCON1 = 0x0F;
  1454  001178  0E0F               	movlw	15
  1455  00117A  6EC1               	movwf	4033,c	;volatile
  1456                           
  1457                           ;main.c: 167:     TRISBbits.TRISB0 = 0;
  1458  00117C  9093               	bcf	3987,0,c	;volatile
  1459                           
  1460                           ;main.c: 168:     TRISBbits.TRISB1 = 0;
  1461  00117E  9293               	bcf	3987,1,c	;volatile
  1462                           
  1463                           ;main.c: 169:     TRISBbits.TRISB2 = 0;
  1464  001180  9493               	bcf	3987,2,c	;volatile
  1465                           
  1466                           ;main.c: 170:     TRISBbits.TRISB3 = 0;
  1467  001182  9693               	bcf	3987,3,c	;volatile
  1468                           
  1469                           ;main.c: 171:     TRISBbits.TRISB4 = 1;
  1470  001184  8893               	bsf	3987,4,c	;volatile
  1471                           
  1472                           ;main.c: 172:     TRISBbits.TRISB5 = 1;
  1473  001186  8A93               	bsf	3987,5,c	;volatile
  1474                           
  1475                           ;main.c: 173:     TRISBbits.TRISB6 = 1;
  1476  001188  8C93               	bsf	3987,6,c	;volatile
  1477                           
  1478                           ;main.c: 174:     TRISBbits.TRISB7 = 1;
  1479  00118A  8E93               	bsf	3987,7,c	;volatile
  1480                           
  1481                           ;main.c: 176:     PORTBbits.RB0 = 1;
  1482  00118C  8081               	bsf	3969,0,c	;volatile
  1483                           
  1484                           ;main.c: 177:     PORTBbits.RB1 = 1;
  1485  00118E  8281               	bsf	3969,1,c	;volatile
  1486                           
  1487                           ;main.c: 178:     PORTBbits.RB2 = 1;
  1488  001190  8481               	bsf	3969,2,c	;volatile
  1489                           
  1490                           ;main.c: 179:     PORTBbits.RB3 = 0;
  1491  001192  9681               	bcf	3969,3,c	;volatile
  1492  001194  0012               	return		;funcret
  1493  001196                     __end_of_config_teclado:
  1494                           	opt callstack 0
  1495                           
  1496 ;; *************** function _config_led *****************
  1497 ;; Defined at:
  1498 ;;		line 189 in file "main.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		None
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    2
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text7
  1527  00121E                     __ptext7:
  1528                           	opt callstack 0
  1529  00121E                     _config_led:
  1530                           	opt callstack 28
  1531                           
  1532                           ;main.c: 190:     TRISDbits.TRISD0 = 0;
  1533                           
  1534                           ;incstack = 0
  1535  00121E  9095               	bcf	3989,0,c	;volatile
  1536                           
  1537                           ;main.c: 191:     PORTDbits.RD0 = 1;
  1538  001220  8083               	bsf	3971,0,c	;volatile
  1539  001222  0012               	return		;funcret
  1540  001224                     __end_of_config_led:
  1541                           	opt callstack 0
  1542                           
  1543 ;; *************** function _config_ldc *****************
  1544 ;; Defined at:
  1545 ;;		line 182 in file "main.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    6
  1566 ;; This function calls:
  1567 ;;		_OpenXLCD
  1568 ;;		_WriteCmdXLCD
  1569 ;;		_lcdTxt
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text8
  1576  0011B0                     __ptext8:
  1577                           	opt callstack 0
  1578  0011B0                     _config_ldc:
  1579                           	opt callstack 24
  1580                           
  1581                           ;main.c: 184:     OpenXLCD(0b00101100 & 0b00111000);
  1582                           
  1583                           ;incstack = 0
  1584  0011B0  0E28               	movlw	40
  1585  0011B2  ECAD  F006         	call	_OpenXLCD
  1586                           
  1587                           ;main.c: 185:     WriteCmdXLCD(0x01);
  1588  0011B6  0E01               	movlw	1
  1589  0011B8  EC86  F007         	call	_WriteCmdXLCD
  1590                           
  1591                           ;main.c: 186:     lcdTxt("Fechadura");
  1592  0011BC  0E01               	movlw	low STR_2
  1593  0011BE  6E05               	movwf	lcdTxt@txt,c
  1594  0011C0  0E08               	movlw	high STR_2
  1595  0011C2  6E06               	movwf	lcdTxt@txt+1,c
  1596  0011C4  ECE3  F007         	call	_lcdTxt	;wreg free
  1597  0011C8  0012               	return		;funcret
  1598  0011CA                     __end_of_config_ldc:
  1599                           	opt callstack 0
  1600                           
  1601 ;; *************** function _lcdTxt *****************
  1602 ;; Defined at:
  1603 ;;		line 85 in file "main.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  txt             2    4[COMRAM] PTR unsigned char 
  1606 ;;		 -> STR_2(10), 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1618 ;;      Params:         2       0       0       0       0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1620 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1621 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1622 ;;Total ram usage:        3 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    5
  1625 ;; This function calls:
  1626 ;;		_WriteCmdXLCD
  1627 ;;		_putrsXLCD
  1628 ;;		_putsXLCD
  1629 ;; This function is called by:
  1630 ;;		_config_ldc
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text9
  1635  000FC6                     __ptext9:
  1636                           	opt callstack 0
  1637  000FC6                     _lcdTxt:
  1638                           	opt callstack 24
  1639                           
  1640                           ;main.c: 86:     WriteCmdXLCD(0x80);
  1641                           
  1642                           ;incstack = 0
  1643  000FC6  0E80               	movlw	128
  1644  000FC8  EC86  F007         	call	_WriteCmdXLCD
  1645                           
  1646                           ;main.c: 87:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1647  000FCC  0E1A               	movlw	26
  1648  000FCE  6E07               	movwf	??_lcdTxt& (0+255),c
  1649  000FD0  0EF8               	movlw	248
  1650  000FD2                     u1237:
  1651  000FD2  2EE8               	decfsz	wreg,f,c
  1652  000FD4  D7FE               	bra	u1237
  1653  000FD6  2E07               	decfsz	??_lcdTxt& (0+255),f,c
  1654  000FD8  D7FC               	bra	u1237
  1655  000FDA  D000               	nop2	
  1656                           
  1657                           ;main.c: 88:     putrsXLCD(txt);
  1658  000FDC  C005  F003         	movff	lcdTxt@txt,putrsXLCD@buffer
  1659  000FE0  C006  F004         	movff	lcdTxt@txt+1,putrsXLCD@buffer+1
  1660  000FE4  EC38  F008         	call	_putrsXLCD	;wreg free
  1661                           
  1662                           ;main.c: 89:     WriteCmdXLCD(0xC0);
  1663  000FE8  0EC0               	movlw	192
  1664  000FEA  EC86  F007         	call	_WriteCmdXLCD
  1665                           
  1666                           ;main.c: 90:     putsXLCD(":");
  1667  000FEE  0E0B               	movlw	low STR_1
  1668  000FF0  6E03               	movwf	putsXLCD@buffer,c
  1669  000FF2  0E08               	movlw	high STR_1
  1670  000FF4  6E04               	movwf	putsXLCD@buffer+1,c
  1671  000FF6  EC1E  F008         	call	_putsXLCD	;wreg free
  1672                           
  1673                           ;main.c: 91:     WriteCmdXLCD(0xC1);
  1674  000FFA  0EC1               	movlw	193
  1675  000FFC  EC86  F007         	call	_WriteCmdXLCD
  1676  001000  0012               	return		;funcret
  1677  001002                     __end_of_lcdTxt:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _putsXLCD *****************
  1681 ;; Defined at:
  1682 ;;		line 510 in file "nxlcd.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  1685 ;;		 -> STR_4(2), STR_3(10), STR_1(2), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1697 ;;      Params:         2       0       0       0       0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1700 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1701 ;;Total ram usage:        2 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    4
  1704 ;; This function calls:
  1705 ;;		_BusyXLCD
  1706 ;;		_WriteDataXLCD
  1707 ;; This function is called by:
  1708 ;;		_lcdTxt
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text10
  1714  00103C                     __ptext10:
  1715                           	opt callstack 0
  1716  00103C                     _putsXLCD:
  1717                           	opt callstack 26
  1718                           
  1719                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
  1720                           
  1721                           ;incstack = 0
  1722  00103C  D00F               	goto	l1733
  1723  00103E                     l1727:
  1724  00103E  EC01  F008         	call	_BusyXLCD	;wreg free
  1725  001042  0900               	iorlw	0
  1726  001044  A4D8               	btfss	status,2,c
  1727  001046  D7FB               	goto	l1727
  1728                           
  1729                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
  1730  001048  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1731  00104C  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1732  001050                     	if	0	;tblptru may be non-zero
  1733  001050                     	endif
  1734  001050                     	if	0	;tblptru may be non-zero
  1735  001050                     	endif
  1736  001050  0008               	tblrd		*
  1737  001052  50F5               	movf	tablat,w,c
  1738  001054  EC67  F007         	call	_WriteDataXLCD
  1739                           
  1740                           ;nxlcd.c: 516:                 buffer++;
  1741  001058  4A03               	infsnz	putsXLCD@buffer,f,c
  1742  00105A  2A04               	incf	putsXLCD@buffer+1,f,c
  1743  00105C                     l1733:
  1744                           
  1745                           ;nxlcd.c: 512:         while(*buffer)
  1746  00105C  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1747  001060  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1748  001064                     	if	0	;tblptru may be non-zero
  1749  001064                     	endif
  1750  001064                     	if	0	;tblptru may be non-zero
  1751  001064                     	endif
  1752  001064  0008               	tblrd		*
  1753  001066  50F5               	movf	tablat,w,c
  1754  001068  0900               	iorlw	0
  1755  00106A  B4D8               	btfsc	status,2,c
  1756  00106C  0012               	return	
  1757  00106E  D7E7               	goto	l1727
  1758  001070                     __end_of_putsXLCD:
  1759                           	opt callstack 0
  1760                           
  1761 ;; *************** function _putrsXLCD *****************
  1762 ;; Defined at:
  1763 ;;		line 533 in file "nxlcd.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  buffer          2    2[COMRAM] PTR const unsigned char 
  1766 ;;		 -> STR_2(10), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         2       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    4
  1785 ;; This function calls:
  1786 ;;		_BusyXLCD
  1787 ;;		_WriteDataXLCD
  1788 ;; This function is called by:
  1789 ;;		_lcdTxt
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text11
  1794  001070                     __ptext11:
  1795                           	opt callstack 0
  1796  001070                     _putrsXLCD:
  1797                           	opt callstack 24
  1798                           
  1799                           ;nxlcd.c: 533: void putrsXLCD(const char *buffer);nxlcd.c: 534: {;nxlcd.c: 535:         
      +                          while(*buffer)
  1800                           
  1801                           ;incstack = 0
  1802  001070  D00F               	goto	l1723
  1803  001072                     l1717:
  1804  001072  EC01  F008         	call	_BusyXLCD	;wreg free
  1805  001076  0900               	iorlw	0
  1806  001078  A4D8               	btfss	status,2,c
  1807  00107A  D7FB               	goto	l1717
  1808                           
  1809                           ;nxlcd.c: 538:                 WriteDataXLCD(*buffer);
  1810  00107C  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1811  001080  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1812  001084                     	if	0	;tblptru may be non-zero
  1813  001084                     	endif
  1814  001084                     	if	0	;tblptru may be non-zero
  1815  001084                     	endif
  1816  001084  0008               	tblrd		*
  1817  001086  50F5               	movf	tablat,w,c
  1818  001088  EC67  F007         	call	_WriteDataXLCD
  1819                           
  1820                           ;nxlcd.c: 539:                 buffer++;
  1821  00108C  4A03               	infsnz	putrsXLCD@buffer,f,c
  1822  00108E  2A04               	incf	putrsXLCD@buffer+1,f,c
  1823  001090                     l1723:
  1824                           
  1825                           ;nxlcd.c: 535:         while(*buffer)
  1826  001090  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1827  001094  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1828  001098                     	if	0	;tblptru may be non-zero
  1829  001098                     	endif
  1830  001098                     	if	0	;tblptru may be non-zero
  1831  001098                     	endif
  1832  001098  0008               	tblrd		*
  1833  00109A  50F5               	movf	tablat,w,c
  1834  00109C  0900               	iorlw	0
  1835  00109E  B4D8               	btfsc	status,2,c
  1836  0010A0  0012               	return	
  1837  0010A2  D7E7               	goto	l1717
  1838  0010A4                     __end_of_putrsXLCD:
  1839                           	opt callstack 0
  1840                           
  1841 ;; *************** function _WriteDataXLCD *****************
  1842 ;; Defined at:
  1843 ;;		line 449 in file "nxlcd.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  data            1    wreg     unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  data            1    1[COMRAM] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		_DelayFor18TCY
  1866 ;; This function is called by:
  1867 ;;		_lcd
  1868 ;;		_putsXLCD
  1869 ;;		_putrsXLCD
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text12
  1874  000ECE                     __ptext12:
  1875                           	opt callstack 0
  1876  000ECE                     _WriteDataXLCD:
  1877                           	opt callstack 26
  1878                           
  1879                           ;incstack = 0
  1880                           ;WriteDataXLCD@data stored from wreg
  1881  000ECE  6E02               	movwf	WriteDataXLCD@data,c
  1882                           
  1883                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  1884  000ED0  0E0F               	movlw	15
  1885  000ED2  1695               	andwf	3989,f,c	;volatile
  1886                           
  1887                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  1888  000ED4  0E0F               	movlw	15
  1889  000ED6  1683               	andwf	3971,f,c	;volatile
  1890                           
  1891                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  1892  000ED8  5002               	movf	WriteDataXLCD@data,w,c
  1893  000EDA  0BF0               	andlw	240
  1894  000EDC  1283               	iorwf	3971,f,c	;volatile
  1895                           
  1896                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  1897  000EDE  808D               	bsf	3981,0,c	;volatile
  1898                           
  1899                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  1900  000EE0  948D               	bcf	3981,2,c	;volatile
  1901                           
  1902                           ;nxlcd.c: 474:         DelayFor18TCY();
  1903  000EE2  EC06  F009         	call	_DelayFor18TCY	;wreg free
  1904                           
  1905                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  1906  000EE6  828D               	bsf	3981,1,c	;volatile
  1907                           
  1908                           ;nxlcd.c: 476:         DelayFor18TCY();
  1909  000EE8  EC06  F009         	call	_DelayFor18TCY	;wreg free
  1910                           
  1911                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  1912  000EEC  928D               	bcf	3981,1,c	;volatile
  1913                           
  1914                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  1915  000EEE  0E0F               	movlw	15
  1916  000EF0  1683               	andwf	3971,f,c	;volatile
  1917                           
  1918                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  1919  000EF2  3802               	swapf	WriteDataXLCD@data,w,c
  1920  000EF4  0BF0               	andlw	240
  1921  000EF6  0BF0               	andlw	240
  1922  000EF8  1283               	iorwf	3971,f,c	;volatile
  1923                           
  1924                           ;nxlcd.c: 485:         DelayFor18TCY();
  1925  000EFA  EC06  F009         	call	_DelayFor18TCY	;wreg free
  1926                           
  1927                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  1928  000EFE  828D               	bsf	3981,1,c	;volatile
  1929                           
  1930                           ;nxlcd.c: 487:         DelayFor18TCY();
  1931  000F00  EC06  F009         	call	_DelayFor18TCY	;wreg free
  1932                           
  1933                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  1934  000F04  928D               	bcf	3981,1,c	;volatile
  1935                           
  1936                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  1937  000F06  0EF0               	movlw	240
  1938  000F08  1295               	iorwf	3989,f,c	;volatile
  1939  000F0A  0012               	return		;funcret
  1940  000F0C                     __end_of_WriteDataXLCD:
  1941                           	opt callstack 0
  1942                           
  1943 ;; *************** function _OpenXLCD *****************
  1944 ;; Defined at:
  1945 ;;		line 41 in file "nxlcd.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  lcdtype         1    wreg     unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  lcdtype         1    2[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0
  1960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1962 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1963 ;;Total ram usage:        1 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		_BusyXLCD
  1968 ;;		_DelayPORXLCD
  1969 ;;		_DelayXLCD
  1970 ;;		_SetDDRamAddr
  1971 ;;		_WriteCmdXLCD
  1972 ;; This function is called by:
  1973 ;;		_config_ldc
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text13
  1978  000D5A                     __ptext13:
  1979                           	opt callstack 0
  1980  000D5A                     _OpenXLCD:
  1981                           	opt callstack 25
  1982                           
  1983                           ;incstack = 0
  1984                           ;OpenXLCD@lcdtype stored from wreg
  1985  000D5A  6E03               	movwf	OpenXLCD@lcdtype,c
  1986                           
  1987                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1988  000D5C  0E0F               	movlw	15
  1989  000D5E  1683               	andwf	3971,f,c	;volatile
  1990                           
  1991                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1992  000D60  0E0F               	movlw	15
  1993  000D62  1695               	andwf	3989,f,c	;volatile
  1994                           
  1995                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1996  000D64  9496               	bcf	3990,2,c	;volatile
  1997                           
  1998                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1999  000D66  9096               	bcf	3990,0,c	;volatile
  2000                           
  2001                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  2002  000D68  9296               	bcf	3990,1,c	;volatile
  2003                           
  2004                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  2005  000D6A  948D               	bcf	3981,2,c	;volatile
  2006                           
  2007                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  2008  000D6C  908D               	bcf	3981,0,c	;volatile
  2009                           
  2010                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  2011  000D6E  928D               	bcf	3981,1,c	;volatile
  2012                           
  2013                           ;nxlcd.c: 65:         DelayPORXLCD();
  2014  000D70  ECF7  F008         	call	_DelayPORXLCD	;wreg free
  2015                           
  2016                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  2017  000D74  0E30               	movlw	48
  2018  000D76  EC86  F007         	call	_WriteCmdXLCD
  2019                           
  2020                           ;nxlcd.c: 68:    DelayXLCD();
  2021  000D7A  ECEE  F008         	call	_DelayXLCD	;wreg free
  2022                           
  2023                           ;nxlcd.c: 69:    DelayXLCD();
  2024  000D7E  ECEE  F008         	call	_DelayXLCD	;wreg free
  2025                           
  2026                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  2027  000D82  0E30               	movlw	48
  2028  000D84  EC86  F007         	call	_WriteCmdXLCD
  2029                           
  2030                           ;nxlcd.c: 71:    DelayXLCD();
  2031  000D88  ECEE  F008         	call	_DelayXLCD	;wreg free
  2032                           
  2033                           ;nxlcd.c: 72:    DelayXLCD();
  2034  000D8C  ECEE  F008         	call	_DelayXLCD	;wreg free
  2035                           
  2036                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  2037  000D90  0E32               	movlw	50
  2038  000D92  EC86  F007         	call	_WriteCmdXLCD
  2039  000D96                     l1213:
  2040  000D96  EC01  F008         	call	_BusyXLCD	;wreg free
  2041  000D9A  0900               	iorlw	0
  2042  000D9C  A4D8               	btfss	status,2,c
  2043  000D9E  D7FB               	goto	l1213
  2044  000DA0                     u60:
  2045  000DA0  EC01  F008         	call	_BusyXLCD	;wreg free
  2046  000DA4  0900               	iorlw	0
  2047  000DA6  A4D8               	btfss	status,2,c
  2048  000DA8  D7FB               	goto	u60
  2049                           
  2050                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  2051  000DAA  5003               	movf	OpenXLCD@lcdtype,w,c
  2052  000DAC  EC86  F007         	call	_WriteCmdXLCD
  2053  000DB0                     l1219:
  2054  000DB0  EC01  F008         	call	_BusyXLCD	;wreg free
  2055  000DB4  0900               	iorlw	0
  2056  000DB6  A4D8               	btfss	status,2,c
  2057  000DB8  D7FB               	goto	l1219
  2058                           
  2059                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2060  000DBA  0E08               	movlw	8
  2061  000DBC  EC86  F007         	call	_WriteCmdXLCD
  2062  000DC0                     l1223:
  2063  000DC0  EC01  F008         	call	_BusyXLCD	;wreg free
  2064  000DC4  0900               	iorlw	0
  2065  000DC6  A4D8               	btfss	status,2,c
  2066  000DC8  D7FB               	goto	l1223
  2067                           
  2068                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2069  000DCA  0E0F               	movlw	15
  2070  000DCC  EC86  F007         	call	_WriteCmdXLCD
  2071  000DD0                     l1227:
  2072  000DD0  EC01  F008         	call	_BusyXLCD	;wreg free
  2073  000DD4  0900               	iorlw	0
  2074  000DD6  A4D8               	btfss	status,2,c
  2075  000DD8  D7FB               	goto	l1227
  2076                           
  2077                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  2078  000DDA  0E01               	movlw	1
  2079  000DDC  EC86  F007         	call	_WriteCmdXLCD
  2080  000DE0                     l1231:
  2081  000DE0  EC01  F008         	call	_BusyXLCD	;wreg free
  2082  000DE4  0900               	iorlw	0
  2083  000DE6  A4D8               	btfss	status,2,c
  2084  000DE8  D7FB               	goto	l1231
  2085                           
  2086                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  2087  000DEA  0E04               	movlw	4
  2088  000DEC  EC86  F007         	call	_WriteCmdXLCD
  2089  000DF0                     l1235:
  2090  000DF0  EC01  F008         	call	_BusyXLCD	;wreg free
  2091  000DF4  0900               	iorlw	0
  2092  000DF6  A4D8               	btfss	status,2,c
  2093  000DF8  D7FB               	goto	l1235
  2094                           
  2095                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  2096  000DFA  0E80               	movlw	128
  2097  000DFC  EC47  F007         	call	_SetDDRamAddr
  2098  000E00  0012               	return		;funcret
  2099  000E02                     __end_of_OpenXLCD:
  2100                           	opt callstack 0
  2101                           
  2102 ;; *************** function _WriteCmdXLCD *****************
  2103 ;; Defined at:
  2104 ;;		line 388 in file "nxlcd.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  cmd             1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  cmd             1    1[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		_DelayFor18TCY
  2127 ;; This function is called by:
  2128 ;;		_lcdTxt
  2129 ;;		_lcd
  2130 ;;		_config_ldc
  2131 ;;		_main
  2132 ;;		_OpenXLCD
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text14
  2137  000F0C                     __ptext14:
  2138                           	opt callstack 0
  2139  000F0C                     _WriteCmdXLCD:
  2140                           	opt callstack 26
  2141                           
  2142                           ;incstack = 0
  2143                           ;WriteCmdXLCD@cmd stored from wreg
  2144  000F0C  6E02               	movwf	WriteCmdXLCD@cmd,c
  2145                           
  2146                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  2147  000F0E  0E0F               	movlw	15
  2148  000F10  1695               	andwf	3989,f,c	;volatile
  2149                           
  2150                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  2151  000F12  0E0F               	movlw	15
  2152  000F14  1683               	andwf	3971,f,c	;volatile
  2153                           
  2154                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  2155  000F16  5002               	movf	WriteCmdXLCD@cmd,w,c
  2156  000F18  0BF0               	andlw	240
  2157  000F1A  1283               	iorwf	3971,f,c	;volatile
  2158                           
  2159                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  2160  000F1C  948D               	bcf	3981,2,c	;volatile
  2161                           
  2162                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  2163  000F1E  908D               	bcf	3981,0,c	;volatile
  2164                           
  2165                           ;nxlcd.c: 413:         DelayFor18TCY();
  2166  000F20  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2167                           
  2168                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  2169  000F24  828D               	bsf	3981,1,c	;volatile
  2170                           
  2171                           ;nxlcd.c: 415:         DelayFor18TCY();
  2172  000F26  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2173                           
  2174                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  2175  000F2A  928D               	bcf	3981,1,c	;volatile
  2176                           
  2177                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  2178  000F2C  0E0F               	movlw	15
  2179  000F2E  1683               	andwf	3971,f,c	;volatile
  2180                           
  2181                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  2182  000F30  3802               	swapf	WriteCmdXLCD@cmd,w,c
  2183  000F32  0BF0               	andlw	240
  2184  000F34  0BF0               	andlw	240
  2185  000F36  1283               	iorwf	3971,f,c	;volatile
  2186                           
  2187                           ;nxlcd.c: 424:         DelayFor18TCY();
  2188  000F38  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2189                           
  2190                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  2191  000F3C  828D               	bsf	3981,1,c	;volatile
  2192                           
  2193                           ;nxlcd.c: 426:         DelayFor18TCY();
  2194  000F3E  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2195                           
  2196                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  2197  000F42  928D               	bcf	3981,1,c	;volatile
  2198                           
  2199                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  2200  000F44  0EF0               	movlw	240
  2201  000F46  1295               	iorwf	3989,f,c	;volatile
  2202  000F48  0012               	return		;funcret
  2203  000F4A                     __end_of_WriteCmdXLCD:
  2204                           	opt callstack 0
  2205                           
  2206 ;; *************** function _SetDDRamAddr *****************
  2207 ;; Defined at:
  2208 ;;		line 171 in file "nxlcd.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  DDaddr          1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  DDaddr          1    1[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        1 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    3
  2229 ;; This function calls:
  2230 ;;		_DelayFor18TCY
  2231 ;; This function is called by:
  2232 ;;		_OpenXLCD
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text15
  2237  000E8E                     __ptext15:
  2238                           	opt callstack 0
  2239  000E8E                     _SetDDRamAddr:
  2240                           	opt callstack 25
  2241                           
  2242                           ;incstack = 0
  2243                           ;SetDDRamAddr@DDaddr stored from wreg
  2244  000E8E  6E02               	movwf	SetDDRamAddr@DDaddr,c
  2245                           
  2246                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  2247  000E90  0E0F               	movlw	15
  2248  000E92  1695               	andwf	3989,f,c	;volatile
  2249                           
  2250                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  2251  000E94  0E0F               	movlw	15
  2252  000E96  1683               	andwf	3971,f,c	;volatile
  2253                           
  2254                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2255  000E98  5002               	movf	SetDDRamAddr@DDaddr,w,c
  2256  000E9A  0980               	iorlw	128
  2257  000E9C  0BF0               	andlw	240
  2258  000E9E  1283               	iorwf	3971,f,c	;volatile
  2259                           
  2260                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  2261  000EA0  948D               	bcf	3981,2,c	;volatile
  2262                           
  2263                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  2264  000EA2  908D               	bcf	3981,0,c	;volatile
  2265                           
  2266                           ;nxlcd.c: 196:         DelayFor18TCY();
  2267  000EA4  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2268                           
  2269                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  2270  000EA8  828D               	bsf	3981,1,c	;volatile
  2271                           
  2272                           ;nxlcd.c: 198:         DelayFor18TCY();
  2273  000EAA  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2274                           
  2275                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  2276  000EAE  928D               	bcf	3981,1,c	;volatile
  2277                           
  2278                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  2279  000EB0  0E0F               	movlw	15
  2280  000EB2  1683               	andwf	3971,f,c	;volatile
  2281                           
  2282                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  2283  000EB4  3802               	swapf	SetDDRamAddr@DDaddr,w,c
  2284  000EB6  0BF0               	andlw	240
  2285  000EB8  0BF0               	andlw	240
  2286  000EBA  1283               	iorwf	3971,f,c	;volatile
  2287                           
  2288                           ;nxlcd.c: 207:         DelayFor18TCY();
  2289  000EBC  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2290                           
  2291                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  2292  000EC0  828D               	bsf	3981,1,c	;volatile
  2293                           
  2294                           ;nxlcd.c: 209:         DelayFor18TCY();
  2295  000EC2  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2296                           
  2297                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  2298  000EC6  928D               	bcf	3981,1,c	;volatile
  2299                           
  2300                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  2301  000EC8  0EF0               	movlw	240
  2302  000ECA  1295               	iorwf	3989,f,c	;volatile
  2303  000ECC  0012               	return		;funcret
  2304  000ECE                     __end_of_SetDDRamAddr:
  2305                           	opt callstack 0
  2306                           
  2307 ;; *************** function _DelayXLCD *****************
  2308 ;; Defined at:
  2309 ;;		line 22 in file "nxlcd.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2326 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2327 ;;Total ram usage:        1 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    2
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_OpenXLCD
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text16
  2338  0011DC                     __ptext16:
  2339                           	opt callstack 0
  2340  0011DC                     _DelayXLCD:
  2341                           	opt callstack 26
  2342                           
  2343                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2344                           
  2345                           ;incstack = 0
  2346  0011DC  0E21               	movlw	33
  2347  0011DE  6E02               	movwf	??_DelayXLCD& (0+255),c
  2348  0011E0  0E76               	movlw	118
  2349  0011E2                     u1247:
  2350  0011E2  2EE8               	decfsz	wreg,f,c
  2351  0011E4  D7FE               	bra	u1247
  2352  0011E6  2E02               	decfsz	??_DelayXLCD& (0+255),f,c
  2353  0011E8  D7FC               	bra	u1247
  2354  0011EA  D000               	nop2	
  2355  0011EC  0012               	return		;funcret
  2356  0011EE                     __end_of_DelayXLCD:
  2357                           	opt callstack 0
  2358                           
  2359 ;; *************** function _DelayPORXLCD *****************
  2360 ;; Defined at:
  2361 ;;		line 17 in file "nxlcd.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        1 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    2
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_OpenXLCD
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text17
  2390  0011EE                     __ptext17:
  2391                           	opt callstack 0
  2392  0011EE                     _DelayPORXLCD:
  2393                           	opt callstack 26
  2394                           
  2395                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  2396                           
  2397                           ;incstack = 0
  2398  0011EE  0E62               	movlw	98
  2399  0011F0  6E02               	movwf	??_DelayPORXLCD& (0+255),c
  2400  0011F2  0E66               	movlw	102
  2401  0011F4                     u1257:
  2402  0011F4  2EE8               	decfsz	wreg,f,c
  2403  0011F6  D7FE               	bra	u1257
  2404  0011F8  2E02               	decfsz	??_DelayPORXLCD& (0+255),f,c
  2405  0011FA  D7FC               	bra	u1257
  2406  0011FC  0012               	return		;funcret
  2407  0011FE                     __end_of_DelayPORXLCD:
  2408                           	opt callstack 0
  2409                           
  2410 ;; *************** function _BusyXLCD *****************
  2411 ;; Defined at:
  2412 ;;		line 227 in file "nxlcd.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    3
  2433 ;; This function calls:
  2434 ;;		_DelayFor18TCY
  2435 ;; This function is called by:
  2436 ;;		_lcd
  2437 ;;		_OpenXLCD
  2438 ;;		_putsXLCD
  2439 ;;		_putrsXLCD
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text18
  2444  001002                     __ptext18:
  2445                           	opt callstack 0
  2446  001002                     _BusyXLCD:
  2447                           	opt callstack 26
  2448                           
  2449                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  2450                           
  2451                           ;incstack = 0
  2452  001002  848D               	bsf	3981,2,c	;volatile
  2453                           
  2454                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  2455  001004  908D               	bcf	3981,0,c	;volatile
  2456                           
  2457                           ;nxlcd.c: 231:         DelayFor18TCY();
  2458  001006  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2459                           
  2460                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  2461  00100A  828D               	bsf	3981,1,c	;volatile
  2462                           
  2463                           ;nxlcd.c: 233:         DelayFor18TCY();
  2464  00100C  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2465                           
  2466                           ;nxlcd.c: 249:         if(PORTD&0x80)
  2467  001010  AE83               	btfss	3971,7,c	;volatile
  2468  001012  D00A               	goto	l284
  2469                           
  2470                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  2471  001014  928D               	bcf	3981,1,c	;volatile
  2472                           
  2473                           ;nxlcd.c: 255:                 DelayFor18TCY();
  2474  001016  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2475                           
  2476                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  2477  00101A  828D               	bsf	3981,1,c	;volatile
  2478                           
  2479                           ;nxlcd.c: 257:                 DelayFor18TCY();
  2480  00101C  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2481                           
  2482                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  2483  001020  928D               	bcf	3981,1,c	;volatile
  2484                           
  2485                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  2486  001022  948D               	bcf	3981,2,c	;volatile
  2487                           
  2488                           ;nxlcd.c: 260:                 return 1;
  2489  001024  0E01               	movlw	1
  2490  001026  0012               	return	
  2491  001028                     l284:
  2492                           
  2493                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  2494  001028  928D               	bcf	3981,1,c	;volatile
  2495                           
  2496                           ;nxlcd.c: 265:                 DelayFor18TCY();
  2497  00102A  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2498                           
  2499                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  2500  00102E  828D               	bsf	3981,1,c	;volatile
  2501                           
  2502                           ;nxlcd.c: 267:                 DelayFor18TCY();
  2503  001030  EC06  F009         	call	_DelayFor18TCY	;wreg free
  2504                           
  2505                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  2506  001034  928D               	bcf	3981,1,c	;volatile
  2507                           
  2508                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  2509  001036  948D               	bcf	3981,2,c	;volatile
  2510                           
  2511                           ;nxlcd.c: 270:                 return 0;
  2512  001038  0E00               	movlw	0
  2513  00103A  0012               	return		;funcret
  2514  00103C                     __end_of_BusyXLCD:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _DelayFor18TCY *****************
  2518 ;; Defined at:
  2519 ;;		line 12 in file "nxlcd.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_SetDDRamAddr
  2544 ;;		_BusyXLCD
  2545 ;;		_WriteCmdXLCD
  2546 ;;		_WriteDataXLCD
  2547 ;;		_SetCGRamAddr
  2548 ;;		_ReadAddrXLCD
  2549 ;;		_ReadDataXLCD
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text19
  2554  00120C                     __ptext19:
  2555                           	opt callstack 0
  2556  00120C                     _DelayFor18TCY:
  2557                           	opt callstack 26
  2558                           
  2559                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2560                           
  2561                           ;incstack = 0
  2562  00120C  0E21               	movlw	33
  2563  00120E                     u1267:
  2564  00120E  2EE8               	decfsz	wreg,f,c
  2565  001210  D7FE               	bra	u1267
  2566  001212  F000               	nop	
  2567  001214  0012               	return		;funcret
  2568  001216                     __end_of_DelayFor18TCY:
  2569                           	opt callstack 0
  2570                           
  2571 ;; *************** function _config_interrupcao *****************
  2572 ;; Defined at:
  2573 ;;		line 253 in file "main.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		None
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2587 ;;      Params:         0       0       0       0       0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text20
  2602  001216                     __ptext20:
  2603                           	opt callstack 0
  2604  001216                     _config_interrupcao:
  2605                           	opt callstack 28
  2606                           
  2607                           ;main.c: 254:     RCONbits.IPEN = 1;
  2608                           
  2609                           ;incstack = 0
  2610  001216  8ED0               	bsf	4048,7,c	;volatile
  2611                           
  2612                           ;main.c: 255:     INTCONbits.GIEH = 1;
  2613  001218  8EF2               	bsf	4082,7,c	;volatile
  2614                           
  2615                           ;main.c: 256:     INTCONbits.GIEL = 1;
  2616  00121A  8CF2               	bsf	4082,6,c	;volatile
  2617  00121C  0012               	return		;funcret
  2618  00121E                     __end_of_config_interrupcao:
  2619                           	opt callstack 0
  2620                           
  2621 ;; *************** function _atoi *****************
  2622 ;; Defined at:
  2623 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  s               3    8[COMRAM] PTR const unsigned char 
  2626 ;;		 -> ROM(32767), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  n               2   22[COMRAM] int 
  2629 ;;  neg             2   15[COMRAM] int 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2    8[COMRAM] int 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2639 ;;      Params:         3       0       0       0       0       0       0       0       0
  2640 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2641 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2642 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2643 ;;Total ram usage:       16 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    3
  2646 ;; This function calls:
  2647 ;;		___wmul
  2648 ;;		_isdigit
  2649 ;;		_isspace
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text21
  2656  000BF6                     __ptext21:
  2657                           	opt callstack 0
  2658  000BF6                     _atoi:
  2659                           	opt callstack 27
  2660                           
  2661                           ;incstack = 0
  2662  000BF6  0E00               	movlw	0
  2663  000BF8  6E18               	movwf	atoi@n+1,c
  2664  000BFA  0E00               	movlw	0
  2665  000BFC  6E17               	movwf	atoi@n,c
  2666  000BFE  0E00               	movlw	0
  2667  000C00  6E11               	movwf	atoi@neg+1,c
  2668  000C02  0E00               	movlw	0
  2669  000C04  6E10               	movwf	atoi@neg,c
  2670  000C06  D006               	goto	l1921
  2671  000C08                     l1919:
  2672  000C08  0E01               	movlw	1
  2673  000C0A  2609               	addwf	atoi@s,f,c
  2674  000C0C  0E00               	movlw	0
  2675  000C0E  220A               	addwfc	atoi@s+1,f,c
  2676  000C10  0E00               	movlw	0
  2677  000C12  220B               	addwfc	atoi@s+2,f,c
  2678  000C14                     l1921:
  2679  000C14  0E01               	movlw	1
  2680  000C16  6E16               	movwf	_atoi$1313,c
  2681  000C18  C009  FFF6         	movff	atoi@s,tblptrl
  2682  000C1C  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2683  000C20  C00B  FFF8         	movff	atoi@s+2,tblptru
  2684  000C24  0008               	tblrd		*
  2685  000C26  50F5               	movf	tablat,w,c
  2686  000C28  0A20               	xorlw	32
  2687  000C2A  B4D8               	btfsc	status,2,c
  2688  000C2C  D01A               	goto	l1929
  2689  000C2E  0EF7               	movlw	247
  2690  000C30  6E0C               	movwf	??_atoi& (0+255),c
  2691  000C32  0EFF               	movlw	255
  2692  000C34  6E0D               	movwf	(??_atoi+1)& (0+255),c
  2693  000C36  C009  FFF6         	movff	atoi@s,tblptrl
  2694  000C3A  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2695  000C3E  C00B  FFF8         	movff	atoi@s+2,tblptru
  2696  000C42  0008               	tblrd		*
  2697  000C44  50F5               	movf	tablat,w,c
  2698  000C46  6E0E               	movwf	(??_atoi+2)& (0+255),c
  2699  000C48  6A0F               	clrf	(??_atoi+3)& (0+255),c
  2700  000C4A  500C               	movf	??_atoi,w,c
  2701  000C4C  260E               	addwf	??_atoi+2,f,c
  2702  000C4E  500D               	movf	??_atoi+1,w,c
  2703  000C50  220F               	addwfc	??_atoi+3,f,c
  2704  000C52  500F               	movf	??_atoi+3,w,c
  2705  000C54  E104               	bnz	u1050
  2706  000C56  0E05               	movlw	5
  2707  000C58  5C0E               	subwf	??_atoi+2,w,c
  2708  000C5A  A0D8               	btfss	status,0,c
  2709  000C5C  D002               	goto	l1929
  2710  000C5E                     u1050:
  2711  000C5E  0E00               	movlw	0
  2712  000C60  6E16               	movwf	_atoi$1313,c
  2713  000C62                     l1929:
  2714  000C62  C016  F012         	movff	_atoi$1313,_atoi$1312
  2715  000C66  6A13               	clrf	_atoi$1312+1,c
  2716  000C68  5012               	movf	_atoi$1312,w,c
  2717  000C6A  1013               	iorwf	_atoi$1312+1,w,c
  2718  000C6C  B4D8               	btfsc	status,2,c
  2719  000C6E  D00C               	goto	l1939
  2720  000C70  D7CB               	goto	l1919
  2721  000C72                     l1935:
  2722  000C72  0E00               	movlw	0
  2723  000C74  6E11               	movwf	atoi@neg+1,c
  2724  000C76  0E01               	movlw	1
  2725  000C78  6E10               	movwf	atoi@neg,c
  2726  000C7A                     l1937:
  2727  000C7A  0E01               	movlw	1
  2728  000C7C  2609               	addwf	atoi@s,f,c
  2729  000C7E  0E00               	movlw	0
  2730  000C80  220A               	addwfc	atoi@s+1,f,c
  2731  000C82  0E00               	movlw	0
  2732  000C84  220B               	addwfc	atoi@s+2,f,c
  2733  000C86  D032               	goto	l1945
  2734  000C88                     l1939:
  2735  000C88  C009  FFF6         	movff	atoi@s,tblptrl
  2736  000C8C  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2737  000C90  C00B  FFF8         	movff	atoi@s+2,tblptru
  2738  000C94  0008               	tblrd		*
  2739  000C96  50F5               	movf	tablat,w,c
  2740  000C98  6E0C               	movwf	??_atoi& (0+255),c
  2741  000C9A  6A0D               	clrf	(??_atoi+1)& (0+255),c
  2742                           
  2743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2744                           ; Switch size 1, requested type "simple"
  2745                           ; Number of cases is 1, Range of values is 0 to 0
  2746                           ; switch strategies available:
  2747                           ; Name         Instructions Cycles
  2748                           ; simple_byte            4     3 (average)
  2749                           ;	Chosen strategy is simple_byte
  2750  000C9C  500D               	movf	??_atoi+1,w,c
  2751  000C9E  0A00               	xorlw	0	; case 0
  2752  000CA0  A4D8               	btfss	status,2,c
  2753  000CA2  D024               	goto	l1945
  2754                           
  2755                           ; Switch size 1, requested type "simple"
  2756                           ; Number of cases is 2, Range of values is 43 to 45
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; simple_byte            7     4 (average)
  2760                           ;	Chosen strategy is simple_byte
  2761  000CA4  500C               	movf	??_atoi,w,c
  2762  000CA6  0A2B               	xorlw	43	; case 43
  2763  000CA8  B4D8               	btfsc	status,2,c
  2764  000CAA  D7E7               	goto	l1937
  2765  000CAC  0A06               	xorlw	6	; case 45
  2766  000CAE  B4D8               	btfsc	status,2,c
  2767  000CB0  D7E0               	goto	l1935
  2768  000CB2  D01C               	goto	l1945
  2769  000CB4                     l1941:
  2770  000CB4  C017  F002         	movff	atoi@n,___wmul@multiplier
  2771  000CB8  C018  F003         	movff	atoi@n+1,___wmul@multiplier+1
  2772  000CBC  0E00               	movlw	0
  2773  000CBE  6E05               	movwf	___wmul@multiplicand+1,c
  2774  000CC0  0E0A               	movlw	10
  2775  000CC2  6E04               	movwf	___wmul@multiplicand,c
  2776  000CC4  ECA8  F008         	call	___wmul	;wreg free
  2777  000CC8  C009  FFF6         	movff	atoi@s,tblptrl
  2778  000CCC  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2779  000CD0  C00B  FFF8         	movff	atoi@s+2,tblptru
  2780  000CD4  0008               	tblrd		*
  2781  000CD6  50F5               	movf	tablat,w,c
  2782  000CD8  5E02               	subwf	?___wmul,f,c
  2783  000CDA  0E00               	movlw	0
  2784  000CDC  5A03               	subwfb	?___wmul+1,f,c
  2785  000CDE  0E30               	movlw	48
  2786  000CE0  2402               	addwf	?___wmul,w,c
  2787  000CE2  6E17               	movwf	atoi@n,c
  2788  000CE4  0E00               	movlw	0
  2789  000CE6  2003               	addwfc	?___wmul+1,w,c
  2790  000CE8  6E18               	movwf	atoi@n+1,c
  2791  000CEA  D7C7               	goto	l1937
  2792  000CEC                     l1945:
  2793  000CEC  0ED0               	movlw	208
  2794  000CEE  6E0C               	movwf	??_atoi& (0+255),c
  2795  000CF0  0EFF               	movlw	255
  2796  000CF2  6E0D               	movwf	(??_atoi+1)& (0+255),c
  2797  000CF4  C009  FFF6         	movff	atoi@s,tblptrl
  2798  000CF8  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2799  000CFC  C00B  FFF8         	movff	atoi@s+2,tblptru
  2800  000D00  0008               	tblrd		*
  2801  000D02  50F5               	movf	tablat,w,c
  2802  000D04  6E0E               	movwf	(??_atoi+2)& (0+255),c
  2803  000D06  6A0F               	clrf	(??_atoi+3)& (0+255),c
  2804  000D08  500C               	movf	??_atoi,w,c
  2805  000D0A  260E               	addwf	??_atoi+2,f,c
  2806  000D0C  500D               	movf	??_atoi+1,w,c
  2807  000D0E  220F               	addwfc	??_atoi+3,f,c
  2808  000D10  500F               	movf	??_atoi+3,w,c
  2809  000D12  E106               	bnz	u1070
  2810  000D14  0E0A               	movlw	10
  2811  000D16  5C0E               	subwf	??_atoi+2,w,c
  2812  000D18  B0D8               	btfsc	status,0,c
  2813  000D1A  D002               	goto	u1070
  2814  000D1C  0E01               	movlw	1
  2815  000D1E  D001               	goto	u1080
  2816  000D20                     u1070:
  2817  000D20  0E00               	movlw	0
  2818  000D22                     u1080:
  2819  000D22  6E14               	movwf	_atoi$1314,c
  2820  000D24  6A15               	clrf	_atoi$1314+1,c
  2821  000D26  5014               	movf	_atoi$1314,w,c
  2822  000D28  1015               	iorwf	_atoi$1314+1,w,c
  2823  000D2A  A4D8               	btfss	status,2,c
  2824  000D2C  D7C3               	goto	l1941
  2825  000D2E  5010               	movf	atoi@neg,w,c
  2826  000D30  1011               	iorwf	atoi@neg+1,w,c
  2827  000D32  A4D8               	btfss	status,2,c
  2828  000D34  D00D               	goto	l1018
  2829  000D36  C017  F00C         	movff	atoi@n,??_atoi
  2830  000D3A  C018  F00D         	movff	atoi@n+1,??_atoi+1
  2831  000D3E  1E0C               	comf	??_atoi,f,c
  2832  000D40  1E0D               	comf	??_atoi+1,f,c
  2833  000D42  4A0C               	infsnz	??_atoi,f,c
  2834  000D44  2A0D               	incf	??_atoi+1,f,c
  2835  000D46  C00C  F009         	movff	??_atoi,?_atoi
  2836  000D4A  C00D  F00A         	movff	??_atoi+1,?_atoi+1
  2837  000D4E  0012               	return	
  2838  000D50                     l1018:
  2839  000D50  C017  F009         	movff	atoi@n,?_atoi
  2840  000D54  C018  F00A         	movff	atoi@n+1,?_atoi+1
  2841  000D58  0012               	return		;funcret
  2842  000D5A                     __end_of_atoi:
  2843                           	opt callstack 0
  2844                           
  2845 ;; *************** function _isspace *****************
  2846 ;; Defined at:
  2847 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  c               2    1[COMRAM] int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    1[COMRAM] int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2861 ;;      Params:         2       0       0       0       0       0       0       0       0
  2862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2863 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2864 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2865 ;;Total ram usage:        7 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    2
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_atoi
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text22
  2876  000F4A                     __ptext22:
  2877                           	opt callstack 0
  2878  000F4A                     _isspace:
  2879                           	opt callstack 27
  2880                           
  2881                           ;incstack = 0
  2882  000F4A  0E01               	movlw	1
  2883  000F4C  6E08               	movwf	_isspace$1330,c
  2884  000F4E  0E20               	movlw	32
  2885  000F50  1802               	xorwf	isspace@c,w,c
  2886  000F52  1003               	iorwf	isspace@c+1,w,c
  2887  000F54  B4D8               	btfsc	status,2,c
  2888  000F56  D014               	goto	l1767
  2889  000F58  0EF7               	movlw	247
  2890  000F5A  6E04               	movwf	??_isspace& (0+255),c
  2891  000F5C  0EFF               	movlw	255
  2892  000F5E  6E05               	movwf	(??_isspace+1)& (0+255),c
  2893  000F60  C002  F006         	movff	isspace@c,??_isspace+2
  2894  000F64  C003  F007         	movff	isspace@c+1,??_isspace+3
  2895  000F68  5004               	movf	??_isspace,w,c
  2896  000F6A  2606               	addwf	??_isspace+2,f,c
  2897  000F6C  5005               	movf	??_isspace+1,w,c
  2898  000F6E  2207               	addwfc	??_isspace+3,f,c
  2899  000F70  5007               	movf	??_isspace+3,w,c
  2900  000F72  E104               	bnz	u750
  2901  000F74  0E05               	movlw	5
  2902  000F76  5C06               	subwf	??_isspace+2,w,c
  2903  000F78  A0D8               	btfss	status,0,c
  2904  000F7A  D002               	goto	l1767
  2905  000F7C                     u750:
  2906  000F7C  0E00               	movlw	0
  2907  000F7E  6E08               	movwf	_isspace$1330,c
  2908  000F80                     l1767:
  2909  000F80  C008  F002         	movff	_isspace$1330,?_isspace
  2910  000F84  6A03               	clrf	?_isspace+1,c
  2911  000F86  0012               	return		;funcret
  2912  000F88                     __end_of_isspace:
  2913                           	opt callstack 0
  2914                           
  2915 ;; *************** function _isdigit *****************
  2916 ;; Defined at:
  2917 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  c               2    1[COMRAM] int 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    1[COMRAM] int 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2931 ;;      Params:         2       0       0       0       0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2933 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2934 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2935 ;;Total ram usage:        6 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    2
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_atoi
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text23
  2946  0010A4                     __ptext23:
  2947                           	opt callstack 0
  2948  0010A4                     _isdigit:
  2949                           	opt callstack 27
  2950                           
  2951                           ;incstack = 0
  2952  0010A4  0ED0               	movlw	208
  2953  0010A6  6E04               	movwf	??_isdigit& (0+255),c
  2954  0010A8  0EFF               	movlw	255
  2955  0010AA  6E05               	movwf	(??_isdigit+1)& (0+255),c
  2956  0010AC  C002  F006         	movff	isdigit@c,??_isdigit+2
  2957  0010B0  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  2958  0010B4  5004               	movf	??_isdigit,w,c
  2959  0010B6  2606               	addwf	??_isdigit+2,f,c
  2960  0010B8  5005               	movf	??_isdigit+1,w,c
  2961  0010BA  2207               	addwfc	??_isdigit+3,f,c
  2962  0010BC  5007               	movf	??_isdigit+3,w,c
  2963  0010BE  E106               	bnz	u760
  2964  0010C0  0E0A               	movlw	10
  2965  0010C2  5C06               	subwf	??_isdigit+2,w,c
  2966  0010C4  B0D8               	btfsc	status,0,c
  2967  0010C6  D002               	goto	u760
  2968  0010C8  0E01               	movlw	1
  2969  0010CA  D001               	goto	u770
  2970  0010CC                     u760:
  2971  0010CC  0E00               	movlw	0
  2972  0010CE                     u770:
  2973  0010CE  6E02               	movwf	?_isdigit,c
  2974  0010D0  6A03               	clrf	?_isdigit+1,c
  2975  0010D2  0012               	return		;funcret
  2976  0010D4                     __end_of_isdigit:
  2977                           	opt callstack 0
  2978                           
  2979 ;; *************** function ___wmul *****************
  2980 ;; Defined at:
  2981 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  multiplier      2    1[COMRAM] unsigned int 
  2984 ;;  multiplicand    2    3[COMRAM] unsigned int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  product         2    5[COMRAM] unsigned int 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2    1[COMRAM] unsigned int 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, prodl, prodh
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         4       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_atoi
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text24
  3011  001150                     __ptext24:
  3012                           	opt callstack 0
  3013  001150                     ___wmul:
  3014                           	opt callstack 27
  3015                           
  3016                           ;incstack = 0
  3017  001150  5002               	movf	___wmul@multiplier,w,c
  3018  001152  0204               	mulwf	___wmul@multiplicand,c
  3019  001154  CFF3 F006          	movff	prodl,___wmul@product
  3020  001158  CFF4 F007          	movff	prodh,___wmul@product+1
  3021  00115C  5002               	movf	___wmul@multiplier,w,c
  3022  00115E  0205               	mulwf	___wmul@multiplicand+1,c
  3023  001160  50F3               	movf	prodl,w,c
  3024  001162  2607               	addwf	___wmul@product+1,f,c
  3025  001164  5003               	movf	___wmul@multiplier+1,w,c
  3026  001166  0204               	mulwf	___wmul@multiplicand,c
  3027  001168  50F3               	movf	prodl,w,c
  3028  00116A  2607               	addwf	___wmul@product+1,f,c
  3029  00116C  C006  F002         	movff	___wmul@product,?___wmul
  3030  001170  C007  F003         	movff	___wmul@product+1,?___wmul+1
  3031  001174  0012               	return		;funcret
  3032  001176                     __end_of___wmul:
  3033                           	opt callstack 0
  3034                           
  3035 ;; *************** function _interrupcao *****************
  3036 ;; Defined at:
  3037 ;;		line 194 in file "main.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    1
  3058 ;; This function calls:
  3059 ;;		_varreduraTeclado
  3060 ;; This function is called by:
  3061 ;;		Interrupt level 2
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	intcode
  3066  000008                     __pintcode:
  3067                           	opt callstack 0
  3068  000008                     _interrupcao:
  3069                           	opt callstack 24
  3070                           
  3071                           ;incstack = 0
  3072  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3073  00000A  ED81  F008         	call	int_func,f	;refresh shadow registers
  3074                           
  3075                           	psect	intcode_body
  3076  001102                     __pintcode_body:
  3077                           	opt callstack 24
  3078  001102                     int_func:
  3079                           	opt callstack 24
  3080  001102  0006               	pop		; remove dummy address from shadow register refresh
  3081                           
  3082                           ;main.c: 195:     if (INTCON3bits.INT1IF) {
  3083  001104  A0F0               	btfss	4080,0,c	;volatile
  3084  001106  D002               	goto	i2l166
  3085                           
  3086                           ;main.c: 197:         INTCON3bits.INT1IF = 0;
  3087  001108  90F0               	bcf	4080,0,c	;volatile
  3088                           
  3089                           ;main.c: 198:     } else if (INTCON3bits.INT2IF) {
  3090  00110A  D00D               	goto	i2l171
  3091  00110C                     i2l166:
  3092  00110C  A2F0               	btfss	4080,1,c	;volatile
  3093  00110E  D002               	goto	i2l168
  3094                           
  3095                           ;main.c: 200:         INTCON3bits.INT2IF = 0;
  3096  001110  92F0               	bcf	4080,1,c	;volatile
  3097                           
  3098                           ;main.c: 201:     } else if (INTCONbits.TMR0IF) {
  3099  001112  D009               	goto	i2l171
  3100  001114                     i2l168:
  3101  001114  A4F2               	btfss	4082,2,c	;volatile
  3102  001116  D007               	goto	i2l171
  3103                           
  3104                           ;main.c: 202:         varreduraTeclado();
  3105  001118  ECC4  F007         	call	_varreduraTeclado	;wreg free
  3106                           
  3107                           ;main.c: 203:         TMR0 = 100;
  3108  00111C  0E00               	movlw	0
  3109  00111E  6ED7               	movwf	4055,c	;volatile
  3110  001120  0E64               	movlw	100
  3111  001122  6ED6               	movwf	4054,c	;volatile
  3112                           
  3113                           ;main.c: 204:         INTCONbits.TMR0IF = 0;
  3114  001124  94F2               	bcf	4082,2,c	;volatile
  3115  001126                     i2l171:
  3116  001126  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3117  001128  0011               	retfie		f
  3118  00112A                     __end_of_interrupcao:
  3119                           	opt callstack 0
  3120                           
  3121 ;; *************** function _varreduraTeclado *****************
  3122 ;; Defined at:
  3123 ;;		line 119 in file "main.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3139 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3140 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3141 ;;Total ram usage:        1 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_interrupcao
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text26
  3151  000F88                     __ptext26:
  3152                           	opt callstack 0
  3153  000F88                     _varreduraTeclado:
  3154                           	opt callstack 24
  3155                           
  3156                           ;main.c: 120:     if(!PORTBbits.RB3){
  3157                           
  3158                           ;incstack = 0
  3159  000F88  B681               	btfsc	3969,3,c	;volatile
  3160  000F8A  D003               	goto	i2l71
  3161                           
  3162                           ;main.c: 121:         PORTBbits.RB3 = 1;
  3163  000F8C  8681               	bsf	3969,3,c	;volatile
  3164                           
  3165                           ;main.c: 122:         PORTBbits.RB2 = 0;
  3166  000F8E  9481               	bcf	3969,2,c	;volatile
  3167                           
  3168                           ;main.c: 123:     }else if(!PORTBbits.RB2){
  3169  000F90  D00E               	goto	i2l74
  3170  000F92                     i2l71:
  3171  000F92  B481               	btfsc	3969,2,c	;volatile
  3172  000F94  D003               	goto	i2l73
  3173                           
  3174                           ;main.c: 124:         PORTBbits.RB2 = 1;
  3175  000F96  8481               	bsf	3969,2,c	;volatile
  3176                           
  3177                           ;main.c: 125:         PORTBbits.RB1 = 0;
  3178  000F98  9281               	bcf	3969,1,c	;volatile
  3179                           
  3180                           ;main.c: 126:     }else if(!PORTBbits.RB1){
  3181  000F9A  D009               	goto	i2l74
  3182  000F9C                     i2l73:
  3183  000F9C  B281               	btfsc	3969,1,c	;volatile
  3184  000F9E  D003               	goto	i2l75
  3185                           
  3186                           ;main.c: 127:         PORTBbits.RB1 = 1;
  3187  000FA0  8281               	bsf	3969,1,c	;volatile
  3188                           
  3189                           ;main.c: 128:         PORTBbits.RB0 = 0;
  3190  000FA2  9081               	bcf	3969,0,c	;volatile
  3191                           
  3192                           ;main.c: 129:     }else if(!PORTBbits.RB0){
  3193  000FA4  D004               	goto	i2l74
  3194  000FA6                     i2l75:
  3195  000FA6  B081               	btfsc	3969,0,c	;volatile
  3196  000FA8  D002               	goto	i2l74
  3197                           
  3198                           ;main.c: 130:         PORTBbits.RB0 = 1;
  3199  000FAA  8081               	bsf	3969,0,c	;volatile
  3200                           
  3201                           ;main.c: 131:         PORTBbits.RB3 = 0;
  3202  000FAC  9681               	bcf	3969,3,c	;volatile
  3203  000FAE                     i2l74:
  3204                           
  3205                           ;main.c: 133:     PORTDbits.RD0 = !PORTDbits.RD0;
  3206  000FAE  B083               	btfsc	3971,0,c	;volatile
  3207  000FB0  D003               	goto	i2u26_40
  3208  000FB2  6A01               	clrf	??_varreduraTeclado& (0+255),c
  3209  000FB4  2A01               	incf	??_varreduraTeclado& (0+255),f,c
  3210  000FB6  D001               	goto	i2u27_48
  3211  000FB8                     i2u26_40:
  3212  000FB8  6A01               	clrf	??_varreduraTeclado& (0+255),c
  3213  000FBA                     i2u27_48:
  3214  000FBA  5083               	movf	3971,w,c	;volatile
  3215  000FBC  1801               	xorwf	??_varreduraTeclado,w,c
  3216  000FBE  0BFE               	andlw	-2
  3217  000FC0  1801               	xorwf	??_varreduraTeclado,w,c
  3218  000FC2  6E83               	movwf	3971,c	;volatile
  3219  000FC4  0012               	return		;funcret
  3220  000FC6                     __end_of_varreduraTeclado:
  3221                           	opt callstack 0
  3222                           
  3223                           	psect	rparam
  3224  0000                     
  3225                           	psect	temp
  3226  00005C                     btemp:
  3227                           	opt callstack 0
  3228  00005C                     	ds	1
  3229  0000                     int$flags	set	btemp
  3230  0000                     wtemp8	set	btemp+1
  3231  0000                     ttemp5	set	btemp+1
  3232  0000                     ttemp6	set	btemp+4
  3233  0000                     ttemp7	set	btemp+8
  3234                           tosu	equ	0xFFF
  3235                           tosh	equ	0xFFE
  3236                           tosl	equ	0xFFD
  3237                           stkptr	equ	0xFFC
  3238                           pclatu	equ	0xFFB
  3239                           pclath	equ	0xFFA
  3240                           pcl	equ	0xFF9
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           prodh	equ	0xFF4
  3246                           prodl	equ	0xFF3
  3247                           indf0	equ	0xFEF
  3248                           postinc0	equ	0xFEE
  3249                           postdec0	equ	0xFED
  3250                           preinc0	equ	0xFEC
  3251                           plusw0	equ	0xFEB
  3252                           fsr0h	equ	0xFEA
  3253                           fsr0l	equ	0xFE9
  3254                           wreg	equ	0xFE8
  3255                           indf1	equ	0xFE7
  3256                           postinc1	equ	0xFE6
  3257                           postdec1	equ	0xFE5
  3258                           preinc1	equ	0xFE4
  3259                           plusw1	equ	0xFE3
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           bsr	equ	0xFE0
  3263                           indf2	equ	0xFDF
  3264                           postinc2	equ	0xFDE
  3265                           postdec2	equ	0xFDD
  3266                           preinc2	equ	0xFDC
  3267                           plusw2	equ	0xFDB
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[2]), STR_3(CODE[10]), STR_1(CODE[2]), 

    lcdTxt@txt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_tecladoMatricial
    _verificaMemoria->_EEPROM_Ler
    _lcd->_WriteCmdXLCD
    _lcd->_WriteDataXLCD
    _config_ldc->_lcdTxt
    _lcdTxt->_putrsXLCD
    _lcdTxt->_putsXLCD
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _atoi->_isspace

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_varreduraTeclado

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0    4129
                                             29 COMRAM    44    44      0
                         _EEPROM_Ler
                       _WriteCmdXLCD
                               _atoi
                 _config_interrupcao
                         _config_ldc
                         _config_led
                     _config_teclado
                      _config_timer0
                                _lcd
                           _putsXLCD
                   _tecladoMatricial
                    _verificaMemoria
 ---------------------------------------------------------------------------------
 (1) _verificaMemoria                                      2     0      2     250
                                              3 COMRAM     2     0      2
                         _EEPROM_Ler
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Ler                                           2     0      2     250
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _tecladoMatricial                                    28    26      2     318
                                              1 COMRAM    28    26      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 19    17      2     294
                                              2 COMRAM    19    17      2
                           _BusyXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_teclado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ldc                                           0     0      0     687
                           _OpenXLCD
                       _WriteCmdXLCD
                             _lcdTxt
 ---------------------------------------------------------------------------------
 (2) _lcdTxt                                               3     1      2     582
                                              4 COMRAM     3     1      2
                       _WriteCmdXLCD
                          _putrsXLCD
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     303
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2     151
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      75
                                              2 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                16    13      3    1152
                                              8 COMRAM    16    13      3
                         _EEPROM_Ler (ARG)
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcao                                          0     0      0       0
                   _varreduraTeclado
 ---------------------------------------------------------------------------------
 (7) _varreduraTeclado                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Ler
   _WriteCmdXLCD
     _DelayFor18TCY
   _atoi
     _EEPROM_Ler (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _isspace (ARG)
   _config_interrupcao
   _config_ldc
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _lcdTxt
       _WriteCmdXLCD
         _DelayFor18TCY
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
   _config_led
   _config_teclado
   _config_timer0
   _lcd
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _tecladoMatricial
   _verificaMemoria
     _EEPROM_Ler

 _interrupcao (ROOT)
   _varreduraTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      20        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 31 21:47:08 2022

                         l81 0AE4                           l99 0B3C                           u60 0DA0  
        ___wmul@multiplicand 0004                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
          ?_tecladoMatricial 0002                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
      tecladoMatricial@tecla 001C                 __CFG_CP3$OFF 000000                          l117 0B94  
                        l284 1028                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        u810 0E4E                          u750 0F7C                          u760 10CC  
                        u770 10CE                          u781 0E0C                          u790 0E1E  
               __CFG_BOR$OFF 000000           ??_tecladoMatricial 0004                          _lcd 0E02  
      __size_of_WriteCmdXLCD 003E                          wreg 000FE8                 __CFG_FOSC$HS 000000  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l1018 0D50  
                       l1213 0D96                         l2021 096E                         l1231 0DE0  
                       l1223 0DC0                         l2015 0966                         l2041 09FE  
                       l2009 0916                         l1235 0DF0                         l1227 0DD0  
                       l1219 0DB0                         l2051 0A1A                         l2037 09C4  
                       l2055 0A54                         l1723 1090                         l1811 0AA6  
                       l1717 1072                         l1733 105C                         l1821 0AD2  
                       l1813 0AAE                         l1727 103E                         l1815 0AB8  
                       l1823 0ADC                         l1921 0C14                         l1841 0B18  
                       l1817 0AC0                         l1913 1146                         ?_lcd 0003  
                       l1835 0AFE                         l1843 0B22                         l1819 0ACA  
                       l1941 0CB4                         l1861 0B5E                         l1845 0B2A  
                       l1837 0B06                         l1767 0F80                         l1935 0C72  
                       l1919 0C08                         l1783 0E3A                         l1863 0B68  
                       l1871 0B8C                         l1839 0B10                         l1847 0B34  
                       l1945 0CEC                         l1937 0C7A                         l1929 0C62  
                       l1793 0E6E                         l1865 0B70                         l1939 0C88  
                       l1787 0E54                         l1795 0E74                         l1883 0BAE  
                       l1891 0BD2                         l1859 0B56                         l1867 0B7A  
                       l1893 0BDA                         l1885 0BB6                         l1869 0B82  
                       l1887 0BC0                         l1895 0BE4                         l1991 08B6  
                       l1889 0BC8                         l1897 0BEC                         l1985 0860  
                       l1997 08BE                         STR_1 080B                         STR_2 0801  
                       STR_3 0801                         STR_4 080B                         u1050 0C5E  
                       u1130 090E                         u1140 0966                         u1070 0D20  
                       u1150 09B4                         u1080 0D22                         u1160 09F6  
                       u1217 0A7C                         u1170 0A12                         u1227 0E84  
                       u1180 0A4C                         u1237 0FD2                         u1190 0A68  
                       u1247 11E2                         u1257 11F4                         u1267 120E  
                       i2l71 0F92                         i2l73 0F9C                         i2l74 0FAE  
                       i2l75 0FA6                         _RBPU 007F8F                         _TMR0 000FD6  
                       _atoi 0BF6                         _main 080E    __size_of_varreduraTeclado 003E  
           ?_verificaMemoria 0004                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 005C       __size_of_WriteDataXLCD 003E                         prodh 000FF4  
                       prodl 000FF3                         start 000E                __CFG_IESO$OFF 000000  
        __size_of_EEPROM_Ler 000E                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_lcd 0005                 _WriteCmdXLCD 0F0C                __CFG_PLLDIV$1 000000  
                      ?_atoi 0009                ?_SetDDRamAddr 0001                        ?_main 0001  
                      _EEADR 000FA9                        i2l171 1126                        i2l166 110C  
                      i2l168 1114                        _PORTD 000F83                __CFG_USBDIV$1 000000  
                      _TRISD 000F95  __size_of_config_interrupcao 0008                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000              __end_of_isdigit 10D4                        atoi@n 0017  
                      atoi@s 0009                        main@i 0048              __end_of_isspace 0F88  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      ttemp5 005D                        ttemp6 0060                        ttemp7 0064  
                      status 000FD8              ??_config_timer0 0002                        wtemp8 005D  
             __CFG_ICPRT$OFF 000000              __initialization 10D4                 ?_interrupcao 0001  
               __end_of_atoi 0D5A                 __end_of_main 0A8C             __end_of_BusyXLCD 103C  
         __size_of_DelayXLCD 0012        __size_of_DelayPORXLCD 0010               ??_SetDDRamAddr 0002  
           __end_of_OpenXLCD 0E02                       ??_atoi 000C                       ??_main 001E  
              __activetblptr 000002                _WriteDataXLCD 0ECE              __CFG_CCP2MX$OFF 000000  
                     _ADCON1 000FC1                       _EEDATA 000FA8                       _EECON2 000FA7  
               _DelayPORXLCD 11EE               __CFG_XINST$OFF 000000                       ___wmul 1150  
       _tecladoMatricial$630 0010         _tecladoMatricial$631 0012         _tecladoMatricial$632 0014  
       _tecladoMatricial$624 0004         _tecladoMatricial$633 0016         _tecladoMatricial$625 0006  
       _tecladoMatricial$634 0018         _tecladoMatricial$626 0008         _tecladoMatricial$635 001A  
       _tecladoMatricial$627 000A         _tecladoMatricial$628 000C         _tecladoMatricial$629 000E  
                     _lcdTxt 0FC6                       _cursor 005A               ?_WriteDataXLCD 0001  
               ??_EEPROM_Ler 0004                 __pdataCOMRAM 004A                    ??_isdigit 0004  
               __mediumconst 0000                    ??_isspace 0004                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             ??_config_teclado 0002  
           __end_of_putsXLCD 1070            __end_of_DelayXLCD 11EE                   __accesstop 0060  
    __end_of__initialization 10F4              __CFG_PBADEN$OFF 000000             _varreduraTeclado 0F88  
              ___rparam_used 000001           __end_of_EEPROM_Ler 120C               __pcstackCOMRAM 0001  
     __size_of_DelayFor18TCY 000A                    ?_BusyXLCD 0001    __size_of_tecladoMatricial 016A  
            WriteCmdXLCD@cmd 0002         __end_of_SetDDRamAddr 0ECE                    ?_OpenXLCD 0001  
          WriteDataXLCD@data 0002                      ?___wmul 0002                      ?_lcdTxt 0005  
       __size_of_interrupcao 1122              ??_WriteDataXLCD 0002                   _config_ldc 11B0  
                 _config_led 121E                      i2u26_40 0FB8                      i2u27_48 0FBA  
         __size_of_putrsXLCD 0034                   ??_BusyXLCD 0002              __CFG_VREGEN$OFF 000000  
                 ??_OpenXLCD 0003                      __Hparam 0000                      __Lparam 0000  
              _DelayFor18TCY 120C     __size_of_verificaMemoria 0026              __size_of___wmul 0026  
                  ?_putsXLCD 0003                 __psmallconst 0800              __size_of_lcdTxt 003C  
            __CFG_STVREN$OFF 000000               main@senhaAdmin 0032                      __pcinit 10D4  
            putrsXLCD@buffer 0003               main@senhaAtual 002A                      __ramtop 0800  
                    __ptext0 080E                      __ptext1 112A                      __ptext2 11FE  
                    __ptext3 0A8C                      __ptext4 0E02   __end_of_config_interrupcao 121E  
                    __ptext5 1196                      __ptext6 1176                      __ptext7 121E  
                    __ptext8 11B0                      __ptext9 0FC6                    _T0CONbits 000FD5  
               __size_of_lcd 008C                      _isdigit 10A4                      _isspace 0F4A  
                    atoi@neg 0010               __pintcode_body 1102         end_of_initialization 10F4  
              __Lmediumconst 0000                      int_func 1102                   lcd@teclado 0006  
      __end_of_config_timer0 11B0               ?_DelayFor18TCY 0001                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_putsXLCD 0005            __end_of_putrsXLCD 10A4  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
   __end_of_varreduraTeclado 0FC6                EEPROM_Ler@dir 0002                  ?_config_ldc 0001  
                ?_config_led 0001                    _TRISBbits 000F93                    _TRISDbits 000F95  
                  _TRISEbits 000F96        __size_of_SetDDRamAddr 0040             _tecladoMatricial 0A8C  
                  _DelayXLCD 11DC               __end_of___wmul 1176                __pidataCOMRAM 11CA  
             __end_of_lcdTxt 1002                 _SetDDRamAddr 0E8E            ??_verificaMemoria 0006  
         SetDDRamAddr@DDaddr 0002          start_initialization 10D4                  __end_of_lcd 0E8E  
          __size_of_BusyXLCD 003A                   ?_DelayXLCD 0001              ??_DelayFor18TCY 0002  
          __size_of_OpenXLCD 00A8          __size_of_config_ldc 001A          __size_of_config_led 0006  
                   ??___wmul 0006                ?_WriteCmdXLCD 0001                     ??_lcdTxt 0007  
           __CFG_LPT1OSC$OFF 000000                    _atoi$1312 0012                    _atoi$1313 0016  
                  _atoi$1314 0014      __size_of_config_teclado 0020               putsXLCD@buffer 0003  
              ??_interrupcao 0002                    __pintcode 0008               ??_WriteCmdXLCD 0002  
          __size_of_putsXLCD 0034        __end_of_WriteDataXLCD 0F0C                  __smallconst 0800  
                   ?_isdigit 0002                     ?_isspace 0002           _config_interrupcao 1216  
             ___wmul@product 0006                     _LATEbits 000F8D                  ??_DelayXLCD 0002  
              ?_DelayPORXLCD 0001          ?_config_interrupcao 0001              OpenXLCD@lcdtype 0003  
                   _PIR2bits 000FA1                     _RCONbits 000FD0             __CFG_WDTPS$32768 000000  
   __end_of_tecladoMatricial 0BF6                    lcdTxt@txt 0005          __end_of_interrupcao 112A  
                  main@i_770 0046                    main@i_763 0040                    main@i_765 0042  
                  main@i_766 003E                    main@i_769 0044            ___wmul@multiplier 0002  
          ?_varreduraTeclado 0001         ??_config_interrupcao 0002                    _putrsXLCD 1070  
                  main@tecla 003A                    main@senha 0022                 ??_config_ldc 0008  
               ??_config_led 0002           ??_varreduraTeclado 0001                 _isspace$1330 0008  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0                    copy_data0 10E8  
                   _BusyXLCD 1002               ??_DelayPORXLCD 0002                   _EECON1bits 000FA6  
                   _OpenXLCD 0D5A                     __Hrparam 0000                     __Lrparam 0000  
            _verificaMemoria 112A           __end_of_config_ldc 11CA           __end_of_config_led 1224  
                 _EEPROM_Ler 11FE                   ?_putrsXLCD 0003             __size_of_isdigit 0030  
     __size_of_config_timer0 001A             __size_of_isspace 003E                     __ptext10 103C  
                   __ptext11 1070                     __ptext20 1216                     __ptext12 0ECE  
                   __ptext21 0BF6                     __ptext13 0D5A                     __ptext22 0F4A  
                   __ptext14 0F0C                     __ptext23 10A4                     __ptext15 0E8E  
                   __ptext24 1150                     __ptext16 11DC                     __ptext17 11EE  
                   __ptext26 0F88                     __ptext18 1002                     __ptext19 120C  
                   lcd@F3185 004A         __end_of_WriteCmdXLCD 0F4A                __size_of_atoi 0164  
              __size_of_main 027E               _config_teclado 1176                     lcd@tecla 0003  
                _interrupcao 0008                     int$flags 005C                     _putsXLCD 103C  
                   main@ctrl 003C        __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2  
                   isdigit@c 0002                     intlevel2 0000       __end_of_config_teclado 1196  
                   isspace@c 0002      __end_of_verificaMemoria 1150                _config_timer0 1196  
      __end_of_DelayFor18TCY 1216         __end_of_DelayPORXLCD 11FE                  ?_EEPROM_Ler 0002  
                ??_putrsXLCD 0005              ?_config_teclado 0001               ?_config_timer0 0001  
