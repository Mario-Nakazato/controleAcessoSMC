

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 31 19:39:05 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  000D2A                     __pidataCOMRAM:
    71                           	opt callstack 0
    72                           
    73                           ;initializer for lcd@F3183
    74  000D2A  31                 	db	49
    75  000D2B  32                 	db	50
    76  000D2C  33                 	db	51
    77  000D2D  41                 	db	65
    78  000D2E  34                 	db	52
    79  000D2F  35                 	db	53
    80  000D30  36                 	db	54
    81  000D31  42                 	db	66
    82  000D32  37                 	db	55
    83  000D33  38                 	db	56
    84  000D34  39                 	db	57
    85  000D35  43                 	db	67
    86  000D36  2A                 	db	42
    87  000D37  30                 	db	48
    88  000D38  23                 	db	35
    89  000D39  44                 	db	68
    90                           
    91                           ;initializer for _cursor
    92  000D3A  00C1               	dw	193
    93  0000                     _TMR0	set	4054
    94  0000                     _LATEbits	set	3981
    95  0000                     _TRISEbits	set	3990
    96  0000                     _TRISD	set	3989
    97  0000                     _PORTD	set	3971
    98  0000                     _RCONbits	set	4048
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _T0CONbits	set	4053
   101  0000                     _INTCONbits	set	4082
   102  0000                     _INTCON3bits	set	4080
   103  0000                     _TRISDbits	set	3989
   104  0000                     _TRISBbits	set	3987
   105  0000                     _ADCON1	set	4033
   106  0000                     _PORTDbits	set	3971
   107  0000                     _PORTBbits	set	3969
   108  0000                     _RBPU	set	32655
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	opt callstack 0
   113  000800  00                 	db	0
   114  000801                     STR_1:
   115  000801  46                 	db	70	;'F'
   116  000802  65                 	db	101	;'e'
   117  000803  63                 	db	99	;'c'
   118  000804  68                 	db	104	;'h'
   119  000805  61                 	db	97	;'a'
   120  000806  64                 	db	100	;'d'
   121  000807  75                 	db	117	;'u'
   122  000808  72                 	db	114	;'r'
   123  000809  61                 	db	97	;'a'
   124  00080A  00                 	db	0
   125  00080B                     STR_2:
   126  00080B  3A                 	db	58	;':'
   127  00080C  00                 	db	0
   128                           
   129                           ; #config settings
   130  00080D  00                 	db	0	; dummy byte at the end
   131  0000                     
   132                           	psect	cinit
   133  000C7A                     __pcinit:
   134                           	opt callstack 0
   135  000C7A                     start_initialization:
   136                           	opt callstack 0
   137  000C7A                     __initialization:
   138                           	opt callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (18 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142  000C7A  0E2A               	movlw	low __pidataCOMRAM
   143  000C7C  6EF6               	movwf	tblptrl,c
   144  000C7E  0E0D               	movlw	high __pidataCOMRAM
   145  000C80  6EF7               	movwf	tblptrh,c
   146  000C82  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147  000C84  6EF8               	movwf	tblptru,c
   148  000C86  EE00  F020         	lfsr	0,__pdataCOMRAM
   149  000C8A  EE10 F012          	lfsr	1,18
   150  000C8E                     copy_data0:
   151  000C8E  0009               	tblrd		*+
   152  000C90  CFF5 FFEE          	movff	tablat,postinc0
   153  000C94  50E5               	movf	postdec1,w,c
   154  000C96  50E1               	movf	fsr1l,w,c
   155  000C98  E1FA               	bnz	copy_data0
   156  000C9A                     end_of_initialization:
   157                           	opt callstack 0
   158  000C9A                     __end_of__initialization:
   159                           	opt callstack 0
   160  000C9A  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   161  000C9C  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   162  000C9E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  000CA0  6EF8               	movwf	tblptru,c
   164  000CA2  0E08               	movlw	high __Lsmallconst
   165  000CA4  6EF7               	movwf	tblptrh,c
   166  000CA6  0100               	movlb	0
   167  000CA8  EF5D  F005         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	dataCOMRAM
   170  000020                     __pdataCOMRAM:
   171                           	opt callstack 0
   172  000020                     lcd@F3183:
   173                           	opt callstack 0
   174  000020                     	ds	16
   175  000030                     _cursor:
   176                           	opt callstack 0
   177  000030                     	ds	2
   178                           
   179                           	psect	cstackCOMRAM
   180  000001                     __pcstackCOMRAM:
   181                           	opt callstack 0
   182  000001                     ??_varreduraTeclado:
   183  000001                     
   184                           ; 1 bytes @ 0x0
   185  000001                     	ds	1
   186  000002                     ??_DelayPORXLCD:
   187  000002                     ??_DelayXLCD:
   188  000002                     ?_tecladoMatricial:
   189                           	opt callstack 0
   190  000002                     SetDDRamAddr@DDaddr:
   191                           	opt callstack 0
   192  000002                     WriteCmdXLCD@cmd:
   193                           	opt callstack 0
   194  000002                     WriteDataXLCD@data:
   195                           	opt callstack 0
   196                           
   197                           ; 1 bytes @ 0x1
   198  000002                     	ds	1
   199  000003                     OpenXLCD@lcdtype:
   200                           	opt callstack 0
   201  000003                     lcd@tecla:
   202                           	opt callstack 0
   203  000003                     putsXLCD@buffer:
   204                           	opt callstack 0
   205                           
   206                           ; 2 bytes @ 0x2
   207  000003                     	ds	1
   208  000004                     ??_config_ldc:
   209  000004                     _tecladoMatricial$485:
   210                           	opt callstack 0
   211                           
   212                           ; 2 bytes @ 0x3
   213  000004                     	ds	1
   214  000005                     ??_lcd:
   215                           
   216                           ; 1 bytes @ 0x4
   217  000005                     	ds	1
   218  000006                     _tecladoMatricial$486:
   219                           	opt callstack 0
   220  000006                     lcd@teclado:
   221                           	opt callstack 0
   222                           
   223                           ; 16 bytes @ 0x5
   224  000006                     	ds	2
   225  000008                     _tecladoMatricial$487:
   226                           	opt callstack 0
   227                           
   228                           ; 2 bytes @ 0x7
   229  000008                     	ds	2
   230  00000A                     _tecladoMatricial$488:
   231                           	opt callstack 0
   232                           
   233                           ; 2 bytes @ 0x9
   234  00000A                     	ds	2
   235  00000C                     _tecladoMatricial$489:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0xB
   239  00000C                     	ds	2
   240  00000E                     _tecladoMatricial$490:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0xD
   244  00000E                     	ds	2
   245  000010                     _tecladoMatricial$491:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0xF
   249  000010                     	ds	2
   250  000012                     _tecladoMatricial$492:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x11
   254  000012                     	ds	2
   255  000014                     _tecladoMatricial$493:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0x13
   259  000014                     	ds	2
   260  000016                     _tecladoMatricial$494:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x15
   264  000016                     	ds	2
   265  000018                     _tecladoMatricial$495:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x17
   269  000018                     	ds	2
   270  00001A                     _tecladoMatricial$496:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x19
   274  00001A                     	ds	2
   275  00001C                     tecladoMatricial@tecla:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x1B
   279  00001C                     	ds	2
   280  00001E                     main@tecla:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x1D
   284  00001E                     	ds	2
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 252 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  tecla           2   29[COMRAM] int 
   296 ;;  teclaAnterio    2    0        int 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         0       0       0       0       0       0       0       0       0
   307 ;;      Locals:         2       0       0       0       0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0
   309 ;;      Totals:         2       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:        2 bytes
   311 ;; Hardware stack levels required when called:    6
   312 ;; This function calls:
   313 ;;		_WriteCmdXLCD
   314 ;;		_config_interrupcao
   315 ;;		_config_ldc
   316 ;;		_config_led
   317 ;;		_config_teclado
   318 ;;		_config_timer0
   319 ;;		_lcd
   320 ;;		_putsXLCD
   321 ;;		_tecladoMatricial
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text0
   328  000ABA                     __ptext0:
   329                           	opt callstack 0
   330  000ABA                     _main:
   331                           	opt callstack 25
   332                           
   333                           ;main.c: 254:     config_interrupcao();
   334                           
   335                           ;incstack = 0
   336  000ABA  ECB4  F006         	call	_config_interrupcao	;wreg free
   337                           
   338                           ;main.c: 258:     config_timer0();
   339  000ABE  EC88  F006         	call	_config_timer0	;wreg free
   340                           
   341                           ;main.c: 259:     config_led();
   342  000AC2  ECB8  F006         	call	_config_led	;wreg free
   343                           
   344                           ;main.c: 260:     config_teclado();
   345  000AC6  EC6A  F006         	call	_config_teclado	;wreg free
   346                           
   347                           ;main.c: 261:     config_ldc();
   348  000ACA  EC7A  F006         	call	_config_ldc	;wreg free
   349                           
   350                           ;main.c: 263:     WriteCmdXLCD(0x80);
   351  000ACE  0E80               	movlw	128
   352  000AD0  ECC8  F005         	call	_WriteCmdXLCD
   353                           
   354                           ;main.c: 264:     putsXLCD("Fechadura");
   355  000AD4  0E01               	movlw	low STR_1
   356  000AD6  6E03               	movwf	putsXLCD@buffer,c
   357  000AD8  0E08               	movlw	high STR_1
   358  000ADA  6E04               	movwf	putsXLCD@buffer+1,c
   359  000ADC  EC23  F006         	call	_putsXLCD	;wreg free
   360                           
   361                           ;main.c: 265:     WriteCmdXLCD(0xC0);
   362  000AE0  0EC0               	movlw	192
   363  000AE2  ECC8  F005         	call	_WriteCmdXLCD
   364                           
   365                           ;main.c: 266:     putsXLCD(":");
   366  000AE6  0E0B               	movlw	low STR_2
   367  000AE8  6E03               	movwf	putsXLCD@buffer,c
   368  000AEA  0E08               	movlw	high STR_2
   369  000AEC  6E04               	movwf	putsXLCD@buffer+1,c
   370  000AEE  EC23  F006         	call	_putsXLCD	;wreg free
   371                           
   372                           ;main.c: 267:     WriteCmdXLCD(0xC1);
   373  000AF2  0EC1               	movlw	193
   374  000AF4  ECC8  F005         	call	_WriteCmdXLCD
   375  000AF8                     l172:
   376                           
   377                           ;main.c: 272:         tecla = tecladoMatricial();
   378  000AF8  EC07  F004         	call	_tecladoMatricial	;wreg free
   379  000AFC  C002  F01E         	movff	?_tecladoMatricial,main@tecla
   380  000B00  C003  F01F         	movff	?_tecladoMatricial+1,main@tecla+1
   381                           
   382                           ;main.c: 273:         lcd(tecla);
   383  000B04  C01E  F003         	movff	main@tecla,lcd@tecla
   384  000B08  C01F  F004         	movff	main@tecla+1,lcd@tecla+1
   385  000B0C  EC10  F005         	call	_lcd	;wreg free
   386  000B10  D7F3               	goto	l172
   387  000B12                     __end_of_main:
   388                           	opt callstack 0
   389                           
   390 ;; *************** function _tecladoMatricial *****************
   391 ;; Defined at:
   392 ;;		line 129 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  tecla           2   27[COMRAM] int 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  2    1[COMRAM] int 
   399 ;; Registers used:
   400 ;;		wreg, status,2
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   406 ;;      Params:         2       0       0       0       0       0       0       0       0
   407 ;;      Locals:        26       0       0       0       0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0       0       0
   409 ;;      Totals:        28       0       0       0       0       0       0       0       0
   410 ;;Total ram usage:       28 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:    2
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text1
   421  00080E                     __ptext1:
   422                           	opt callstack 0
   423  00080E                     _tecladoMatricial:
   424                           	opt callstack 28
   425                           
   426                           ;main.c: 130:     int tecla;;main.c: 131:     if(!PORTBbits.RB3){
   427                           
   428                           ;incstack = 0
   429  00080E  B681               	btfsc	3969,3,c	;volatile
   430  000810  D02A               	goto	l62
   431                           
   432                           ;main.c: 132:         tecla = !PORTBbits.RB4 ? 0:
   433  000812  A881               	btfss	3969,4,c	;volatile
   434  000814  D024               	goto	l1479
   435  000816  AA81               	btfss	3969,5,c	;volatile
   436  000818  D019               	goto	l1475
   437  00081A  AC81               	btfss	3969,6,c	;volatile
   438  00081C  D00E               	goto	l1471
   439  00081E  AE81               	btfss	3969,7,c	;volatile
   440  000820  D003               	goto	l1467
   441  000822  6808               	setf	_tecladoMatricial$487,c
   442  000824  6809               	setf	_tecladoMatricial$487+1,c
   443  000826  D004               	goto	l1469
   444  000828                     l1467:
   445  000828  0E00               	movlw	0
   446  00082A  6E09               	movwf	_tecladoMatricial$487+1,c
   447  00082C  0E0C               	movlw	12
   448  00082E  6E08               	movwf	_tecladoMatricial$487,c
   449  000830                     l1469:
   450  000830  C008  F006         	movff	_tecladoMatricial$487,_tecladoMatricial$486
   451  000834  C009  F007         	movff	_tecladoMatricial$487+1,_tecladoMatricial$486+1
   452  000838  D004               	goto	l1473
   453  00083A                     l1471:
   454  00083A  0E00               	movlw	0
   455  00083C  6E07               	movwf	_tecladoMatricial$486+1,c
   456  00083E  0E08               	movlw	8
   457  000840  6E06               	movwf	_tecladoMatricial$486,c
   458  000842                     l1473:
   459  000842  C006  F004         	movff	_tecladoMatricial$486,_tecladoMatricial$485
   460  000846  C007  F005         	movff	_tecladoMatricial$486+1,_tecladoMatricial$485+1
   461  00084A  D004               	goto	l1477
   462  00084C                     l1475:
   463  00084C  0E00               	movlw	0
   464  00084E  6E05               	movwf	_tecladoMatricial$485+1,c
   465  000850  0E04               	movlw	4
   466  000852  6E04               	movwf	_tecladoMatricial$485,c
   467  000854                     l1477:
   468  000854  C004  F01C         	movff	_tecladoMatricial$485,tecladoMatricial@tecla
   469  000858  C005  F01D         	movff	_tecladoMatricial$485+1,tecladoMatricial@tecla+1
   470  00085C  D088               	goto	l1553
   471  00085E                     l1479:
   472  00085E  0E00               	movlw	0
   473  000860  6E1D               	movwf	tecladoMatricial@tecla+1,c
   474  000862  0E00               	movlw	0
   475  000864  D083               	goto	L1
   476  000866                     l62:
   477  000866  B481               	btfsc	3969,2,c	;volatile
   478  000868  D02A               	goto	l80
   479                           
   480                           ;main.c: 137:         tecla = !PORTBbits.RB4 ? 1:
   481  00086A  A881               	btfss	3969,4,c	;volatile
   482  00086C  D024               	goto	l1503
   483  00086E  AA81               	btfss	3969,5,c	;volatile
   484  000870  D019               	goto	l1499
   485  000872  AC81               	btfss	3969,6,c	;volatile
   486  000874  D00E               	goto	l1495
   487  000876  AE81               	btfss	3969,7,c	;volatile
   488  000878  D003               	goto	l1491
   489  00087A  680E               	setf	_tecladoMatricial$490,c
   490  00087C  680F               	setf	_tecladoMatricial$490+1,c
   491  00087E  D004               	goto	l1493
   492  000880                     l1491:
   493  000880  0E00               	movlw	0
   494  000882  6E0F               	movwf	_tecladoMatricial$490+1,c
   495  000884  0E0D               	movlw	13
   496  000886  6E0E               	movwf	_tecladoMatricial$490,c
   497  000888                     l1493:
   498  000888  C00E  F00C         	movff	_tecladoMatricial$490,_tecladoMatricial$489
   499  00088C  C00F  F00D         	movff	_tecladoMatricial$490+1,_tecladoMatricial$489+1
   500  000890  D004               	goto	l1497
   501  000892                     l1495:
   502  000892  0E00               	movlw	0
   503  000894  6E0D               	movwf	_tecladoMatricial$489+1,c
   504  000896  0E09               	movlw	9
   505  000898  6E0C               	movwf	_tecladoMatricial$489,c
   506  00089A                     l1497:
   507  00089A  C00C  F00A         	movff	_tecladoMatricial$489,_tecladoMatricial$488
   508  00089E  C00D  F00B         	movff	_tecladoMatricial$489+1,_tecladoMatricial$488+1
   509  0008A2  D004               	goto	l1501
   510  0008A4                     l1499:
   511  0008A4  0E00               	movlw	0
   512  0008A6  6E0B               	movwf	_tecladoMatricial$488+1,c
   513  0008A8  0E05               	movlw	5
   514  0008AA  6E0A               	movwf	_tecladoMatricial$488,c
   515  0008AC                     l1501:
   516  0008AC  C00A  F01C         	movff	_tecladoMatricial$488,tecladoMatricial@tecla
   517  0008B0  C00B  F01D         	movff	_tecladoMatricial$488+1,tecladoMatricial@tecla+1
   518  0008B4  D05C               	goto	l1553
   519  0008B6                     l1503:
   520  0008B6  0E00               	movlw	0
   521  0008B8  6E1D               	movwf	tecladoMatricial@tecla+1,c
   522  0008BA  0E01               	movlw	1
   523  0008BC  D057               	goto	L1
   524  0008BE                     l80:
   525  0008BE  B281               	btfsc	3969,1,c	;volatile
   526  0008C0  D02A               	goto	l98
   527                           
   528                           ;main.c: 142:         tecla = !PORTBbits.RB4 ? 2:
   529  0008C2  A881               	btfss	3969,4,c	;volatile
   530  0008C4  D024               	goto	l1527
   531  0008C6  AA81               	btfss	3969,5,c	;volatile
   532  0008C8  D019               	goto	l1523
   533  0008CA  AC81               	btfss	3969,6,c	;volatile
   534  0008CC  D00E               	goto	l1519
   535  0008CE  AE81               	btfss	3969,7,c	;volatile
   536  0008D0  D003               	goto	l1515
   537  0008D2  6814               	setf	_tecladoMatricial$493,c
   538  0008D4  6815               	setf	_tecladoMatricial$493+1,c
   539  0008D6  D004               	goto	l1517
   540  0008D8                     l1515:
   541  0008D8  0E00               	movlw	0
   542  0008DA  6E15               	movwf	_tecladoMatricial$493+1,c
   543  0008DC  0E0E               	movlw	14
   544  0008DE  6E14               	movwf	_tecladoMatricial$493,c
   545  0008E0                     l1517:
   546  0008E0  C014  F012         	movff	_tecladoMatricial$493,_tecladoMatricial$492
   547  0008E4  C015  F013         	movff	_tecladoMatricial$493+1,_tecladoMatricial$492+1
   548  0008E8  D004               	goto	l1521
   549  0008EA                     l1519:
   550  0008EA  0E00               	movlw	0
   551  0008EC  6E13               	movwf	_tecladoMatricial$492+1,c
   552  0008EE  0E0A               	movlw	10
   553  0008F0  6E12               	movwf	_tecladoMatricial$492,c
   554  0008F2                     l1521:
   555  0008F2  C012  F010         	movff	_tecladoMatricial$492,_tecladoMatricial$491
   556  0008F6  C013  F011         	movff	_tecladoMatricial$492+1,_tecladoMatricial$491+1
   557  0008FA  D004               	goto	l1525
   558  0008FC                     l1523:
   559  0008FC  0E00               	movlw	0
   560  0008FE  6E11               	movwf	_tecladoMatricial$491+1,c
   561  000900  0E06               	movlw	6
   562  000902  6E10               	movwf	_tecladoMatricial$491,c
   563  000904                     l1525:
   564  000904  C010  F01C         	movff	_tecladoMatricial$491,tecladoMatricial@tecla
   565  000908  C011  F01D         	movff	_tecladoMatricial$491+1,tecladoMatricial@tecla+1
   566  00090C  D030               	goto	l1553
   567  00090E                     l1527:
   568  00090E  0E00               	movlw	0
   569  000910  6E1D               	movwf	tecladoMatricial@tecla+1,c
   570  000912  0E02               	movlw	2
   571  000914  D02B               	goto	L1
   572  000916                     l98:
   573  000916  B081               	btfsc	3969,0,c	;volatile
   574  000918  D02A               	goto	l1553
   575                           
   576                           ;main.c: 147:         tecla = !PORTBbits.RB4 ? 3:
   577  00091A  A881               	btfss	3969,4,c	;volatile
   578  00091C  D024               	goto	l1551
   579  00091E  AA81               	btfss	3969,5,c	;volatile
   580  000920  D019               	goto	l1547
   581  000922  AC81               	btfss	3969,6,c	;volatile
   582  000924  D00E               	goto	l1543
   583  000926  AE81               	btfss	3969,7,c	;volatile
   584  000928  D003               	goto	l1539
   585  00092A  681A               	setf	_tecladoMatricial$496,c
   586  00092C  681B               	setf	_tecladoMatricial$496+1,c
   587  00092E  D004               	goto	l1541
   588  000930                     l1539:
   589  000930  0E00               	movlw	0
   590  000932  6E1B               	movwf	_tecladoMatricial$496+1,c
   591  000934  0E0F               	movlw	15
   592  000936  6E1A               	movwf	_tecladoMatricial$496,c
   593  000938                     l1541:
   594  000938  C01A  F018         	movff	_tecladoMatricial$496,_tecladoMatricial$495
   595  00093C  C01B  F019         	movff	_tecladoMatricial$496+1,_tecladoMatricial$495+1
   596  000940  D004               	goto	l1545
   597  000942                     l1543:
   598  000942  0E00               	movlw	0
   599  000944  6E19               	movwf	_tecladoMatricial$495+1,c
   600  000946  0E0B               	movlw	11
   601  000948  6E18               	movwf	_tecladoMatricial$495,c
   602  00094A                     l1545:
   603  00094A  C018  F016         	movff	_tecladoMatricial$495,_tecladoMatricial$494
   604  00094E  C019  F017         	movff	_tecladoMatricial$495+1,_tecladoMatricial$494+1
   605  000952  D004               	goto	l1549
   606  000954                     l1547:
   607  000954  0E00               	movlw	0
   608  000956  6E17               	movwf	_tecladoMatricial$494+1,c
   609  000958  0E07               	movlw	7
   610  00095A  6E16               	movwf	_tecladoMatricial$494,c
   611  00095C                     l1549:
   612  00095C  C016  F01C         	movff	_tecladoMatricial$494,tecladoMatricial@tecla
   613  000960  C017  F01D         	movff	_tecladoMatricial$494+1,tecladoMatricial@tecla+1
   614  000964  D004               	goto	l1553
   615  000966                     l1551:
   616  000966  0E00               	movlw	0
   617  000968  6E1D               	movwf	tecladoMatricial@tecla+1,c
   618  00096A  0E03               	movlw	3
   619  00096C                     L1:
   620  00096C  6E1C               	movwf	tecladoMatricial@tecla,c
   621  00096E                     l1553:
   622                           
   623                           ;main.c: 152:     return tecla;
   624  00096E  C01C  F002         	movff	tecladoMatricial@tecla,?_tecladoMatricial
   625  000972  C01D  F003         	movff	tecladoMatricial@tecla+1,?_tecladoMatricial+1
   626  000976  0012               	return		;funcret
   627  000978                     __end_of_tecladoMatricial:
   628                           	opt callstack 0
   629                           
   630 ;; *************** function _putsXLCD *****************
   631 ;; Defined at:
   632 ;;		line 510 in file "nxlcd.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  buffer          2    2[COMRAM] PTR unsigned char 
   635 ;;		 -> STR_2(2), STR_1(10), 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   647 ;;      Params:         2       0       0       0       0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0
   650 ;;      Totals:         2       0       0       0       0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    4
   654 ;; This function calls:
   655 ;;		_BusyXLCD
   656 ;;		_WriteDataXLCD
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text2
   663  000C46                     __ptext2:
   664                           	opt callstack 0
   665  000C46                     _putsXLCD:
   666                           	opt callstack 26
   667                           
   668                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
   669                           
   670                           ;incstack = 0
   671  000C46  D00F               	goto	l1565
   672  000C48                     l1559:
   673  000C48  EC06  F006         	call	_BusyXLCD	;wreg free
   674  000C4C  0900               	iorlw	0
   675  000C4E  A4D8               	btfss	status,2,c
   676  000C50  D7FB               	goto	l1559
   677                           
   678                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
   679  000C52  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
   680  000C56  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   681  000C5A                     	if	0	;tblptru may be non-zero
   682  000C5A                     	endif
   683  000C5A                     	if	0	;tblptru may be non-zero
   684  000C5A                     	endif
   685  000C5A  0008               	tblrd		*
   686  000C5C  50F5               	movf	tablat,w,c
   687  000C5E  ECA9  F005         	call	_WriteDataXLCD
   688                           
   689                           ;nxlcd.c: 516:                 buffer++;
   690  000C62  4A03               	infsnz	putsXLCD@buffer,f,c
   691  000C64  2A04               	incf	putsXLCD@buffer+1,f,c
   692  000C66                     l1565:
   693                           
   694                           ;nxlcd.c: 512:         while(*buffer)
   695  000C66  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
   696  000C6A  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   697  000C6E                     	if	0	;tblptru may be non-zero
   698  000C6E                     	endif
   699  000C6E                     	if	0	;tblptru may be non-zero
   700  000C6E                     	endif
   701  000C6E  0008               	tblrd		*
   702  000C70  50F5               	movf	tablat,w,c
   703  000C72  0900               	iorlw	0
   704  000C74  B4D8               	btfsc	status,2,c
   705  000C76  0012               	return	
   706  000C78  D7E7               	goto	l1559
   707  000C7A                     __end_of_putsXLCD:
   708                           	opt callstack 0
   709                           
   710 ;; *************** function _lcd *****************
   711 ;; Defined at:
   712 ;;		line 85 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  tecla           2    2[COMRAM] int 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  teclado        16    5[COMRAM] unsigned char [16]
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         2       0       0       0       0       0       0       0       0
   727 ;;      Locals:        16       0       0       0       0       0       0       0       0
   728 ;;      Temps:          1       0       0       0       0       0       0       0       0
   729 ;;      Totals:        19       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:       19 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    4
   733 ;; This function calls:
   734 ;;		_BusyXLCD
   735 ;;		_WriteCmdXLCD
   736 ;;		_WriteDataXLCD
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  000A20                     __ptext3:
   744                           	opt callstack 0
   745  000A20                     _lcd:
   746                           	opt callstack 26
   747                           
   748                           ;main.c: 86:     char teclado[16] = {
   749                           
   750                           ;incstack = 0
   751  000A20  EE20  F020         	lfsr	2,lcd@F3183
   752  000A24  EE10  F006         	lfsr	1,lcd@teclado
   753  000A28  0E0F               	movlw	15
   754  000A2A                     u471:
   755  000A2A  CFDB FFE3          	movff	plusw2,plusw1
   756  000A2E  06E8               	decf	wreg,f,c
   757  000A30  E2FC               	bc	u471
   758                           
   759                           ;main.c: 93:     if(tecla != -1){
   760  000A32  2803               	incf	lcd@tecla,w,c
   761  000A34  E103               	bnz	u480
   762  000A36  2804               	incf	lcd@tecla+1,w,c
   763  000A38  B4D8               	btfsc	status,2,c
   764  000A3A  D032               	goto	l1451
   765  000A3C                     u480:
   766                           
   767                           ;main.c: 94:         if(teclado[tecla] == '*'){
   768  000A3C  0E06               	movlw	low lcd@teclado
   769  000A3E  2403               	addwf	lcd@tecla,w,c
   770  000A40  6ED9               	movwf	fsr2l,c
   771  000A42  0E00               	movlw	high lcd@teclado
   772  000A44  2004               	addwfc	lcd@tecla+1,w,c
   773  000A46  6EDA               	movwf	fsr2h,c
   774  000A48  0E2A               	movlw	42
   775  000A4A  18DE               	xorwf	postinc2,w,c
   776  000A4C  A4D8               	btfss	status,2,c
   777  000A4E  D007               	goto	l1437
   778                           
   779                           ;main.c: 95:             cursor--;
   780  000A50  0630               	decf	_cursor,f,c
   781  000A52  A0D8               	btfss	status,0,c
   782  000A54  0631               	decf	_cursor+1,f,c
   783                           
   784                           ;main.c: 96:             WriteCmdXLCD(cursor);
   785  000A56  5030               	movf	_cursor,w,c
   786  000A58  ECC8  F005         	call	_WriteCmdXLCD
   787                           
   788                           ;main.c: 97:         }else if(teclado[tecla] == '#'){
   789  000A5C  D01E               	goto	l1449
   790  000A5E                     l1437:
   791  000A5E  0E06               	movlw	low lcd@teclado
   792  000A60  2403               	addwf	lcd@tecla,w,c
   793  000A62  6ED9               	movwf	fsr2l,c
   794  000A64  0E00               	movlw	high lcd@teclado
   795  000A66  2004               	addwfc	lcd@tecla+1,w,c
   796  000A68  6EDA               	movwf	fsr2h,c
   797  000A6A  0E23               	movlw	35
   798  000A6C  18DE               	xorwf	postinc2,w,c
   799  000A6E  A4D8               	btfss	status,2,c
   800  000A70  D006               	goto	l1443
   801                           
   802                           ;main.c: 98:             cursor++;
   803  000A72  4A30               	infsnz	_cursor,f,c
   804  000A74  2A31               	incf	_cursor+1,f,c
   805                           
   806                           ;main.c: 99:             WriteCmdXLCD(cursor);
   807  000A76  5030               	movf	_cursor,w,c
   808  000A78  ECC8  F005         	call	_WriteCmdXLCD
   809                           
   810                           ;main.c: 100:         }else{
   811  000A7C  D00E               	goto	l1449
   812  000A7E                     l1443:
   813                           
   814                           ;main.c: 101:             WriteCmdXLCD(cursor);
   815  000A7E  5030               	movf	_cursor,w,c
   816  000A80  ECC8  F005         	call	_WriteCmdXLCD
   817                           
   818                           ;main.c: 102:             WriteDataXLCD(teclado[tecla]);
   819  000A84  0E06               	movlw	low lcd@teclado
   820  000A86  2403               	addwf	lcd@tecla,w,c
   821  000A88  6ED9               	movwf	fsr2l,c
   822  000A8A  0E00               	movlw	high lcd@teclado
   823  000A8C  2004               	addwfc	lcd@tecla+1,w,c
   824  000A8E  6EDA               	movwf	fsr2h,c
   825  000A90  50DF               	movf	indf2,w,c
   826  000A92  ECA9  F005         	call	_WriteDataXLCD
   827                           
   828                           ;main.c: 103:             cursor++;
   829  000A96  4A30               	infsnz	_cursor,f,c
   830  000A98  2A31               	incf	_cursor+1,f,c
   831  000A9A                     l1449:
   832                           
   833                           ;main.c: 105:         WriteCmdXLCD(cursor);
   834  000A9A  5030               	movf	_cursor,w,c
   835  000A9C  ECC8  F005         	call	_WriteCmdXLCD
   836  000AA0                     l1451:
   837                           
   838                           ;main.c: 107:     if(!BusyXLCD()){
   839  000AA0  EC06  F006         	call	_BusyXLCD	;wreg free
   840  000AA4  0900               	iorlw	0
   841  000AA6  A4D8               	btfss	status,2,c
   842  000AA8  0012               	return	
   843                           
   844                           ;main.c: 108:         _delay((unsigned long)((8)*(20000000/4000.0)));
   845  000AAA  0E34               	movlw	52
   846  000AAC  6E05               	movwf	??_lcd& (0+255),c
   847  000AAE  0EF2               	movlw	242
   848  000AB0                     u747:
   849  000AB0  2EE8               	decfsz	wreg,f,c
   850  000AB2  D7FE               	bra	u747
   851  000AB4  2E05               	decfsz	??_lcd& (0+255),f,c
   852  000AB6  D7FC               	bra	u747
   853  000AB8  0012               	return		;funcret
   854  000ABA                     __end_of_lcd:
   855                           	opt callstack 0
   856                           
   857 ;; *************** function _WriteDataXLCD *****************
   858 ;; Defined at:
   859 ;;		line 449 in file "nxlcd.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  data            1    wreg     unsigned char 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  data            1    1[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   873 ;;      Params:         0       0       0       0       0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0
   876 ;;      Totals:         1       0       0       0       0       0       0       0       0
   877 ;;Total ram usage:        1 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    3
   880 ;; This function calls:
   881 ;;		_DelayFor18TCY
   882 ;; This function is called by:
   883 ;;		_lcd
   884 ;;		_putsXLCD
   885 ;;		_putrsXLCD
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text4
   890  000B52                     __ptext4:
   891                           	opt callstack 0
   892  000B52                     _WriteDataXLCD:
   893                           	opt callstack 26
   894                           
   895                           ;incstack = 0
   896                           ;WriteDataXLCD@data stored from wreg
   897  000B52  6E02               	movwf	WriteDataXLCD@data,c
   898                           
   899                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
   900  000B54  0E0F               	movlw	15
   901  000B56  1695               	andwf	3989,f,c	;volatile
   902                           
   903                           ;nxlcd.c: 465:         PORTD &= 0x0f;
   904  000B58  0E0F               	movlw	15
   905  000B5A  1683               	andwf	3971,f,c	;volatile
   906                           
   907                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
   908  000B5C  5002               	movf	WriteDataXLCD@data,w,c
   909  000B5E  0BF0               	andlw	240
   910  000B60  1283               	iorwf	3971,f,c	;volatile
   911                           
   912                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
   913  000B62  808D               	bsf	3981,0,c	;volatile
   914                           
   915                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
   916  000B64  948D               	bcf	3981,2,c	;volatile
   917                           
   918                           ;nxlcd.c: 474:         DelayFor18TCY();
   919  000B66  ECAF  F006         	call	_DelayFor18TCY	;wreg free
   920                           
   921                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
   922  000B6A  828D               	bsf	3981,1,c	;volatile
   923                           
   924                           ;nxlcd.c: 476:         DelayFor18TCY();
   925  000B6C  ECAF  F006         	call	_DelayFor18TCY	;wreg free
   926                           
   927                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
   928  000B70  928D               	bcf	3981,1,c	;volatile
   929                           
   930                           ;nxlcd.c: 479:         PORTD &= 0x0f;
   931  000B72  0E0F               	movlw	15
   932  000B74  1683               	andwf	3971,f,c	;volatile
   933                           
   934                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
   935  000B76  3802               	swapf	WriteDataXLCD@data,w,c
   936  000B78  0BF0               	andlw	240
   937  000B7A  0BF0               	andlw	240
   938  000B7C  1283               	iorwf	3971,f,c	;volatile
   939                           
   940                           ;nxlcd.c: 485:         DelayFor18TCY();
   941  000B7E  ECAF  F006         	call	_DelayFor18TCY	;wreg free
   942                           
   943                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
   944  000B82  828D               	bsf	3981,1,c	;volatile
   945                           
   946                           ;nxlcd.c: 487:         DelayFor18TCY();
   947  000B84  ECAF  F006         	call	_DelayFor18TCY	;wreg free
   948                           
   949                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
   950  000B88  928D               	bcf	3981,1,c	;volatile
   951                           
   952                           ;nxlcd.c: 490:         TRISD |= 0xf0;
   953  000B8A  0EF0               	movlw	240
   954  000B8C  1295               	iorwf	3989,f,c	;volatile
   955  000B8E  0012               	return		;funcret
   956  000B90                     __end_of_WriteDataXLCD:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _config_timer0 *****************
   960 ;; Defined at:
   961 ;;		line 213 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    2
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text5
   990  000D10                     __ptext5:
   991                           	opt callstack 0
   992  000D10                     _config_timer0:
   993                           	opt callstack 28
   994                           
   995                           ;main.c: 214:     T0CONbits.TMR0ON = 1;
   996                           
   997                           ;incstack = 0
   998  000D10  8ED5               	bsf	4053,7,c	;volatile
   999                           
  1000                           ;main.c: 215:     T0CONbits.T08BIT = 1;
  1001  000D12  8CD5               	bsf	4053,6,c	;volatile
  1002                           
  1003                           ;main.c: 216:     T0CONbits.T0CS = 0;
  1004  000D14  9AD5               	bcf	4053,5,c	;volatile
  1005                           
  1006                           ;main.c: 218:     T0CONbits.PSA = 1;
  1007  000D16  86D5               	bsf	4053,3,c	;volatile
  1008                           
  1009                           ;main.c: 219:     T0CONbits.T0PS2 = 1;
  1010  000D18  84D5               	bsf	4053,2,c	;volatile
  1011                           
  1012                           ;main.c: 220:     T0CONbits.T0PS1 = 0;
  1013  000D1A  92D5               	bcf	4053,1,c	;volatile
  1014                           
  1015                           ;main.c: 221:     T0CONbits.T0PS0 = 0;
  1016  000D1C  90D5               	bcf	4053,0,c	;volatile
  1017                           
  1018                           ;main.c: 222:     INTCONbits.TMR0IE = 1;
  1019  000D1E  8AF2               	bsf	4082,5,c	;volatile
  1020                           
  1021                           ;main.c: 223:     TMR0 = 100;
  1022  000D20  0E00               	movlw	0
  1023  000D22  6ED7               	movwf	4055,c	;volatile
  1024  000D24  0E64               	movlw	100
  1025  000D26  6ED6               	movwf	4054,c	;volatile
  1026  000D28  0012               	return		;funcret
  1027  000D2A                     __end_of_config_timer0:
  1028                           	opt callstack 0
  1029                           
  1030 ;; *************** function _config_teclado *****************
  1031 ;; Defined at:
  1032 ;;		line 155 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1049 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    2
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text6
  1061  000CD4                     __ptext6:
  1062                           	opt callstack 0
  1063  000CD4                     _config_teclado:
  1064                           	opt callstack 28
  1065                           
  1066                           ;main.c: 156:     RBPU = 0;
  1067                           
  1068                           ;incstack = 0
  1069  000CD4  9EF1               	bcf	4081,7,c	;volatile
  1070                           
  1071                           ;main.c: 158:     ADCON1 = 0x0F;
  1072  000CD6  0E0F               	movlw	15
  1073  000CD8  6EC1               	movwf	4033,c	;volatile
  1074                           
  1075                           ;main.c: 160:     TRISBbits.TRISB0 = 0;
  1076  000CDA  9093               	bcf	3987,0,c	;volatile
  1077                           
  1078                           ;main.c: 161:     TRISBbits.TRISB1 = 0;
  1079  000CDC  9293               	bcf	3987,1,c	;volatile
  1080                           
  1081                           ;main.c: 162:     TRISBbits.TRISB2 = 0;
  1082  000CDE  9493               	bcf	3987,2,c	;volatile
  1083                           
  1084                           ;main.c: 163:     TRISBbits.TRISB3 = 0;
  1085  000CE0  9693               	bcf	3987,3,c	;volatile
  1086                           
  1087                           ;main.c: 164:     TRISBbits.TRISB4 = 1;
  1088  000CE2  8893               	bsf	3987,4,c	;volatile
  1089                           
  1090                           ;main.c: 165:     TRISBbits.TRISB5 = 1;
  1091  000CE4  8A93               	bsf	3987,5,c	;volatile
  1092                           
  1093                           ;main.c: 166:     TRISBbits.TRISB6 = 1;
  1094  000CE6  8C93               	bsf	3987,6,c	;volatile
  1095                           
  1096                           ;main.c: 167:     TRISBbits.TRISB7 = 1;
  1097  000CE8  8E93               	bsf	3987,7,c	;volatile
  1098                           
  1099                           ;main.c: 169:     PORTBbits.RB0 = 1;
  1100  000CEA  8081               	bsf	3969,0,c	;volatile
  1101                           
  1102                           ;main.c: 170:     PORTBbits.RB1 = 1;
  1103  000CEC  8281               	bsf	3969,1,c	;volatile
  1104                           
  1105                           ;main.c: 171:     PORTBbits.RB2 = 1;
  1106  000CEE  8481               	bsf	3969,2,c	;volatile
  1107                           
  1108                           ;main.c: 172:     PORTBbits.RB3 = 0;
  1109  000CF0  9681               	bcf	3969,3,c	;volatile
  1110  000CF2  0012               	return		;funcret
  1111  000CF4                     __end_of_config_teclado:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _config_led *****************
  1115 ;; Defined at:
  1116 ;;		line 182 in file "main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		None
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    2
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text7
  1145  000D70                     __ptext7:
  1146                           	opt callstack 0
  1147  000D70                     _config_led:
  1148                           	opt callstack 28
  1149                           
  1150                           ;main.c: 183:     TRISDbits.TRISD0 = 0;
  1151                           
  1152                           ;incstack = 0
  1153  000D70  9095               	bcf	3989,0,c	;volatile
  1154                           
  1155                           ;main.c: 184:     PORTDbits.RD0 = 1;
  1156  000D72  8083               	bsf	3971,0,c	;volatile
  1157  000D74  0012               	return		;funcret
  1158  000D76                     __end_of_config_led:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _config_ldc *****************
  1162 ;; Defined at:
  1163 ;;		line 175 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        1 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    5
  1184 ;; This function calls:
  1185 ;;		_OpenXLCD
  1186 ;;		_WriteCmdXLCD
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text8
  1193  000CF4                     __ptext8:
  1194                           	opt callstack 0
  1195  000CF4                     _config_ldc:
  1196                           	opt callstack 25
  1197                           
  1198                           ;main.c: 177:     OpenXLCD(0b00101100 & 0b00111000);
  1199                           
  1200                           ;incstack = 0
  1201  000CF4  0E28               	movlw	40
  1202  000CF6  ECBC  F004         	call	_OpenXLCD
  1203                           
  1204                           ;main.c: 178:     WriteCmdXLCD(0x01);
  1205  000CFA  0E01               	movlw	1
  1206  000CFC  ECC8  F005         	call	_WriteCmdXLCD
  1207                           
  1208                           ;main.c: 179:     _delay((unsigned long)((8)*(20000000/4000.0)));
  1209  000D00  0E34               	movlw	52
  1210  000D02  6E04               	movwf	??_config_ldc& (0+255),c
  1211  000D04  0EF2               	movlw	242
  1212  000D06                     u757:
  1213  000D06  2EE8               	decfsz	wreg,f,c
  1214  000D08  D7FE               	bra	u757
  1215  000D0A  2E04               	decfsz	??_config_ldc& (0+255),f,c
  1216  000D0C  D7FC               	bra	u757
  1217  000D0E  0012               	return		;funcret
  1218  000D10                     __end_of_config_ldc:
  1219                           	opt callstack 0
  1220                           
  1221 ;; *************** function _OpenXLCD *****************
  1222 ;; Defined at:
  1223 ;;		line 41 in file "nxlcd.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  lcdtype         1    wreg     unsigned char 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  lcdtype         1    2[COMRAM] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        1 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    4
  1244 ;; This function calls:
  1245 ;;		_BusyXLCD
  1246 ;;		_DelayPORXLCD
  1247 ;;		_DelayXLCD
  1248 ;;		_SetDDRamAddr
  1249 ;;		_WriteCmdXLCD
  1250 ;; This function is called by:
  1251 ;;		_config_ldc
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text9
  1256  000978                     __ptext9:
  1257                           	opt callstack 0
  1258  000978                     _OpenXLCD:
  1259                           	opt callstack 25
  1260                           
  1261                           ;incstack = 0
  1262                           ;OpenXLCD@lcdtype stored from wreg
  1263  000978  6E03               	movwf	OpenXLCD@lcdtype,c
  1264                           
  1265                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1266  00097A  0E0F               	movlw	15
  1267  00097C  1683               	andwf	3971,f,c	;volatile
  1268                           
  1269                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1270  00097E  0E0F               	movlw	15
  1271  000980  1695               	andwf	3989,f,c	;volatile
  1272                           
  1273                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1274  000982  9496               	bcf	3990,2,c	;volatile
  1275                           
  1276                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1277  000984  9096               	bcf	3990,0,c	;volatile
  1278                           
  1279                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  1280  000986  9296               	bcf	3990,1,c	;volatile
  1281                           
  1282                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  1283  000988  948D               	bcf	3981,2,c	;volatile
  1284                           
  1285                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  1286  00098A  908D               	bcf	3981,0,c	;volatile
  1287                           
  1288                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  1289  00098C  928D               	bcf	3981,1,c	;volatile
  1290                           
  1291                           ;nxlcd.c: 65:         DelayPORXLCD();
  1292  00098E  ECA7  F006         	call	_DelayPORXLCD	;wreg free
  1293                           
  1294                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  1295  000992  0E30               	movlw	48
  1296  000994  ECC8  F005         	call	_WriteCmdXLCD
  1297                           
  1298                           ;nxlcd.c: 68:    DelayXLCD();
  1299  000998  EC9E  F006         	call	_DelayXLCD	;wreg free
  1300                           
  1301                           ;nxlcd.c: 69:    DelayXLCD();
  1302  00099C  EC9E  F006         	call	_DelayXLCD	;wreg free
  1303                           
  1304                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  1305  0009A0  0E30               	movlw	48
  1306  0009A2  ECC8  F005         	call	_WriteCmdXLCD
  1307                           
  1308                           ;nxlcd.c: 71:    DelayXLCD();
  1309  0009A6  EC9E  F006         	call	_DelayXLCD	;wreg free
  1310                           
  1311                           ;nxlcd.c: 72:    DelayXLCD();
  1312  0009AA  EC9E  F006         	call	_DelayXLCD	;wreg free
  1313                           
  1314                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  1315  0009AE  0E32               	movlw	50
  1316  0009B0  ECC8  F005         	call	_WriteCmdXLCD
  1317  0009B4                     l1085:
  1318  0009B4  EC06  F006         	call	_BusyXLCD	;wreg free
  1319  0009B8  0900               	iorlw	0
  1320  0009BA  A4D8               	btfss	status,2,c
  1321  0009BC  D7FB               	goto	l1085
  1322  0009BE                     u20:
  1323  0009BE  EC06  F006         	call	_BusyXLCD	;wreg free
  1324  0009C2  0900               	iorlw	0
  1325  0009C4  A4D8               	btfss	status,2,c
  1326  0009C6  D7FB               	goto	u20
  1327                           
  1328                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  1329  0009C8  5003               	movf	OpenXLCD@lcdtype,w,c
  1330  0009CA  ECC8  F005         	call	_WriteCmdXLCD
  1331  0009CE                     l1091:
  1332  0009CE  EC06  F006         	call	_BusyXLCD	;wreg free
  1333  0009D2  0900               	iorlw	0
  1334  0009D4  A4D8               	btfss	status,2,c
  1335  0009D6  D7FB               	goto	l1091
  1336                           
  1337                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1338  0009D8  0E08               	movlw	8
  1339  0009DA  ECC8  F005         	call	_WriteCmdXLCD
  1340  0009DE                     l1095:
  1341  0009DE  EC06  F006         	call	_BusyXLCD	;wreg free
  1342  0009E2  0900               	iorlw	0
  1343  0009E4  A4D8               	btfss	status,2,c
  1344  0009E6  D7FB               	goto	l1095
  1345                           
  1346                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1347  0009E8  0E0F               	movlw	15
  1348  0009EA  ECC8  F005         	call	_WriteCmdXLCD
  1349  0009EE                     l1099:
  1350  0009EE  EC06  F006         	call	_BusyXLCD	;wreg free
  1351  0009F2  0900               	iorlw	0
  1352  0009F4  A4D8               	btfss	status,2,c
  1353  0009F6  D7FB               	goto	l1099
  1354                           
  1355                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  1356  0009F8  0E01               	movlw	1
  1357  0009FA  ECC8  F005         	call	_WriteCmdXLCD
  1358  0009FE                     l1103:
  1359  0009FE  EC06  F006         	call	_BusyXLCD	;wreg free
  1360  000A02  0900               	iorlw	0
  1361  000A04  A4D8               	btfss	status,2,c
  1362  000A06  D7FB               	goto	l1103
  1363                           
  1364                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  1365  000A08  0E04               	movlw	4
  1366  000A0A  ECC8  F005         	call	_WriteCmdXLCD
  1367  000A0E                     l1107:
  1368  000A0E  EC06  F006         	call	_BusyXLCD	;wreg free
  1369  000A12  0900               	iorlw	0
  1370  000A14  A4D8               	btfss	status,2,c
  1371  000A16  D7FB               	goto	l1107
  1372                           
  1373                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  1374  000A18  0E80               	movlw	128
  1375  000A1A  EC89  F005         	call	_SetDDRamAddr
  1376  000A1E  0012               	return		;funcret
  1377  000A20                     __end_of_OpenXLCD:
  1378                           	opt callstack 0
  1379                           
  1380 ;; *************** function _WriteCmdXLCD *****************
  1381 ;; Defined at:
  1382 ;;		line 388 in file "nxlcd.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  cmd             1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  cmd             1    1[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    3
  1403 ;; This function calls:
  1404 ;;		_DelayFor18TCY
  1405 ;; This function is called by:
  1406 ;;		_lcd
  1407 ;;		_config_ldc
  1408 ;;		_main
  1409 ;;		_OpenXLCD
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text10
  1414  000B90                     __ptext10:
  1415                           	opt callstack 0
  1416  000B90                     _WriteCmdXLCD:
  1417                           	opt callstack 26
  1418                           
  1419                           ;incstack = 0
  1420                           ;WriteCmdXLCD@cmd stored from wreg
  1421  000B90  6E02               	movwf	WriteCmdXLCD@cmd,c
  1422                           
  1423                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  1424  000B92  0E0F               	movlw	15
  1425  000B94  1695               	andwf	3989,f,c	;volatile
  1426                           
  1427                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  1428  000B96  0E0F               	movlw	15
  1429  000B98  1683               	andwf	3971,f,c	;volatile
  1430                           
  1431                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  1432  000B9A  5002               	movf	WriteCmdXLCD@cmd,w,c
  1433  000B9C  0BF0               	andlw	240
  1434  000B9E  1283               	iorwf	3971,f,c	;volatile
  1435                           
  1436                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  1437  000BA0  948D               	bcf	3981,2,c	;volatile
  1438                           
  1439                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  1440  000BA2  908D               	bcf	3981,0,c	;volatile
  1441                           
  1442                           ;nxlcd.c: 413:         DelayFor18TCY();
  1443  000BA4  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1444                           
  1445                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  1446  000BA8  828D               	bsf	3981,1,c	;volatile
  1447                           
  1448                           ;nxlcd.c: 415:         DelayFor18TCY();
  1449  000BAA  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1450                           
  1451                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  1452  000BAE  928D               	bcf	3981,1,c	;volatile
  1453                           
  1454                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  1455  000BB0  0E0F               	movlw	15
  1456  000BB2  1683               	andwf	3971,f,c	;volatile
  1457                           
  1458                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  1459  000BB4  3802               	swapf	WriteCmdXLCD@cmd,w,c
  1460  000BB6  0BF0               	andlw	240
  1461  000BB8  0BF0               	andlw	240
  1462  000BBA  1283               	iorwf	3971,f,c	;volatile
  1463                           
  1464                           ;nxlcd.c: 424:         DelayFor18TCY();
  1465  000BBC  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1466                           
  1467                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  1468  000BC0  828D               	bsf	3981,1,c	;volatile
  1469                           
  1470                           ;nxlcd.c: 426:         DelayFor18TCY();
  1471  000BC2  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1472                           
  1473                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  1474  000BC6  928D               	bcf	3981,1,c	;volatile
  1475                           
  1476                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  1477  000BC8  0EF0               	movlw	240
  1478  000BCA  1295               	iorwf	3989,f,c	;volatile
  1479  000BCC  0012               	return		;funcret
  1480  000BCE                     __end_of_WriteCmdXLCD:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _SetDDRamAddr *****************
  1484 ;; Defined at:
  1485 ;;		line 171 in file "nxlcd.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  DDaddr          1    wreg     unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  DDaddr          1    1[COMRAM] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0
  1500 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1502 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1503 ;;Total ram usage:        1 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    3
  1506 ;; This function calls:
  1507 ;;		_DelayFor18TCY
  1508 ;; This function is called by:
  1509 ;;		_OpenXLCD
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text11
  1514  000B12                     __ptext11:
  1515                           	opt callstack 0
  1516  000B12                     _SetDDRamAddr:
  1517                           	opt callstack 25
  1518                           
  1519                           ;incstack = 0
  1520                           ;SetDDRamAddr@DDaddr stored from wreg
  1521  000B12  6E02               	movwf	SetDDRamAddr@DDaddr,c
  1522                           
  1523                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  1524  000B14  0E0F               	movlw	15
  1525  000B16  1695               	andwf	3989,f,c	;volatile
  1526                           
  1527                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  1528  000B18  0E0F               	movlw	15
  1529  000B1A  1683               	andwf	3971,f,c	;volatile
  1530                           
  1531                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  1532  000B1C  5002               	movf	SetDDRamAddr@DDaddr,w,c
  1533  000B1E  0980               	iorlw	128
  1534  000B20  0BF0               	andlw	240
  1535  000B22  1283               	iorwf	3971,f,c	;volatile
  1536                           
  1537                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  1538  000B24  948D               	bcf	3981,2,c	;volatile
  1539                           
  1540                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  1541  000B26  908D               	bcf	3981,0,c	;volatile
  1542                           
  1543                           ;nxlcd.c: 196:         DelayFor18TCY();
  1544  000B28  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1545                           
  1546                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  1547  000B2C  828D               	bsf	3981,1,c	;volatile
  1548                           
  1549                           ;nxlcd.c: 198:         DelayFor18TCY();
  1550  000B2E  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1551                           
  1552                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  1553  000B32  928D               	bcf	3981,1,c	;volatile
  1554                           
  1555                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  1556  000B34  0E0F               	movlw	15
  1557  000B36  1683               	andwf	3971,f,c	;volatile
  1558                           
  1559                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  1560  000B38  3802               	swapf	SetDDRamAddr@DDaddr,w,c
  1561  000B3A  0BF0               	andlw	240
  1562  000B3C  0BF0               	andlw	240
  1563  000B3E  1283               	iorwf	3971,f,c	;volatile
  1564                           
  1565                           ;nxlcd.c: 207:         DelayFor18TCY();
  1566  000B40  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1567                           
  1568                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  1569  000B44  828D               	bsf	3981,1,c	;volatile
  1570                           
  1571                           ;nxlcd.c: 209:         DelayFor18TCY();
  1572  000B46  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1573                           
  1574                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  1575  000B4A  928D               	bcf	3981,1,c	;volatile
  1576                           
  1577                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  1578  000B4C  0EF0               	movlw	240
  1579  000B4E  1295               	iorwf	3989,f,c	;volatile
  1580  000B50  0012               	return		;funcret
  1581  000B52                     __end_of_SetDDRamAddr:
  1582                           	opt callstack 0
  1583                           
  1584 ;; *************** function _DelayXLCD *****************
  1585 ;; Defined at:
  1586 ;;		line 22 in file "nxlcd.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1602 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:        1 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    2
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_OpenXLCD
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text12
  1615  000D3C                     __ptext12:
  1616                           	opt callstack 0
  1617  000D3C                     _DelayXLCD:
  1618                           	opt callstack 26
  1619                           
  1620                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1621                           
  1622                           ;incstack = 0
  1623  000D3C  0E21               	movlw	33
  1624  000D3E  6E02               	movwf	??_DelayXLCD& (0+255),c
  1625  000D40  0E76               	movlw	118
  1626  000D42                     u767:
  1627  000D42  2EE8               	decfsz	wreg,f,c
  1628  000D44  D7FE               	bra	u767
  1629  000D46  2E02               	decfsz	??_DelayXLCD& (0+255),f,c
  1630  000D48  D7FC               	bra	u767
  1631  000D4A  D000               	nop2	
  1632  000D4C  0012               	return		;funcret
  1633  000D4E                     __end_of_DelayXLCD:
  1634                           	opt callstack 0
  1635                           
  1636 ;; *************** function _DelayPORXLCD *****************
  1637 ;; Defined at:
  1638 ;;		line 17 in file "nxlcd.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        1 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    2
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_OpenXLCD
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text13
  1667  000D4E                     __ptext13:
  1668                           	opt callstack 0
  1669  000D4E                     _DelayPORXLCD:
  1670                           	opt callstack 26
  1671                           
  1672                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  1673                           
  1674                           ;incstack = 0
  1675  000D4E  0E62               	movlw	98
  1676  000D50  6E02               	movwf	??_DelayPORXLCD& (0+255),c
  1677  000D52  0E66               	movlw	102
  1678  000D54                     u777:
  1679  000D54  2EE8               	decfsz	wreg,f,c
  1680  000D56  D7FE               	bra	u777
  1681  000D58  2E02               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1682  000D5A  D7FC               	bra	u777
  1683  000D5C  0012               	return		;funcret
  1684  000D5E                     __end_of_DelayPORXLCD:
  1685                           	opt callstack 0
  1686                           
  1687 ;; *************** function _BusyXLCD *****************
  1688 ;; Defined at:
  1689 ;;		line 227 in file "nxlcd.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		_DelayFor18TCY
  1712 ;; This function is called by:
  1713 ;;		_lcd
  1714 ;;		_OpenXLCD
  1715 ;;		_putsXLCD
  1716 ;;		_putrsXLCD
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text14
  1721  000C0C                     __ptext14:
  1722                           	opt callstack 0
  1723  000C0C                     _BusyXLCD:
  1724                           	opt callstack 26
  1725                           
  1726                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  1727                           
  1728                           ;incstack = 0
  1729  000C0C  848D               	bsf	3981,2,c	;volatile
  1730                           
  1731                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  1732  000C0E  908D               	bcf	3981,0,c	;volatile
  1733                           
  1734                           ;nxlcd.c: 231:         DelayFor18TCY();
  1735  000C10  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1736                           
  1737                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  1738  000C14  828D               	bsf	3981,1,c	;volatile
  1739                           
  1740                           ;nxlcd.c: 233:         DelayFor18TCY();
  1741  000C16  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1742                           
  1743                           ;nxlcd.c: 249:         if(PORTD&0x80)
  1744  000C1A  AE83               	btfss	3971,7,c	;volatile
  1745  000C1C  D00A               	goto	l233
  1746                           
  1747                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  1748  000C1E  928D               	bcf	3981,1,c	;volatile
  1749                           
  1750                           ;nxlcd.c: 255:                 DelayFor18TCY();
  1751  000C20  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1752                           
  1753                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  1754  000C24  828D               	bsf	3981,1,c	;volatile
  1755                           
  1756                           ;nxlcd.c: 257:                 DelayFor18TCY();
  1757  000C26  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1758                           
  1759                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  1760  000C2A  928D               	bcf	3981,1,c	;volatile
  1761                           
  1762                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  1763  000C2C  948D               	bcf	3981,2,c	;volatile
  1764                           
  1765                           ;nxlcd.c: 260:                 return 1;
  1766  000C2E  0E01               	movlw	1
  1767  000C30  0012               	return	
  1768  000C32                     l233:
  1769                           
  1770                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  1771  000C32  928D               	bcf	3981,1,c	;volatile
  1772                           
  1773                           ;nxlcd.c: 265:                 DelayFor18TCY();
  1774  000C34  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1775                           
  1776                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  1777  000C38  828D               	bsf	3981,1,c	;volatile
  1778                           
  1779                           ;nxlcd.c: 267:                 DelayFor18TCY();
  1780  000C3A  ECAF  F006         	call	_DelayFor18TCY	;wreg free
  1781                           
  1782                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  1783  000C3E  928D               	bcf	3981,1,c	;volatile
  1784                           
  1785                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  1786  000C40  948D               	bcf	3981,2,c	;volatile
  1787                           
  1788                           ;nxlcd.c: 270:                 return 0;
  1789  000C42  0E00               	movlw	0
  1790  000C44  0012               	return		;funcret
  1791  000C46                     __end_of_BusyXLCD:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function _DelayFor18TCY *****************
  1795 ;; Defined at:
  1796 ;;		line 12 in file "nxlcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         0       0       0       0       0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_SetDDRamAddr
  1821 ;;		_BusyXLCD
  1822 ;;		_WriteCmdXLCD
  1823 ;;		_WriteDataXLCD
  1824 ;;		_SetCGRamAddr
  1825 ;;		_ReadAddrXLCD
  1826 ;;		_ReadDataXLCD
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text15
  1831  000D5E                     __ptext15:
  1832                           	opt callstack 0
  1833  000D5E                     _DelayFor18TCY:
  1834                           	opt callstack 26
  1835                           
  1836                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  1837                           
  1838                           ;incstack = 0
  1839  000D5E  0E21               	movlw	33
  1840  000D60                     u787:
  1841  000D60  2EE8               	decfsz	wreg,f,c
  1842  000D62  D7FE               	bra	u787
  1843  000D64  F000               	nop	
  1844  000D66  0012               	return		;funcret
  1845  000D68                     __end_of_DelayFor18TCY:
  1846                           	opt callstack 0
  1847                           
  1848 ;; *************** function _config_interrupcao *****************
  1849 ;; Defined at:
  1850 ;;		line 246 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		None
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text16
  1879  000D68                     __ptext16:
  1880                           	opt callstack 0
  1881  000D68                     _config_interrupcao:
  1882                           	opt callstack 28
  1883                           
  1884                           ;main.c: 247:     RCONbits.IPEN = 1;
  1885                           
  1886                           ;incstack = 0
  1887  000D68  8ED0               	bsf	4048,7,c	;volatile
  1888                           
  1889                           ;main.c: 248:     INTCONbits.GIEH = 1;
  1890  000D6A  8EF2               	bsf	4082,7,c	;volatile
  1891                           
  1892                           ;main.c: 249:     INTCONbits.GIEL = 1;
  1893  000D6C  8CF2               	bsf	4082,6,c	;volatile
  1894  000D6E  0012               	return		;funcret
  1895  000D70                     __end_of_config_interrupcao:
  1896                           	opt callstack 0
  1897                           
  1898 ;; *************** function _interrupcao *****************
  1899 ;; Defined at:
  1900 ;;		line 187 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_varreduraTeclado
  1923 ;; This function is called by:
  1924 ;;		Interrupt level 2
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	intcode
  1929  000008                     __pintcode:
  1930                           	opt callstack 0
  1931  000008                     _interrupcao:
  1932                           	opt callstack 25
  1933                           
  1934                           ;incstack = 0
  1935  000008  8232               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1936  00000A  ED56  F006         	call	int_func,f	;refresh shadow registers
  1937                           
  1938                           	psect	intcode_body
  1939  000CAC                     __pintcode_body:
  1940                           	opt callstack 25
  1941  000CAC                     int_func:
  1942                           	opt callstack 25
  1943  000CAC  0006               	pop		; remove dummy address from shadow register refresh
  1944                           
  1945                           ;main.c: 188:     if (INTCON3bits.INT1IF) {
  1946  000CAE  A0F0               	btfss	4080,0,c	;volatile
  1947  000CB0  D002               	goto	i2l147
  1948                           
  1949                           ;main.c: 190:         INTCON3bits.INT1IF = 0;
  1950  000CB2  90F0               	bcf	4080,0,c	;volatile
  1951                           
  1952                           ;main.c: 191:     } else if (INTCON3bits.INT2IF) {
  1953  000CB4  D00D               	goto	i2l152
  1954  000CB6                     i2l147:
  1955  000CB6  A2F0               	btfss	4080,1,c	;volatile
  1956  000CB8  D002               	goto	i2l149
  1957                           
  1958                           ;main.c: 193:         INTCON3bits.INT2IF = 0;
  1959  000CBA  92F0               	bcf	4080,1,c	;volatile
  1960                           
  1961                           ;main.c: 194:     } else if (INTCONbits.TMR0IF) {
  1962  000CBC  D009               	goto	i2l152
  1963  000CBE                     i2l149:
  1964  000CBE  A4F2               	btfss	4082,2,c	;volatile
  1965  000CC0  D007               	goto	i2l152
  1966                           
  1967                           ;main.c: 195:         varreduraTeclado();
  1968  000CC2  ECE7  F005         	call	_varreduraTeclado	;wreg free
  1969                           
  1970                           ;main.c: 196:         TMR0 = 100;
  1971  000CC6  0E00               	movlw	0
  1972  000CC8  6ED7               	movwf	4055,c	;volatile
  1973  000CCA  0E64               	movlw	100
  1974  000CCC  6ED6               	movwf	4054,c	;volatile
  1975                           
  1976                           ;main.c: 197:         INTCONbits.TMR0IF = 0;
  1977  000CCE  94F2               	bcf	4082,2,c	;volatile
  1978  000CD0                     i2l152:
  1979  000CD0  9232               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1980  000CD2  0011               	retfie		f
  1981  000CD4                     __end_of_interrupcao:
  1982                           	opt callstack 0
  1983                           
  1984 ;; *************** function _varreduraTeclado *****************
  1985 ;; Defined at:
  1986 ;;		line 112 in file "main.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        1 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_interrupcao
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text18
  2014  000BCE                     __ptext18:
  2015                           	opt callstack 0
  2016  000BCE                     _varreduraTeclado:
  2017                           	opt callstack 25
  2018                           
  2019                           ;main.c: 113:     if(!PORTBbits.RB3){
  2020                           
  2021                           ;incstack = 0
  2022  000BCE  B681               	btfsc	3969,3,c	;volatile
  2023  000BD0  D003               	goto	i2l52
  2024                           
  2025                           ;main.c: 114:         PORTBbits.RB3 = 1;
  2026  000BD2  8681               	bsf	3969,3,c	;volatile
  2027                           
  2028                           ;main.c: 115:         PORTBbits.RB2 = 0;
  2029  000BD4  9481               	bcf	3969,2,c	;volatile
  2030                           
  2031                           ;main.c: 116:     }else if(!PORTBbits.RB2){
  2032  000BD6  D00E               	goto	i2l55
  2033  000BD8                     i2l52:
  2034  000BD8  B481               	btfsc	3969,2,c	;volatile
  2035  000BDA  D003               	goto	i2l54
  2036                           
  2037                           ;main.c: 117:         PORTBbits.RB2 = 1;
  2038  000BDC  8481               	bsf	3969,2,c	;volatile
  2039                           
  2040                           ;main.c: 118:         PORTBbits.RB1 = 0;
  2041  000BDE  9281               	bcf	3969,1,c	;volatile
  2042                           
  2043                           ;main.c: 119:     }else if(!PORTBbits.RB1){
  2044  000BE0  D009               	goto	i2l55
  2045  000BE2                     i2l54:
  2046  000BE2  B281               	btfsc	3969,1,c	;volatile
  2047  000BE4  D003               	goto	i2l56
  2048                           
  2049                           ;main.c: 120:         PORTBbits.RB1 = 1;
  2050  000BE6  8281               	bsf	3969,1,c	;volatile
  2051                           
  2052                           ;main.c: 121:         PORTBbits.RB0 = 0;
  2053  000BE8  9081               	bcf	3969,0,c	;volatile
  2054                           
  2055                           ;main.c: 122:     }else if(!PORTBbits.RB0){
  2056  000BEA  D004               	goto	i2l55
  2057  000BEC                     i2l56:
  2058  000BEC  B081               	btfsc	3969,0,c	;volatile
  2059  000BEE  D002               	goto	i2l55
  2060                           
  2061                           ;main.c: 123:         PORTBbits.RB0 = 1;
  2062  000BF0  8081               	bsf	3969,0,c	;volatile
  2063                           
  2064                           ;main.c: 124:         PORTBbits.RB3 = 0;
  2065  000BF2  9681               	bcf	3969,3,c	;volatile
  2066  000BF4                     i2l55:
  2067                           
  2068                           ;main.c: 126:     PORTDbits.RD0 = !PORTDbits.RD0;
  2069  000BF4  B083               	btfsc	3971,0,c	;volatile
  2070  000BF6  D003               	goto	i2u18_40
  2071  000BF8  6A01               	clrf	??_varreduraTeclado& (0+255),c
  2072  000BFA  2A01               	incf	??_varreduraTeclado& (0+255),f,c
  2073  000BFC  D001               	goto	i2u19_48
  2074  000BFE                     i2u18_40:
  2075  000BFE  6A01               	clrf	??_varreduraTeclado& (0+255),c
  2076  000C00                     i2u19_48:
  2077  000C00  5083               	movf	3971,w,c	;volatile
  2078  000C02  1801               	xorwf	??_varreduraTeclado,w,c
  2079  000C04  0BFE               	andlw	-2
  2080  000C06  1801               	xorwf	??_varreduraTeclado,w,c
  2081  000C08  6E83               	movwf	3971,c	;volatile
  2082  000C0A  0012               	return		;funcret
  2083  000C0C                     __end_of_varreduraTeclado:
  2084                           	opt callstack 0
  2085                           
  2086                           	psect	rparam
  2087  0000                     
  2088                           	psect	temp
  2089  000032                     btemp:
  2090                           	opt callstack 0
  2091  000032                     	ds	1
  2092  0000                     int$flags	set	btemp
  2093  0000                     wtemp8	set	btemp+1
  2094  0000                     ttemp5	set	btemp+1
  2095  0000                     ttemp6	set	btemp+4
  2096  0000                     ttemp7	set	btemp+8
  2097                           tosu	equ	0xFFF
  2098                           tosh	equ	0xFFE
  2099                           tosl	equ	0xFFD
  2100                           stkptr	equ	0xFFC
  2101                           pclatu	equ	0xFFB
  2102                           pclath	equ	0xFFA
  2103                           pcl	equ	0xFF9
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           prodh	equ	0xFF4
  2109                           prodl	equ	0xFF3
  2110                           indf0	equ	0xFEF
  2111                           postinc0	equ	0xFEE
  2112                           postdec0	equ	0xFED
  2113                           preinc0	equ	0xFEC
  2114                           plusw0	equ	0xFEB
  2115                           fsr0h	equ	0xFEA
  2116                           fsr0l	equ	0xFE9
  2117                           wreg	equ	0xFE8
  2118                           indf1	equ	0xFE7
  2119                           postinc1	equ	0xFE6
  2120                           postdec1	equ	0xFE5
  2121                           preinc1	equ	0xFE4
  2122                           plusw1	equ	0xFE3
  2123                           fsr1h	equ	0xFE2
  2124                           fsr1l	equ	0xFE1
  2125                           bsr	equ	0xFE0
  2126                           indf2	equ	0xFDF
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           preinc2	equ	0xFDC
  2130                           plusw2	equ	0xFDB
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[2]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_tecladoMatricial
    _putsXLCD->_WriteDataXLCD
    _lcd->_WriteCmdXLCD
    _lcd->_WriteDataXLCD
    _config_ldc->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_varreduraTeclado

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     997
                                             29 COMRAM     2     2      0
                       _WriteCmdXLCD
                 _config_interrupcao
                         _config_ldc
                         _config_led
                     _config_teclado
                      _config_timer0
                                _lcd
                           _putsXLCD
                   _tecladoMatricial
 ---------------------------------------------------------------------------------
 (1) _tecladoMatricial                                    28    26      2     318
                                              1 COMRAM    28    26      2
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     227
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 19    17      2     294
                                              2 COMRAM    19    17      2
                           _BusyXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_teclado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ldc                                           1     1      0     105
                                              3 COMRAM     1     1      0
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      75
                                              2 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                          0     0      0       0
                   _varreduraTeclado
 ---------------------------------------------------------------------------------
 (6) _varreduraTeclado                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
   _config_interrupcao
   _config_ldc
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _config_led
   _config_teclado
   _config_timer0
   _lcd
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _tecladoMatricial

 _interrupcao (ROOT)
   _varreduraTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      20        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 31 19:39:05 2022

                         l62 0866                           l80 08BE                           l98 0916  
                         u20 09BE                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
          ?_tecladoMatricial 0002                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
      tecladoMatricial@tecla 001C                 __CFG_CP3$OFF 000000                          l233 0C32  
                        l172 0AF8                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        u471 0A2A                          u480 0A3C                          u747 0AB0  
                        u757 0D06                          u767 0D42                          u777 0D54  
                        u787 0D60                 __CFG_BOR$OFF 000000           ??_tecladoMatricial 0004  
                        _lcd 0A20        __size_of_WriteCmdXLCD 003E                          wreg 000FE8  
               __CFG_FOSC$HS 000000                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1103 09FE                         l1107 0A0E                         l1091 09CE  
                       l1085 09B4                         l1501 08AC                         l1095 09DE  
                       l1503 08B6                         l1521 08F2                         l1099 09EE  
                       l1443 0A7E                         l1451 0AA0                         l1515 08D8  
                       l1523 08FC                         l1437 0A5E                         l1541 0938  
                       l1525 0904                         l1517 08E0                         l1543 0942  
                       l1551 0966                         l1519 08EA                         l1527 090E  
                       l1471 083A                         l1449 0A9A                         l1545 094A  
                       l1553 096E                         l1473 0842                         l1539 0930  
                       l1547 0954                         l1491 0880                         l1467 0828  
                       l1475 084C                         l1565 0C66                         l1549 095C  
                       l1493 0888                         l1477 0854                         l1469 0830  
                       l1559 0C48                         l1495 0892                         l1479 085E  
                       l1497 089A                         ?_lcd 0003                         l1499 08A4  
                       STR_1 0801                         STR_2 080B                         i2l52 0BD8  
                       i2l54 0BE2                         i2l55 0BF4                         i2l56 0BEC  
                       _RBPU 007F8F                         _TMR0 000FD6                         _main 0ABA  
  __size_of_varreduraTeclado 003E                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0032       __size_of_WriteDataXLCD 003E  
                       start 000E                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_lcd 0005                 _WriteCmdXLCD 0B90  
              __CFG_PLLDIV$1 000000                ?_SetDDRamAddr 0001                        ?_main 0001  
                      i2l152 0CD0                        i2l147 0CB6                        i2l149 0CBE  
                      _PORTD 000F83                __CFG_USBDIV$1 000000                        _TRISD 000F95  
__size_of_config_interrupcao 0008                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      ttemp5 0033                        ttemp6 0036                        ttemp7 003A  
                      status 000FD8              ??_config_timer0 0002                        wtemp8 0033  
             __CFG_ICPRT$OFF 000000              __initialization 0C7A                 ?_interrupcao 0001  
               __end_of_main 0B12             __end_of_BusyXLCD 0C46           __size_of_DelayXLCD 0012  
      __size_of_DelayPORXLCD 0010               ??_SetDDRamAddr 0002             __end_of_OpenXLCD 0A20  
                     ??_main 001E                __activetblptr 000001                _WriteDataXLCD 0B52  
            __CFG_CCP2MX$OFF 000000                       _ADCON1 000FC1                 _DelayPORXLCD 0D4E  
             __CFG_XINST$OFF 000000         _tecladoMatricial$490 000E         _tecladoMatricial$491 0010  
       _tecladoMatricial$492 0012         _tecladoMatricial$493 0014         _tecladoMatricial$485 0004  
       _tecladoMatricial$494 0016         _tecladoMatricial$486 0006         _tecladoMatricial$495 0018  
       _tecladoMatricial$487 0008         _tecladoMatricial$496 001A         _tecladoMatricial$488 000A  
       _tecladoMatricial$489 000C                       _cursor 0030               ?_WriteDataXLCD 0001  
               __pdataCOMRAM 0020                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8             ??_config_teclado 0002  
           __end_of_putsXLCD 0C7A            __end_of_DelayXLCD 0D4E                   __accesstop 0060  
    __end_of__initialization 0C9A              __CFG_PBADEN$OFF 000000             _varreduraTeclado 0BCE  
              ___rparam_used 000001               __pcstackCOMRAM 0001       __size_of_DelayFor18TCY 000A  
                  ?_BusyXLCD 0001    __size_of_tecladoMatricial 016A              WriteCmdXLCD@cmd 0002  
       __end_of_SetDDRamAddr 0B52                    ?_OpenXLCD 0001            WriteDataXLCD@data 0002  
       __size_of_interrupcao 0CCC              ??_WriteDataXLCD 0002                   _config_ldc 0CF4  
                 _config_led 0D70                      i2u18_40 0BFE                      i2u19_48 0C00  
                 ??_BusyXLCD 0002              __CFG_VREGEN$OFF 000000                   ??_OpenXLCD 0003  
                    __Hparam 0000                      __Lparam 0000                _DelayFor18TCY 0D5E  
                  ?_putsXLCD 0003                 __psmallconst 0800              __CFG_STVREN$OFF 000000  
                    __pcinit 0C7A                      __ramtop 0800                      __ptext0 0ABA  
                    __ptext1 080E                      __ptext2 0C46                      __ptext3 0A20  
                    __ptext4 0B52   __end_of_config_interrupcao 0D70                      __ptext5 0D10  
                    __ptext6 0CD4                      __ptext7 0D70                      __ptext8 0CF4  
                    __ptext9 0978                    _T0CONbits 000FD5                 __size_of_lcd 009A  
             __pintcode_body 0CAC         end_of_initialization 0C9A                      int_func 0CAC  
                 lcd@teclado 0006        __end_of_config_timer0 0D2A               ?_DelayFor18TCY 0001  
                    postdec1 000FE5                      postinc0 000FEE                      postinc2 000FDE  
                 ??_putsXLCD 0005                    _PORTBbits 000F81                    _PORTDbits 000F83  
   __end_of_varreduraTeclado 0C0C                  ?_config_ldc 0001                  ?_config_led 0001  
                  _TRISBbits 000F93                    _TRISDbits 000F95                    _TRISEbits 000F96  
      __size_of_SetDDRamAddr 0040             _tecladoMatricial 080E                    _DelayXLCD 0D3C  
              __pidataCOMRAM 0D2A                 _SetDDRamAddr 0B12           SetDDRamAddr@DDaddr 0002  
        start_initialization 0C7A                  __end_of_lcd 0ABA            __size_of_BusyXLCD 003A  
                 ?_DelayXLCD 0001              ??_DelayFor18TCY 0002            __size_of_OpenXLCD 00A8  
        __size_of_config_ldc 001C          __size_of_config_led 0006                ?_WriteCmdXLCD 0001  
           __CFG_LPT1OSC$OFF 000000      __size_of_config_teclado 0020               putsXLCD@buffer 0003  
              ??_interrupcao 0002                    __pintcode 0008               ??_WriteCmdXLCD 0002  
          __size_of_putsXLCD 0034        __end_of_WriteDataXLCD 0B90                  __smallconst 0800  
         _config_interrupcao 0D68                     _LATEbits 000F8D                  ??_DelayXLCD 0002  
              ?_DelayPORXLCD 0001          ?_config_interrupcao 0001              OpenXLCD@lcdtype 0003  
                   _RCONbits 000FD0             __CFG_WDTPS$32768 000000     __end_of_tecladoMatricial 0978  
        __end_of_interrupcao 0CD4            ?_varreduraTeclado 0001         ??_config_interrupcao 0002  
                  main@tecla 001E                 ??_config_ldc 0004                 ??_config_led 0002  
         ??_varreduraTeclado 0001                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
                  copy_data0 0C8E                     _BusyXLCD 0C0C               ??_DelayPORXLCD 0002  
                   _OpenXLCD 0978                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 0800           __end_of_config_ldc 0D10           __end_of_config_led 0D76  
     __size_of_config_timer0 001A                     __ptext10 0B90                     __ptext11 0B12  
                   __ptext12 0D3C                     __ptext13 0D4E                     __ptext14 0C0C  
                   __ptext15 0D5E                     __ptext16 0D68                     __ptext18 0BCE  
                   lcd@F3183 0020         __end_of_WriteCmdXLCD 0BCE                __size_of_main 0058  
             _config_teclado 0CD4                     lcd@tecla 0003                  _interrupcao 0008  
                   int$flags 0032                     _putsXLCD 0C46        __CFG_CPUDIV$OSC1_PLL2 000000  
                 _INTCONbits 000FF2                     intlevel2 0000       __end_of_config_teclado 0CF4  
              _config_timer0 0D10        __end_of_DelayFor18TCY 0D68         __end_of_DelayPORXLCD 0D5E  
            ?_config_teclado 0001               ?_config_timer0 0001  
