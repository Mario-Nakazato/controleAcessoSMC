

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 31 17:19:04 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000CBC                     __pidataCOMRAM:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for lcd@F3182
    72  000CBC  31                 	db	49
    73  000CBD  32                 	db	50
    74  000CBE  33                 	db	51
    75  000CBF  41                 	db	65
    76  000CC0  34                 	db	52
    77  000CC1  35                 	db	53
    78  000CC2  36                 	db	54
    79  000CC3  42                 	db	66
    80  000CC4  37                 	db	55
    81  000CC5  38                 	db	56
    82  000CC6  39                 	db	57
    83  000CC7  43                 	db	67
    84  000CC8  46                 	db	70
    85  000CC9  30                 	db	48
    86  000CCA  45                 	db	69
    87  000CCB  44                 	db	68
    88  0000                     _LATEbits	set	3981
    89  0000                     _TRISEbits	set	3990
    90  0000                     _TRISD	set	3989
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTDbits	set	3971
    93  0000                     _TRISDbits	set	3989
    94  0000                     _ADCON1	set	4033
    95  0000                     _RCONbits	set	4048
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _INTCONbits	set	4082
    98  0000                     _T0CONbits	set	4053
    99  0000                     _INTCON3bits	set	4080
   100  0000                     _TRISBbits	set	3987
   101  0000                     _PORTBbits	set	3969
   102  0000                     _RBPU	set	32655
   103                           
   104                           	psect	smallconst
   105  000800                     __psmallconst:
   106                           	opt callstack 0
   107  000800  00                 	db	0
   108  000801                     STR_1:
   109  000801  2A                 	db	42
   110  000802  54                 	db	84	;'T'
   111  000803  58                 	db	88	;'X'
   112  000804  54                 	db	84	;'T'
   113  000805  2A                 	db	42
   114  000806  00                 	db	0
   115                           
   116                           ; #config settings
   117  000807  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           	psect	cinit
   120  000C66                     __pcinit:
   121                           	opt callstack 0
   122  000C66                     start_initialization:
   123                           	opt callstack 0
   124  000C66                     __initialization:
   125                           	opt callstack 0
   126                           
   127                           ; Initialize objects allocated to COMRAM (16 bytes)
   128                           ; load TBLPTR registers with __pidataCOMRAM
   129  000C66  0EBC               	movlw	low __pidataCOMRAM
   130  000C68  6EF6               	movwf	tblptrl,c
   131  000C6A  0E0C               	movlw	high __pidataCOMRAM
   132  000C6C  6EF7               	movwf	tblptrh,c
   133  000C6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   134  000C70  6EF8               	movwf	tblptru,c
   135  000C72  EE00  F022         	lfsr	0,__pdataCOMRAM
   136  000C76  EE10 F010          	lfsr	1,16
   137  000C7A                     copy_data0:
   138  000C7A  0009               	tblrd		*+
   139  000C7C  CFF5 FFEE          	movff	tablat,postinc0
   140  000C80  50E5               	movf	postdec1,w,c
   141  000C82  50E1               	movf	fsr1l,w,c
   142  000C84  E1FA               	bnz	copy_data0
   143  000C86                     end_of_initialization:
   144                           	opt callstack 0
   145  000C86                     __end_of__initialization:
   146                           	opt callstack 0
   147  000C86  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   148  000C88  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   149  000C8A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   150  000C8C  6EF8               	movwf	tblptru,c
   151  000C8E  0E08               	movlw	high __Lsmallconst
   152  000C90  6EF7               	movwf	tblptrh,c
   153  000C92  0100               	movlb	0
   154  000C94  EF29  F005         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	dataCOMRAM
   157  000022                     __pdataCOMRAM:
   158                           	opt callstack 0
   159  000022                     lcd@F3182:
   160                           	opt callstack 0
   161  000022                     	ds	16
   162                           
   163                           	psect	cstackCOMRAM
   164  000001                     __pcstackCOMRAM:
   165                           	opt callstack 0
   166  000001                     ??_DelayPORXLCD:
   167  000001                     ??_DelayXLCD:
   168  000001                     ?_tecladoMatricial:
   169                           	opt callstack 0
   170  000001                     SetDDRamAddr@DDaddr:
   171                           	opt callstack 0
   172  000001                     WriteCmdXLCD@cmd:
   173                           	opt callstack 0
   174  000001                     WriteDataXLCD@data:
   175                           	opt callstack 0
   176                           
   177                           ; 1 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     OpenXLCD@lcdtype:
   180                           	opt callstack 0
   181  000002                     lcd@tecla:
   182                           	opt callstack 0
   183  000002                     putsXLCD@buffer:
   184                           	opt callstack 0
   185                           
   186                           ; 2 bytes @ 0x1
   187  000002                     	ds	1
   188  000003                     ??_config_ldc:
   189  000003                     _tecladoMatricial$474:
   190                           	opt callstack 0
   191                           
   192                           ; 2 bytes @ 0x2
   193  000003                     	ds	1
   194  000004                     lcd@teclado:
   195                           	opt callstack 0
   196                           
   197                           ; 16 bytes @ 0x3
   198  000004                     	ds	1
   199  000005                     _tecladoMatricial$475:
   200                           	opt callstack 0
   201                           
   202                           ; 2 bytes @ 0x4
   203  000005                     	ds	2
   204  000007                     _tecladoMatricial$476:
   205                           	opt callstack 0
   206                           
   207                           ; 2 bytes @ 0x6
   208  000007                     	ds	2
   209  000009                     _tecladoMatricial$477:
   210                           	opt callstack 0
   211                           
   212                           ; 2 bytes @ 0x8
   213  000009                     	ds	2
   214  00000B                     _tecladoMatricial$478:
   215                           	opt callstack 0
   216                           
   217                           ; 2 bytes @ 0xA
   218  00000B                     	ds	2
   219  00000D                     _tecladoMatricial$479:
   220                           	opt callstack 0
   221                           
   222                           ; 2 bytes @ 0xC
   223  00000D                     	ds	2
   224  00000F                     _tecladoMatricial$480:
   225                           	opt callstack 0
   226                           
   227                           ; 2 bytes @ 0xE
   228  00000F                     	ds	2
   229  000011                     _tecladoMatricial$481:
   230                           	opt callstack 0
   231                           
   232                           ; 2 bytes @ 0x10
   233  000011                     	ds	2
   234  000013                     _tecladoMatricial$482:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x12
   238  000013                     	ds	2
   239  000015                     _tecladoMatricial$483:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x14
   243  000015                     	ds	2
   244  000017                     _tecladoMatricial$484:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x16
   248  000017                     	ds	2
   249  000019                     _tecladoMatricial$485:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0x18
   253  000019                     	ds	2
   254  00001B                     tecladoMatricial@tecla:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x1A
   258  00001B                     	ds	2
   259  00001D                     ??_main:
   260                           
   261                           ; 1 bytes @ 0x1C
   262  00001D                     	ds	1
   263  00001E                     main@teclaAnterior:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x1D
   267  00001E                     	ds	2
   268  000020                     main@tecla:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x1F
   272  000020                     	ds	2
   273                           
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 226 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  tecla           2   31[COMRAM] int 
   284 ;;  teclaAnterio    2   29[COMRAM] int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   294 ;;      Params:         0       0       0       0       0       0       0       0       0
   295 ;;      Locals:         4       0       0       0       0       0       0       0       0
   296 ;;      Temps:          1       0       0       0       0       0       0       0       0
   297 ;;      Totals:         5       0       0       0       0       0       0       0       0
   298 ;;Total ram usage:        5 bytes
   299 ;; Hardware stack levels required when called:    5
   300 ;; This function calls:
   301 ;;		_BusyXLCD
   302 ;;		_WriteCmdXLCD
   303 ;;		_config_interrupcao
   304 ;;		_config_interrupcao1
   305 ;;		_config_interrupcao2
   306 ;;		_config_ldc
   307 ;;		_lcd
   308 ;;		_putsXLCD
   309 ;;		_tecladoMatricial
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316  000A52                     __ptext0:
   317                           	opt callstack 0
   318  000A52                     _main:
   319                           	opt callstack 26
   320                           
   321                           ;main.c: 228:     RBPU = 0;
   322                           
   323                           ;incstack = 0
   324  000A52  9EF1               	bcf	4081,7,c	;volatile
   325                           
   326                           ;main.c: 230:     ADCON1 = 0x0F;
   327  000A54  0E0F               	movlw	15
   328  000A56  6EC1               	movwf	4033,c	;volatile
   329                           
   330                           ;main.c: 232:     TRISDbits.TRISD0 = 0;
   331  000A58  9095               	bcf	3989,0,c	;volatile
   332                           
   333                           ;main.c: 233:     PORTDbits.RD0 = 0;
   334  000A5A  9083               	bcf	3971,0,c	;volatile
   335                           
   336                           ;main.c: 235:     config_interrupcao();
   337  000A5C  EC7B  F006         	call	_config_interrupcao	;wreg free
   338                           
   339                           ;main.c: 237:     config_interrupcao1();
   340  000A60  EC77  F006         	call	_config_interrupcao1	;wreg free
   341                           
   342                           ;main.c: 238:     config_interrupcao2();
   343  000A64  EC73  F006         	call	_config_interrupcao2	;wreg free
   344                           
   345                           ;main.c: 241:     config_ldc();
   346  000A68  EC19  F006         	call	_config_ldc	;wreg free
   347                           
   348                           ;main.c: 243:     WriteCmdXLCD(0x85);
   349  000A6C  0E85               	movlw	133
   350  000A6E  ECA5  F005         	call	_WriteCmdXLCD
   351                           
   352                           ;main.c: 244:     putsXLCD("*TXT*");
   353  000A72  0E01               	movlw	low STR_1
   354  000A74  6E02               	movwf	putsXLCD@buffer,c
   355  000A76  0E08               	movlw	high STR_1
   356  000A78  6E03               	movwf	putsXLCD@buffer+1,c
   357  000A7A  ECFF  F005         	call	_putsXLCD	;wreg free
   358                           
   359                           ;main.c: 245:     WriteCmdXLCD(0xC7);
   360  000A7E  0EC7               	movlw	199
   361  000A80  ECA5  F005         	call	_WriteCmdXLCD
   362  000A84                     l1541:
   363                           
   364                           ;main.c: 250:         tecla = tecladoMatricial();
   365  000A84  EC04  F004         	call	_tecladoMatricial	;wreg free
   366  000A88  C001  F020         	movff	?_tecladoMatricial,main@tecla
   367  000A8C  C002  F021         	movff	?_tecladoMatricial+1,main@tecla+1
   368                           
   369                           ;main.c: 251:         if(tecla != teclaAnterior){
   370  000A90  501E               	movf	main@teclaAnterior,w,c
   371  000A92  1820               	xorwf	main@tecla,w,c
   372  000A94  E104               	bnz	u710
   373  000A96  501F               	movf	main@teclaAnterior+1,w,c
   374  000A98  1821               	xorwf	main@tecla+1,w,c
   375  000A9A  B4D8               	btfsc	status,2,c
   376  000A9C  D006               	goto	l1547
   377  000A9E                     u710:
   378                           
   379                           ;main.c: 252:             lcd(tecla);
   380  000A9E  C020  F002         	movff	main@tecla,lcd@tecla
   381  000AA2  C021  F003         	movff	main@tecla+1,lcd@tecla+1
   382  000AA6  ECC4  F005         	call	_lcd	;wreg free
   383  000AAA                     l1547:
   384                           
   385                           ;main.c: 254:         teclaAnterior = tecla;
   386  000AAA  C020  F01E         	movff	main@tecla,main@teclaAnterior
   387  000AAE  C021  F01F         	movff	main@tecla+1,main@teclaAnterior+1
   388                           
   389                           ;main.c: 255:         if(!BusyXLCD()){
   390  000AB2  ECE2  F005         	call	_BusyXLCD	;wreg free
   391  000AB6  0900               	iorlw	0
   392  000AB8  A4D8               	btfss	status,2,c
   393  000ABA  D7E4               	goto	l1541
   394                           
   395                           ;main.c: 256:             _delay((unsigned long)((8)*(20000000/4000.0)));
   396  000ABC  0E34               	movlw	52
   397  000ABE  6E1D               	movwf	??_main& (0+255),c
   398  000AC0  0EF2               	movlw	242
   399  000AC2                     u737:
   400  000AC2  2EE8               	decfsz	wreg,f,c
   401  000AC4  D7FE               	bra	u737
   402  000AC6  2E1D               	decfsz	??_main& (0+255),f,c
   403  000AC8  D7FC               	bra	u737
   404  000ACA  D7DC               	goto	l1541
   405  000ACC                     __end_of_main:
   406                           	opt callstack 0
   407                           
   408 ;; *************** function _tecladoMatricial *****************
   409 ;; Defined at:
   410 ;;		line 97 in file "main.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  tecla           2   26[COMRAM] int 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  2    0[COMRAM] int 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         2       0       0       0       0       0       0       0       0
   425 ;;      Locals:        26       0       0       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0
   427 ;;      Totals:        28       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:       28 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text1
   439  000808                     __ptext1:
   440                           	opt callstack 0
   441  000808                     _tecladoMatricial:
   442                           	opt callstack 29
   443                           
   444                           ;main.c: 98:     int tecla;;main.c: 99:     if(!PORTBbits.RB3){
   445                           
   446                           ;incstack = 0
   447  000808  B681               	btfsc	3969,3,c	;volatile
   448  00080A  D031               	goto	l43
   449                           
   450                           ;main.c: 100:         tecla = !PORTBbits.RB4 ? 0:
   451  00080C  A881               	btfss	3969,4,c	;volatile
   452  00080E  D024               	goto	l1419
   453  000810  AA81               	btfss	3969,5,c	;volatile
   454  000812  D019               	goto	l1415
   455  000814  AC81               	btfss	3969,6,c	;volatile
   456  000816  D00E               	goto	l1411
   457  000818  AE81               	btfss	3969,7,c	;volatile
   458  00081A  D003               	goto	l1407
   459  00081C  6807               	setf	_tecladoMatricial$476,c
   460  00081E  6808               	setf	_tecladoMatricial$476+1,c
   461  000820  D004               	goto	l1409
   462  000822                     l1407:
   463  000822  0E00               	movlw	0
   464  000824  6E08               	movwf	_tecladoMatricial$476+1,c
   465  000826  0E0C               	movlw	12
   466  000828  6E07               	movwf	_tecladoMatricial$476,c
   467  00082A                     l1409:
   468  00082A  C007  F005         	movff	_tecladoMatricial$476,_tecladoMatricial$475
   469  00082E  C008  F006         	movff	_tecladoMatricial$476+1,_tecladoMatricial$475+1
   470  000832  D004               	goto	l1413
   471  000834                     l1411:
   472  000834  0E00               	movlw	0
   473  000836  6E06               	movwf	_tecladoMatricial$475+1,c
   474  000838  0E08               	movlw	8
   475  00083A  6E05               	movwf	_tecladoMatricial$475,c
   476  00083C                     l1413:
   477  00083C  C005  F003         	movff	_tecladoMatricial$475,_tecladoMatricial$474
   478  000840  C006  F004         	movff	_tecladoMatricial$475+1,_tecladoMatricial$474+1
   479  000844  D004               	goto	l1417
   480  000846                     l1415:
   481  000846  0E00               	movlw	0
   482  000848  6E04               	movwf	_tecladoMatricial$474+1,c
   483  00084A  0E04               	movlw	4
   484  00084C  6E03               	movwf	_tecladoMatricial$474,c
   485  00084E                     l1417:
   486  00084E  C003  F01B         	movff	_tecladoMatricial$474,tecladoMatricial@tecla
   487  000852  C004  F01C         	movff	_tecladoMatricial$474+1,tecladoMatricial@tecla+1
   488  000856  D004               	goto	l1421
   489  000858                     l1419:
   490  000858  0E00               	movlw	0
   491  00085A  6E1C               	movwf	tecladoMatricial@tecla+1,c
   492  00085C  0E00               	movlw	0
   493  00085E  6E1B               	movwf	tecladoMatricial@tecla,c
   494  000860                     l1421:
   495                           
   496                           ;main.c: 104:         if(tecla == -1){
   497  000860  281B               	incf	tecladoMatricial@tecla,w,c
   498  000862  E105               	bnz	l43
   499  000864  281C               	incf	tecladoMatricial@tecla+1,w,c
   500  000866  A4D8               	btfss	status,2,c
   501  000868  D002               	goto	l43
   502                           
   503                           ;main.c: 105:             PORTBbits.RB3 = 1;
   504  00086A  8681               	bsf	3969,3,c	;volatile
   505                           
   506                           ;main.c: 106:             PORTBbits.RB2 = 0;
   507  00086C  9481               	bcf	3969,2,c	;volatile
   508  00086E                     l43:
   509                           
   510                           ;main.c: 109:     if(!PORTBbits.RB2){
   511  00086E  B481               	btfsc	3969,2,c	;volatile
   512  000870  D031               	goto	l61
   513                           
   514                           ;main.c: 110:         tecla = !PORTBbits.RB4 ? 1:
   515  000872  A881               	btfss	3969,4,c	;volatile
   516  000874  D024               	goto	l1447
   517  000876  AA81               	btfss	3969,5,c	;volatile
   518  000878  D019               	goto	l1443
   519  00087A  AC81               	btfss	3969,6,c	;volatile
   520  00087C  D00E               	goto	l1439
   521  00087E  AE81               	btfss	3969,7,c	;volatile
   522  000880  D003               	goto	l1435
   523  000882  680D               	setf	_tecladoMatricial$479,c
   524  000884  680E               	setf	_tecladoMatricial$479+1,c
   525  000886  D004               	goto	l1437
   526  000888                     l1435:
   527  000888  0E00               	movlw	0
   528  00088A  6E0E               	movwf	_tecladoMatricial$479+1,c
   529  00088C  0E0D               	movlw	13
   530  00088E  6E0D               	movwf	_tecladoMatricial$479,c
   531  000890                     l1437:
   532  000890  C00D  F00B         	movff	_tecladoMatricial$479,_tecladoMatricial$478
   533  000894  C00E  F00C         	movff	_tecladoMatricial$479+1,_tecladoMatricial$478+1
   534  000898  D004               	goto	l1441
   535  00089A                     l1439:
   536  00089A  0E00               	movlw	0
   537  00089C  6E0C               	movwf	_tecladoMatricial$478+1,c
   538  00089E  0E09               	movlw	9
   539  0008A0  6E0B               	movwf	_tecladoMatricial$478,c
   540  0008A2                     l1441:
   541  0008A2  C00B  F009         	movff	_tecladoMatricial$478,_tecladoMatricial$477
   542  0008A6  C00C  F00A         	movff	_tecladoMatricial$478+1,_tecladoMatricial$477+1
   543  0008AA  D004               	goto	l1445
   544  0008AC                     l1443:
   545  0008AC  0E00               	movlw	0
   546  0008AE  6E0A               	movwf	_tecladoMatricial$477+1,c
   547  0008B0  0E05               	movlw	5
   548  0008B2  6E09               	movwf	_tecladoMatricial$477,c
   549  0008B4                     l1445:
   550  0008B4  C009  F01B         	movff	_tecladoMatricial$477,tecladoMatricial@tecla
   551  0008B8  C00A  F01C         	movff	_tecladoMatricial$477+1,tecladoMatricial@tecla+1
   552  0008BC  D004               	goto	l1449
   553  0008BE                     l1447:
   554  0008BE  0E00               	movlw	0
   555  0008C0  6E1C               	movwf	tecladoMatricial@tecla+1,c
   556  0008C2  0E01               	movlw	1
   557  0008C4  6E1B               	movwf	tecladoMatricial@tecla,c
   558  0008C6                     l1449:
   559                           
   560                           ;main.c: 114:         if(tecla == -1){
   561  0008C6  281B               	incf	tecladoMatricial@tecla,w,c
   562  0008C8  E105               	bnz	l61
   563  0008CA  281C               	incf	tecladoMatricial@tecla+1,w,c
   564  0008CC  A4D8               	btfss	status,2,c
   565  0008CE  D002               	goto	l61
   566                           
   567                           ;main.c: 115:             PORTBbits.RB2 = 1;
   568  0008D0  8481               	bsf	3969,2,c	;volatile
   569                           
   570                           ;main.c: 116:             PORTBbits.RB1 = 0;
   571  0008D2  9281               	bcf	3969,1,c	;volatile
   572  0008D4                     l61:
   573                           
   574                           ;main.c: 119:     if(!PORTBbits.RB1){
   575  0008D4  B281               	btfsc	3969,1,c	;volatile
   576  0008D6  D031               	goto	l79
   577                           
   578                           ;main.c: 120:         tecla = !PORTBbits.RB4 ? 2:
   579  0008D8  A881               	btfss	3969,4,c	;volatile
   580  0008DA  D024               	goto	l1475
   581  0008DC  AA81               	btfss	3969,5,c	;volatile
   582  0008DE  D019               	goto	l1471
   583  0008E0  AC81               	btfss	3969,6,c	;volatile
   584  0008E2  D00E               	goto	l1467
   585  0008E4  AE81               	btfss	3969,7,c	;volatile
   586  0008E6  D003               	goto	l1463
   587  0008E8  6813               	setf	_tecladoMatricial$482,c
   588  0008EA  6814               	setf	_tecladoMatricial$482+1,c
   589  0008EC  D004               	goto	l1465
   590  0008EE                     l1463:
   591  0008EE  0E00               	movlw	0
   592  0008F0  6E14               	movwf	_tecladoMatricial$482+1,c
   593  0008F2  0E0E               	movlw	14
   594  0008F4  6E13               	movwf	_tecladoMatricial$482,c
   595  0008F6                     l1465:
   596  0008F6  C013  F011         	movff	_tecladoMatricial$482,_tecladoMatricial$481
   597  0008FA  C014  F012         	movff	_tecladoMatricial$482+1,_tecladoMatricial$481+1
   598  0008FE  D004               	goto	l1469
   599  000900                     l1467:
   600  000900  0E00               	movlw	0
   601  000902  6E12               	movwf	_tecladoMatricial$481+1,c
   602  000904  0E0A               	movlw	10
   603  000906  6E11               	movwf	_tecladoMatricial$481,c
   604  000908                     l1469:
   605  000908  C011  F00F         	movff	_tecladoMatricial$481,_tecladoMatricial$480
   606  00090C  C012  F010         	movff	_tecladoMatricial$481+1,_tecladoMatricial$480+1
   607  000910  D004               	goto	l1473
   608  000912                     l1471:
   609  000912  0E00               	movlw	0
   610  000914  6E10               	movwf	_tecladoMatricial$480+1,c
   611  000916  0E06               	movlw	6
   612  000918  6E0F               	movwf	_tecladoMatricial$480,c
   613  00091A                     l1473:
   614  00091A  C00F  F01B         	movff	_tecladoMatricial$480,tecladoMatricial@tecla
   615  00091E  C010  F01C         	movff	_tecladoMatricial$480+1,tecladoMatricial@tecla+1
   616  000922  D004               	goto	l1477
   617  000924                     l1475:
   618  000924  0E00               	movlw	0
   619  000926  6E1C               	movwf	tecladoMatricial@tecla+1,c
   620  000928  0E02               	movlw	2
   621  00092A  6E1B               	movwf	tecladoMatricial@tecla,c
   622  00092C                     l1477:
   623                           
   624                           ;main.c: 124:         if(tecla == -1){
   625  00092C  281B               	incf	tecladoMatricial@tecla,w,c
   626  00092E  E105               	bnz	l79
   627  000930  281C               	incf	tecladoMatricial@tecla+1,w,c
   628  000932  A4D8               	btfss	status,2,c
   629  000934  D002               	goto	l79
   630                           
   631                           ;main.c: 125:             PORTBbits.RB1 = 1;
   632  000936  8281               	bsf	3969,1,c	;volatile
   633                           
   634                           ;main.c: 126:             PORTBbits.RB0 = 0;
   635  000938  9081               	bcf	3969,0,c	;volatile
   636  00093A                     l79:
   637                           
   638                           ;main.c: 129:     if(!PORTBbits.RB0){
   639  00093A  B081               	btfsc	3969,0,c	;volatile
   640  00093C  D031               	goto	l97
   641                           
   642                           ;main.c: 130:         tecla = !PORTBbits.RB4 ? 3:
   643  00093E  A881               	btfss	3969,4,c	;volatile
   644  000940  D024               	goto	l1503
   645  000942  AA81               	btfss	3969,5,c	;volatile
   646  000944  D019               	goto	l1499
   647  000946  AC81               	btfss	3969,6,c	;volatile
   648  000948  D00E               	goto	l1495
   649  00094A  AE81               	btfss	3969,7,c	;volatile
   650  00094C  D003               	goto	l1491
   651  00094E  6819               	setf	_tecladoMatricial$485,c
   652  000950  681A               	setf	_tecladoMatricial$485+1,c
   653  000952  D004               	goto	l1493
   654  000954                     l1491:
   655  000954  0E00               	movlw	0
   656  000956  6E1A               	movwf	_tecladoMatricial$485+1,c
   657  000958  0E0F               	movlw	15
   658  00095A  6E19               	movwf	_tecladoMatricial$485,c
   659  00095C                     l1493:
   660  00095C  C019  F017         	movff	_tecladoMatricial$485,_tecladoMatricial$484
   661  000960  C01A  F018         	movff	_tecladoMatricial$485+1,_tecladoMatricial$484+1
   662  000964  D004               	goto	l1497
   663  000966                     l1495:
   664  000966  0E00               	movlw	0
   665  000968  6E18               	movwf	_tecladoMatricial$484+1,c
   666  00096A  0E0B               	movlw	11
   667  00096C  6E17               	movwf	_tecladoMatricial$484,c
   668  00096E                     l1497:
   669  00096E  C017  F015         	movff	_tecladoMatricial$484,_tecladoMatricial$483
   670  000972  C018  F016         	movff	_tecladoMatricial$484+1,_tecladoMatricial$483+1
   671  000976  D004               	goto	l1501
   672  000978                     l1499:
   673  000978  0E00               	movlw	0
   674  00097A  6E16               	movwf	_tecladoMatricial$483+1,c
   675  00097C  0E07               	movlw	7
   676  00097E  6E15               	movwf	_tecladoMatricial$483,c
   677  000980                     l1501:
   678  000980  C015  F01B         	movff	_tecladoMatricial$483,tecladoMatricial@tecla
   679  000984  C016  F01C         	movff	_tecladoMatricial$483+1,tecladoMatricial@tecla+1
   680  000988  D004               	goto	l1505
   681  00098A                     l1503:
   682  00098A  0E00               	movlw	0
   683  00098C  6E1C               	movwf	tecladoMatricial@tecla+1,c
   684  00098E  0E03               	movlw	3
   685  000990  6E1B               	movwf	tecladoMatricial@tecla,c
   686  000992                     l1505:
   687                           
   688                           ;main.c: 134:         if(tecla == -1){
   689  000992  281B               	incf	tecladoMatricial@tecla,w,c
   690  000994  E105               	bnz	l97
   691  000996  281C               	incf	tecladoMatricial@tecla+1,w,c
   692  000998  A4D8               	btfss	status,2,c
   693  00099A  D002               	goto	l97
   694                           
   695                           ;main.c: 135:             PORTBbits.RB0 = 1;
   696  00099C  8081               	bsf	3969,0,c	;volatile
   697                           
   698                           ;main.c: 136:             PORTBbits.RB3 = 0;
   699  00099E  9681               	bcf	3969,3,c	;volatile
   700  0009A0                     l97:
   701                           
   702                           ;main.c: 139:     return tecla;
   703  0009A0  C01B  F001         	movff	tecladoMatricial@tecla,?_tecladoMatricial
   704  0009A4  C01C  F002         	movff	tecladoMatricial@tecla+1,?_tecladoMatricial+1
   705  0009A8  0012               	return		;funcret
   706  0009AA                     __end_of_tecladoMatricial:
   707                           	opt callstack 0
   708                           
   709 ;; *************** function _putsXLCD *****************
   710 ;; Defined at:
   711 ;;		line 510 in file "nxlcd.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  buffer          2    1[COMRAM] PTR unsigned char 
   714 ;;		 -> STR_1(6), 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         2       0       0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0
   729 ;;      Totals:         2       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        2 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		_BusyXLCD
   735 ;;		_WriteDataXLCD
   736 ;; This function is called by:
   737 ;;		_main
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           	psect	text2
   742  000BFE                     __ptext2:
   743                           	opt callstack 0
   744  000BFE                     _putsXLCD:
   745                           	opt callstack 27
   746                           
   747                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
   748                           
   749                           ;incstack = 0
   750  000BFE  D00F               	goto	l1517
   751  000C00                     l1511:
   752  000C00  ECE2  F005         	call	_BusyXLCD	;wreg free
   753  000C04  0900               	iorlw	0
   754  000C06  A4D8               	btfss	status,2,c
   755  000C08  D7FB               	goto	l1511
   756                           
   757                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
   758  000C0A  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   759  000C0E  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   760  000C12                     	if	0	;tblptru may be non-zero
   761  000C12                     	endif
   762  000C12                     	if	0	;tblptru may be non-zero
   763  000C12                     	endif
   764  000C12  0008               	tblrd		*
   765  000C14  50F5               	movf	tablat,w,c
   766  000C16  EC86  F005         	call	_WriteDataXLCD
   767                           
   768                           ;nxlcd.c: 516:                 buffer++;
   769  000C1A  4A02               	infsnz	putsXLCD@buffer,f,c
   770  000C1C  2A03               	incf	putsXLCD@buffer+1,f,c
   771  000C1E                     l1517:
   772                           
   773                           ;nxlcd.c: 512:         while(*buffer)
   774  000C1E  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   775  000C22  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   776  000C26                     	if	0	;tblptru may be non-zero
   777  000C26                     	endif
   778  000C26                     	if	0	;tblptru may be non-zero
   779  000C26                     	endif
   780  000C26  0008               	tblrd		*
   781  000C28  50F5               	movf	tablat,w,c
   782  000C2A  0900               	iorlw	0
   783  000C2C  B4D8               	btfsc	status,2,c
   784  000C2E  0012               	return	
   785  000C30  D7E7               	goto	l1511
   786  000C32                     __end_of_putsXLCD:
   787                           	opt callstack 0
   788                           
   789 ;; *************** function _lcd *****************
   790 ;; Defined at:
   791 ;;		line 82 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  tecla           2    1[COMRAM] int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  teclado        16    3[COMRAM] unsigned char [16]
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         2       0       0       0       0       0       0       0       0
   806 ;;      Locals:        16       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:        18       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:       18 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    3
   812 ;; This function calls:
   813 ;;		_WriteCmdXLCD
   814 ;;		_WriteDataXLCD
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text3
   821  000B88                     __ptext3:
   822                           	opt callstack 0
   823  000B88                     _lcd:
   824                           	opt callstack 27
   825                           
   826                           ;main.c: 83:     char teclado[16] = {
   827                           
   828                           ;incstack = 0
   829  000B88  EE20  F022         	lfsr	2,lcd@F3182
   830  000B8C  EE10  F004         	lfsr	1,lcd@teclado
   831  000B90  0E0F               	movlw	15
   832  000B92                     u431:
   833  000B92  CFDB FFE3          	movff	plusw2,plusw1
   834  000B96  06E8               	decf	wreg,f,c
   835  000B98  E2FC               	bc	u431
   836                           
   837                           ;main.c: 90:     if(tecla != -1){
   838  000B9A  2802               	incf	lcd@tecla,w,c
   839  000B9C  E103               	bnz	u440
   840  000B9E  2803               	incf	lcd@tecla+1,w,c
   841  000BA0  B4D8               	btfsc	status,2,c
   842  000BA2  0012               	return	
   843  000BA4                     u440:
   844                           
   845                           ;main.c: 91:         WriteCmdXLCD(0xC7);
   846  000BA4  0EC7               	movlw	199
   847  000BA6  ECA5  F005         	call	_WriteCmdXLCD
   848                           
   849                           ;main.c: 92:         WriteDataXLCD(teclado[tecla]);
   850  000BAA  0E04               	movlw	low lcd@teclado
   851  000BAC  2402               	addwf	lcd@tecla,w,c
   852  000BAE  6ED9               	movwf	fsr2l,c
   853  000BB0  0E00               	movlw	high lcd@teclado
   854  000BB2  2003               	addwfc	lcd@tecla+1,w,c
   855  000BB4  6EDA               	movwf	fsr2h,c
   856  000BB6  50DF               	movf	indf2,w,c
   857  000BB8  EC86  F005         	call	_WriteDataXLCD
   858                           
   859                           ;main.c: 93:         WriteCmdXLCD(0xC7);
   860  000BBC  0EC7               	movlw	199
   861  000BBE  ECA5  F005         	call	_WriteCmdXLCD
   862  000BC2  0012               	return		;funcret
   863  000BC4                     __end_of_lcd:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _WriteDataXLCD *****************
   867 ;; Defined at:
   868 ;;		line 449 in file "nxlcd.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  data            1    wreg     unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  data            1    0[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         1       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    2
   889 ;; This function calls:
   890 ;;		_DelayFor18TCY
   891 ;; This function is called by:
   892 ;;		_lcd
   893 ;;		_putsXLCD
   894 ;;		_putrsXLCD
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text4
   899  000B0C                     __ptext4:
   900                           	opt callstack 0
   901  000B0C                     _WriteDataXLCD:
   902                           	opt callstack 27
   903                           
   904                           ;incstack = 0
   905                           ;WriteDataXLCD@data stored from wreg
   906  000B0C  6E01               	movwf	WriteDataXLCD@data,c
   907                           
   908                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
   909  000B0E  0E0F               	movlw	15
   910  000B10  1695               	andwf	3989,f,c	;volatile
   911                           
   912                           ;nxlcd.c: 465:         PORTD &= 0x0f;
   913  000B12  0E0F               	movlw	15
   914  000B14  1683               	andwf	3971,f,c	;volatile
   915                           
   916                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
   917  000B16  5001               	movf	WriteDataXLCD@data,w,c
   918  000B18  0BF0               	andlw	240
   919  000B1A  1283               	iorwf	3971,f,c	;volatile
   920                           
   921                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
   922  000B1C  808D               	bsf	3981,0,c	;volatile
   923                           
   924                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
   925  000B1E  948D               	bcf	3981,2,c	;volatile
   926                           
   927                           ;nxlcd.c: 474:         DelayFor18TCY();
   928  000B20  EC6E  F006         	call	_DelayFor18TCY	;wreg free
   929                           
   930                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
   931  000B24  828D               	bsf	3981,1,c	;volatile
   932                           
   933                           ;nxlcd.c: 476:         DelayFor18TCY();
   934  000B26  EC6E  F006         	call	_DelayFor18TCY	;wreg free
   935                           
   936                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
   937  000B2A  928D               	bcf	3981,1,c	;volatile
   938                           
   939                           ;nxlcd.c: 479:         PORTD &= 0x0f;
   940  000B2C  0E0F               	movlw	15
   941  000B2E  1683               	andwf	3971,f,c	;volatile
   942                           
   943                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
   944  000B30  3801               	swapf	WriteDataXLCD@data,w,c
   945  000B32  0BF0               	andlw	240
   946  000B34  0BF0               	andlw	240
   947  000B36  1283               	iorwf	3971,f,c	;volatile
   948                           
   949                           ;nxlcd.c: 485:         DelayFor18TCY();
   950  000B38  EC6E  F006         	call	_DelayFor18TCY	;wreg free
   951                           
   952                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
   953  000B3C  828D               	bsf	3981,1,c	;volatile
   954                           
   955                           ;nxlcd.c: 487:         DelayFor18TCY();
   956  000B3E  EC6E  F006         	call	_DelayFor18TCY	;wreg free
   957                           
   958                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
   959  000B42  928D               	bcf	3981,1,c	;volatile
   960                           
   961                           ;nxlcd.c: 490:         TRISD |= 0xf0;
   962  000B44  0EF0               	movlw	240
   963  000B46  1295               	iorwf	3989,f,c	;volatile
   964  000B48  0012               	return		;funcret
   965  000B4A                     __end_of_WriteDataXLCD:
   966                           	opt callstack 0
   967                           
   968 ;; *************** function _config_ldc *****************
   969 ;; Defined at:
   970 ;;		line 142 in file "main.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0       0       0       0
   987 ;;      Totals:         1       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    4
   991 ;; This function calls:
   992 ;;		_OpenXLCD
   993 ;;		_WriteCmdXLCD
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text5
  1000  000C32                     __ptext5:
  1001                           	opt callstack 0
  1002  000C32                     _config_ldc:
  1003                           	opt callstack 26
  1004                           
  1005                           ;main.c: 144:     OpenXLCD(0b00101100 & 0b00111000);
  1006                           
  1007                           ;incstack = 0
  1008  000C32  0E28               	movlw	40
  1009  000C34  ECD5  F004         	call	_OpenXLCD
  1010                           
  1011                           ;main.c: 145:     WriteCmdXLCD(0x01);
  1012  000C38  0E01               	movlw	1
  1013  000C3A  ECA5  F005         	call	_WriteCmdXLCD
  1014                           
  1015                           ;main.c: 146:     _delay((unsigned long)((8)*(20000000/4000.0)));
  1016  000C3E  0E34               	movlw	52
  1017  000C40  6E03               	movwf	??_config_ldc& (0+255),c
  1018  000C42  0EF2               	movlw	242
  1019  000C44                     u747:
  1020  000C44  2EE8               	decfsz	wreg,f,c
  1021  000C46  D7FE               	bra	u747
  1022  000C48  2E03               	decfsz	??_config_ldc& (0+255),f,c
  1023  000C4A  D7FC               	bra	u747
  1024                           
  1025                           ;main.c: 148:     TRISBbits.TRISB0 = 0;
  1026  000C4C  9093               	bcf	3987,0,c	;volatile
  1027                           
  1028                           ;main.c: 149:     TRISBbits.TRISB1 = 0;
  1029  000C4E  9293               	bcf	3987,1,c	;volatile
  1030                           
  1031                           ;main.c: 150:     TRISBbits.TRISB2 = 0;
  1032  000C50  9493               	bcf	3987,2,c	;volatile
  1033                           
  1034                           ;main.c: 151:     TRISBbits.TRISB3 = 0;
  1035  000C52  9693               	bcf	3987,3,c	;volatile
  1036                           
  1037                           ;main.c: 152:     TRISBbits.TRISB4 = 1;
  1038  000C54  8893               	bsf	3987,4,c	;volatile
  1039                           
  1040                           ;main.c: 153:     TRISBbits.TRISB5 = 1;
  1041  000C56  8A93               	bsf	3987,5,c	;volatile
  1042                           
  1043                           ;main.c: 154:     TRISBbits.TRISB6 = 1;
  1044  000C58  8C93               	bsf	3987,6,c	;volatile
  1045                           
  1046                           ;main.c: 155:     TRISBbits.TRISB7 = 1;
  1047  000C5A  8E93               	bsf	3987,7,c	;volatile
  1048                           
  1049                           ;main.c: 157:     PORTBbits.RB0 = 1;
  1050  000C5C  8081               	bsf	3969,0,c	;volatile
  1051                           
  1052                           ;main.c: 158:     PORTBbits.RB1 = 1;
  1053  000C5E  8281               	bsf	3969,1,c	;volatile
  1054                           
  1055                           ;main.c: 159:     PORTBbits.RB2 = 1;
  1056  000C60  8481               	bsf	3969,2,c	;volatile
  1057                           
  1058                           ;main.c: 160:     PORTBbits.RB3 = 0;
  1059  000C62  9681               	bcf	3969,3,c	;volatile
  1060  000C64  0012               	return		;funcret
  1061  000C66                     __end_of_config_ldc:
  1062                           	opt callstack 0
  1063                           
  1064 ;; *************** function _OpenXLCD *****************
  1065 ;; Defined at:
  1066 ;;		line 41 in file "nxlcd.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  lcdtype         1    wreg     unsigned char 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  lcdtype         1    1[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1080 ;;      Params:         0       0       0       0       0       0       0       0       0
  1081 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1083 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1084 ;;Total ram usage:        1 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    3
  1087 ;; This function calls:
  1088 ;;		_BusyXLCD
  1089 ;;		_DelayPORXLCD
  1090 ;;		_DelayXLCD
  1091 ;;		_SetDDRamAddr
  1092 ;;		_WriteCmdXLCD
  1093 ;; This function is called by:
  1094 ;;		_config_ldc
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text6
  1099  0009AA                     __ptext6:
  1100                           	opt callstack 0
  1101  0009AA                     _OpenXLCD:
  1102                           	opt callstack 26
  1103                           
  1104                           ;incstack = 0
  1105                           ;OpenXLCD@lcdtype stored from wreg
  1106  0009AA  6E02               	movwf	OpenXLCD@lcdtype,c
  1107                           
  1108                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1109  0009AC  0E0F               	movlw	15
  1110  0009AE  1683               	andwf	3971,f,c	;volatile
  1111                           
  1112                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1113  0009B0  0E0F               	movlw	15
  1114  0009B2  1695               	andwf	3989,f,c	;volatile
  1115                           
  1116                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1117  0009B4  9496               	bcf	3990,2,c	;volatile
  1118                           
  1119                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1120  0009B6  9096               	bcf	3990,0,c	;volatile
  1121                           
  1122                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  1123  0009B8  9296               	bcf	3990,1,c	;volatile
  1124                           
  1125                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  1126  0009BA  948D               	bcf	3981,2,c	;volatile
  1127                           
  1128                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  1129  0009BC  908D               	bcf	3981,0,c	;volatile
  1130                           
  1131                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  1132  0009BE  928D               	bcf	3981,1,c	;volatile
  1133                           
  1134                           ;nxlcd.c: 65:         DelayPORXLCD();
  1135  0009C0  EC66  F006         	call	_DelayPORXLCD	;wreg free
  1136                           
  1137                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  1138  0009C4  0E30               	movlw	48
  1139  0009C6  ECA5  F005         	call	_WriteCmdXLCD
  1140                           
  1141                           ;nxlcd.c: 68:    DelayXLCD();
  1142  0009CA  EC4C  F006         	call	_DelayXLCD	;wreg free
  1143                           
  1144                           ;nxlcd.c: 69:    DelayXLCD();
  1145  0009CE  EC4C  F006         	call	_DelayXLCD	;wreg free
  1146                           
  1147                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  1148  0009D2  0E30               	movlw	48
  1149  0009D4  ECA5  F005         	call	_WriteCmdXLCD
  1150                           
  1151                           ;nxlcd.c: 71:    DelayXLCD();
  1152  0009D8  EC4C  F006         	call	_DelayXLCD	;wreg free
  1153                           
  1154                           ;nxlcd.c: 72:    DelayXLCD();
  1155  0009DC  EC4C  F006         	call	_DelayXLCD	;wreg free
  1156                           
  1157                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  1158  0009E0  0E32               	movlw	50
  1159  0009E2  ECA5  F005         	call	_WriteCmdXLCD
  1160  0009E6                     l1061:
  1161  0009E6  ECE2  F005         	call	_BusyXLCD	;wreg free
  1162  0009EA  0900               	iorlw	0
  1163  0009EC  A4D8               	btfss	status,2,c
  1164  0009EE  D7FB               	goto	l1061
  1165  0009F0                     u20:
  1166  0009F0  ECE2  F005         	call	_BusyXLCD	;wreg free
  1167  0009F4  0900               	iorlw	0
  1168  0009F6  A4D8               	btfss	status,2,c
  1169  0009F8  D7FB               	goto	u20
  1170                           
  1171                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  1172  0009FA  5002               	movf	OpenXLCD@lcdtype,w,c
  1173  0009FC  ECA5  F005         	call	_WriteCmdXLCD
  1174  000A00                     l1067:
  1175  000A00  ECE2  F005         	call	_BusyXLCD	;wreg free
  1176  000A04  0900               	iorlw	0
  1177  000A06  A4D8               	btfss	status,2,c
  1178  000A08  D7FB               	goto	l1067
  1179                           
  1180                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1181  000A0A  0E08               	movlw	8
  1182  000A0C  ECA5  F005         	call	_WriteCmdXLCD
  1183  000A10                     l1071:
  1184  000A10  ECE2  F005         	call	_BusyXLCD	;wreg free
  1185  000A14  0900               	iorlw	0
  1186  000A16  A4D8               	btfss	status,2,c
  1187  000A18  D7FB               	goto	l1071
  1188                           
  1189                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1190  000A1A  0E0F               	movlw	15
  1191  000A1C  ECA5  F005         	call	_WriteCmdXLCD
  1192  000A20                     l1075:
  1193  000A20  ECE2  F005         	call	_BusyXLCD	;wreg free
  1194  000A24  0900               	iorlw	0
  1195  000A26  A4D8               	btfss	status,2,c
  1196  000A28  D7FB               	goto	l1075
  1197                           
  1198                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  1199  000A2A  0E01               	movlw	1
  1200  000A2C  ECA5  F005         	call	_WriteCmdXLCD
  1201  000A30                     l1079:
  1202  000A30  ECE2  F005         	call	_BusyXLCD	;wreg free
  1203  000A34  0900               	iorlw	0
  1204  000A36  A4D8               	btfss	status,2,c
  1205  000A38  D7FB               	goto	l1079
  1206                           
  1207                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  1208  000A3A  0E04               	movlw	4
  1209  000A3C  ECA5  F005         	call	_WriteCmdXLCD
  1210  000A40                     l1083:
  1211  000A40  ECE2  F005         	call	_BusyXLCD	;wreg free
  1212  000A44  0900               	iorlw	0
  1213  000A46  A4D8               	btfss	status,2,c
  1214  000A48  D7FB               	goto	l1083
  1215                           
  1216                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  1217  000A4A  0E80               	movlw	128
  1218  000A4C  EC66  F005         	call	_SetDDRamAddr
  1219  000A50  0012               	return		;funcret
  1220  000A52                     __end_of_OpenXLCD:
  1221                           	opt callstack 0
  1222                           
  1223 ;; *************** function _WriteCmdXLCD *****************
  1224 ;; Defined at:
  1225 ;;		line 388 in file "nxlcd.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  cmd             1    wreg     unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  cmd             1    0[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    2
  1246 ;; This function calls:
  1247 ;;		_DelayFor18TCY
  1248 ;; This function is called by:
  1249 ;;		_lcd
  1250 ;;		_config_ldc
  1251 ;;		_main
  1252 ;;		_OpenXLCD
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text7
  1257  000B4A                     __ptext7:
  1258                           	opt callstack 0
  1259  000B4A                     _WriteCmdXLCD:
  1260                           	opt callstack 27
  1261                           
  1262                           ;incstack = 0
  1263                           ;WriteCmdXLCD@cmd stored from wreg
  1264  000B4A  6E01               	movwf	WriteCmdXLCD@cmd,c
  1265                           
  1266                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  1267  000B4C  0E0F               	movlw	15
  1268  000B4E  1695               	andwf	3989,f,c	;volatile
  1269                           
  1270                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  1271  000B50  0E0F               	movlw	15
  1272  000B52  1683               	andwf	3971,f,c	;volatile
  1273                           
  1274                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  1275  000B54  5001               	movf	WriteCmdXLCD@cmd,w,c
  1276  000B56  0BF0               	andlw	240
  1277  000B58  1283               	iorwf	3971,f,c	;volatile
  1278                           
  1279                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  1280  000B5A  948D               	bcf	3981,2,c	;volatile
  1281                           
  1282                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  1283  000B5C  908D               	bcf	3981,0,c	;volatile
  1284                           
  1285                           ;nxlcd.c: 413:         DelayFor18TCY();
  1286  000B5E  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1287                           
  1288                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  1289  000B62  828D               	bsf	3981,1,c	;volatile
  1290                           
  1291                           ;nxlcd.c: 415:         DelayFor18TCY();
  1292  000B64  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1293                           
  1294                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  1295  000B68  928D               	bcf	3981,1,c	;volatile
  1296                           
  1297                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  1298  000B6A  0E0F               	movlw	15
  1299  000B6C  1683               	andwf	3971,f,c	;volatile
  1300                           
  1301                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  1302  000B6E  3801               	swapf	WriteCmdXLCD@cmd,w,c
  1303  000B70  0BF0               	andlw	240
  1304  000B72  0BF0               	andlw	240
  1305  000B74  1283               	iorwf	3971,f,c	;volatile
  1306                           
  1307                           ;nxlcd.c: 424:         DelayFor18TCY();
  1308  000B76  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1309                           
  1310                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  1311  000B7A  828D               	bsf	3981,1,c	;volatile
  1312                           
  1313                           ;nxlcd.c: 426:         DelayFor18TCY();
  1314  000B7C  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1315                           
  1316                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  1317  000B80  928D               	bcf	3981,1,c	;volatile
  1318                           
  1319                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  1320  000B82  0EF0               	movlw	240
  1321  000B84  1295               	iorwf	3989,f,c	;volatile
  1322  000B86  0012               	return		;funcret
  1323  000B88                     __end_of_WriteCmdXLCD:
  1324                           	opt callstack 0
  1325                           
  1326 ;; *************** function _SetDDRamAddr *****************
  1327 ;; Defined at:
  1328 ;;		line 171 in file "nxlcd.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  DDaddr          1    wreg     unsigned char 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  DDaddr          1    0[COMRAM] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0
  1343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1346 ;;Total ram usage:        1 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    2
  1349 ;; This function calls:
  1350 ;;		_DelayFor18TCY
  1351 ;; This function is called by:
  1352 ;;		_OpenXLCD
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text8
  1357  000ACC                     __ptext8:
  1358                           	opt callstack 0
  1359  000ACC                     _SetDDRamAddr:
  1360                           	opt callstack 26
  1361                           
  1362                           ;incstack = 0
  1363                           ;SetDDRamAddr@DDaddr stored from wreg
  1364  000ACC  6E01               	movwf	SetDDRamAddr@DDaddr,c
  1365                           
  1366                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  1367  000ACE  0E0F               	movlw	15
  1368  000AD0  1695               	andwf	3989,f,c	;volatile
  1369                           
  1370                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  1371  000AD2  0E0F               	movlw	15
  1372  000AD4  1683               	andwf	3971,f,c	;volatile
  1373                           
  1374                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  1375  000AD6  5001               	movf	SetDDRamAddr@DDaddr,w,c
  1376  000AD8  0980               	iorlw	128
  1377  000ADA  0BF0               	andlw	240
  1378  000ADC  1283               	iorwf	3971,f,c	;volatile
  1379                           
  1380                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  1381  000ADE  948D               	bcf	3981,2,c	;volatile
  1382                           
  1383                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  1384  000AE0  908D               	bcf	3981,0,c	;volatile
  1385                           
  1386                           ;nxlcd.c: 196:         DelayFor18TCY();
  1387  000AE2  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1388                           
  1389                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  1390  000AE6  828D               	bsf	3981,1,c	;volatile
  1391                           
  1392                           ;nxlcd.c: 198:         DelayFor18TCY();
  1393  000AE8  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1394                           
  1395                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  1396  000AEC  928D               	bcf	3981,1,c	;volatile
  1397                           
  1398                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  1399  000AEE  0E0F               	movlw	15
  1400  000AF0  1683               	andwf	3971,f,c	;volatile
  1401                           
  1402                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  1403  000AF2  3801               	swapf	SetDDRamAddr@DDaddr,w,c
  1404  000AF4  0BF0               	andlw	240
  1405  000AF6  0BF0               	andlw	240
  1406  000AF8  1283               	iorwf	3971,f,c	;volatile
  1407                           
  1408                           ;nxlcd.c: 207:         DelayFor18TCY();
  1409  000AFA  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1410                           
  1411                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  1412  000AFE  828D               	bsf	3981,1,c	;volatile
  1413                           
  1414                           ;nxlcd.c: 209:         DelayFor18TCY();
  1415  000B00  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1416                           
  1417                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  1418  000B04  928D               	bcf	3981,1,c	;volatile
  1419                           
  1420                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  1421  000B06  0EF0               	movlw	240
  1422  000B08  1295               	iorwf	3989,f,c	;volatile
  1423  000B0A  0012               	return		;funcret
  1424  000B0C                     __end_of_SetDDRamAddr:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _DelayXLCD *****************
  1428 ;; Defined at:
  1429 ;;		line 22 in file "nxlcd.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1445 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1446 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1447 ;;Total ram usage:        1 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_OpenXLCD
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text9
  1458  000C98                     __ptext9:
  1459                           	opt callstack 0
  1460  000C98                     _DelayXLCD:
  1461                           	opt callstack 27
  1462                           
  1463                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1464                           
  1465                           ;incstack = 0
  1466  000C98  0E21               	movlw	33
  1467  000C9A  6E01               	movwf	??_DelayXLCD& (0+255),c
  1468  000C9C  0E76               	movlw	118
  1469  000C9E                     u757:
  1470  000C9E  2EE8               	decfsz	wreg,f,c
  1471  000CA0  D7FE               	bra	u757
  1472  000CA2  2E01               	decfsz	??_DelayXLCD& (0+255),f,c
  1473  000CA4  D7FC               	bra	u757
  1474  000CA6  D000               	nop2	
  1475  000CA8  0012               	return		;funcret
  1476  000CAA                     __end_of_DelayXLCD:
  1477                           	opt callstack 0
  1478                           
  1479 ;; *************** function _DelayPORXLCD *****************
  1480 ;; Defined at:
  1481 ;;		line 17 in file "nxlcd.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_OpenXLCD
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text10
  1510  000CCC                     __ptext10:
  1511                           	opt callstack 0
  1512  000CCC                     _DelayPORXLCD:
  1513                           	opt callstack 27
  1514                           
  1515                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  1516                           
  1517                           ;incstack = 0
  1518  000CCC  0E62               	movlw	98
  1519  000CCE  6E01               	movwf	??_DelayPORXLCD& (0+255),c
  1520  000CD0  0E66               	movlw	102
  1521  000CD2                     u767:
  1522  000CD2  2EE8               	decfsz	wreg,f,c
  1523  000CD4  D7FE               	bra	u767
  1524  000CD6  2E01               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1525  000CD8  D7FC               	bra	u767
  1526  000CDA  0012               	return		;funcret
  1527  000CDC                     __end_of_DelayPORXLCD:
  1528                           	opt callstack 0
  1529                           
  1530 ;; *************** function _BusyXLCD *****************
  1531 ;; Defined at:
  1532 ;;		line 227 in file "nxlcd.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      unsigned char 
  1539 ;; Registers used:
  1540 ;;		wreg, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    2
  1553 ;; This function calls:
  1554 ;;		_DelayFor18TCY
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;;		_OpenXLCD
  1558 ;;		_putsXLCD
  1559 ;;		_putrsXLCD
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text11
  1564  000BC4                     __ptext11:
  1565                           	opt callstack 0
  1566  000BC4                     _BusyXLCD:
  1567                           	opt callstack 27
  1568                           
  1569                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  1570                           
  1571                           ;incstack = 0
  1572  000BC4  848D               	bsf	3981,2,c	;volatile
  1573                           
  1574                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  1575  000BC6  908D               	bcf	3981,0,c	;volatile
  1576                           
  1577                           ;nxlcd.c: 231:         DelayFor18TCY();
  1578  000BC8  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1579                           
  1580                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  1581  000BCC  828D               	bsf	3981,1,c	;volatile
  1582                           
  1583                           ;nxlcd.c: 233:         DelayFor18TCY();
  1584  000BCE  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1585                           
  1586                           ;nxlcd.c: 249:         if(PORTD&0x80)
  1587  000BD2  AE83               	btfss	3971,7,c	;volatile
  1588  000BD4  D00A               	goto	l209
  1589                           
  1590                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  1591  000BD6  928D               	bcf	3981,1,c	;volatile
  1592                           
  1593                           ;nxlcd.c: 255:                 DelayFor18TCY();
  1594  000BD8  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1595                           
  1596                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  1597  000BDC  828D               	bsf	3981,1,c	;volatile
  1598                           
  1599                           ;nxlcd.c: 257:                 DelayFor18TCY();
  1600  000BDE  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1601                           
  1602                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  1603  000BE2  928D               	bcf	3981,1,c	;volatile
  1604                           
  1605                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  1606  000BE4  948D               	bcf	3981,2,c	;volatile
  1607                           
  1608                           ;nxlcd.c: 260:                 return 1;
  1609  000BE6  0E01               	movlw	1
  1610  000BE8  0012               	return	
  1611  000BEA                     l209:
  1612                           
  1613                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  1614  000BEA  928D               	bcf	3981,1,c	;volatile
  1615                           
  1616                           ;nxlcd.c: 265:                 DelayFor18TCY();
  1617  000BEC  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1618                           
  1619                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  1620  000BF0  828D               	bsf	3981,1,c	;volatile
  1621                           
  1622                           ;nxlcd.c: 267:                 DelayFor18TCY();
  1623  000BF2  EC6E  F006         	call	_DelayFor18TCY	;wreg free
  1624                           
  1625                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  1626  000BF6  928D               	bcf	3981,1,c	;volatile
  1627                           
  1628                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  1629  000BF8  948D               	bcf	3981,2,c	;volatile
  1630                           
  1631                           ;nxlcd.c: 270:                 return 0;
  1632  000BFA  0E00               	movlw	0
  1633  000BFC  0012               	return		;funcret
  1634  000BFE                     __end_of_BusyXLCD:
  1635                           	opt callstack 0
  1636                           
  1637 ;; *************** function _DelayFor18TCY *****************
  1638 ;; Defined at:
  1639 ;;		line 12 in file "nxlcd.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1656 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_SetDDRamAddr
  1664 ;;		_BusyXLCD
  1665 ;;		_WriteCmdXLCD
  1666 ;;		_WriteDataXLCD
  1667 ;;		_SetCGRamAddr
  1668 ;;		_ReadAddrXLCD
  1669 ;;		_ReadDataXLCD
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text12
  1674  000CDC                     __ptext12:
  1675                           	opt callstack 0
  1676  000CDC                     _DelayFor18TCY:
  1677                           	opt callstack 27
  1678                           
  1679                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  1680                           
  1681                           ;incstack = 0
  1682  000CDC  0E21               	movlw	33
  1683  000CDE                     u777:
  1684  000CDE  2EE8               	decfsz	wreg,f,c
  1685  000CE0  D7FE               	bra	u777
  1686  000CE2  F000               	nop	
  1687  000CE4  0012               	return		;funcret
  1688  000CE6                     __end_of_DelayFor18TCY:
  1689                           	opt callstack 0
  1690                           
  1691 ;; *************** function _config_interrupcao2 *****************
  1692 ;; Defined at:
  1693 ;;		line 200 in file "main.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		None
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text13
  1722  000CE6                     __ptext13:
  1723                           	opt callstack 0
  1724  000CE6                     _config_interrupcao2:
  1725                           	opt callstack 29
  1726                           
  1727                           ;main.c: 201:     INTCON3bits.INT2IE = 1;
  1728                           
  1729                           ;incstack = 0
  1730  000CE6  88F0               	bsf	4080,4,c	;volatile
  1731                           
  1732                           ;main.c: 202:     INTCON2bits.INTEDG2 = 0;
  1733  000CE8  98F1               	bcf	4081,4,c	;volatile
  1734                           
  1735                           ;main.c: 203:     INTCON3bits.INT2IF = 0;
  1736  000CEA  92F0               	bcf	4080,1,c	;volatile
  1737  000CEC  0012               	return		;funcret
  1738  000CEE                     __end_of_config_interrupcao2:
  1739                           	opt callstack 0
  1740                           
  1741 ;; *************** function _config_interrupcao1 *****************
  1742 ;; Defined at:
  1743 ;;		line 207 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		None
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text14
  1772  000CEE                     __ptext14:
  1773                           	opt callstack 0
  1774  000CEE                     _config_interrupcao1:
  1775                           	opt callstack 29
  1776                           
  1777                           ;main.c: 208:     INTCON3bits.INT1IE = 1;
  1778                           
  1779                           ;incstack = 0
  1780  000CEE  86F0               	bsf	4080,3,c	;volatile
  1781                           
  1782                           ;main.c: 209:     INTCON2bits.INTEDG1 = 0;
  1783  000CF0  9AF1               	bcf	4081,5,c	;volatile
  1784                           
  1785                           ;main.c: 210:     INTCON3bits.INT1IF = 0;
  1786  000CF2  90F0               	bcf	4080,0,c	;volatile
  1787  000CF4  0012               	return		;funcret
  1788  000CF6                     __end_of_config_interrupcao1:
  1789                           	opt callstack 0
  1790                           
  1791 ;; *************** function _config_interrupcao *****************
  1792 ;; Defined at:
  1793 ;;		line 220 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		None
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text15
  1822  000CF6                     __ptext15:
  1823                           	opt callstack 0
  1824  000CF6                     _config_interrupcao:
  1825                           	opt callstack 29
  1826                           
  1827                           ;main.c: 221:     RCONbits.IPEN = 1;
  1828                           
  1829                           ;incstack = 0
  1830  000CF6  8ED0               	bsf	4048,7,c	;volatile
  1831                           
  1832                           ;main.c: 222:     INTCONbits.GIEH = 1;
  1833  000CF8  8EF2               	bsf	4082,7,c	;volatile
  1834                           
  1835                           ;main.c: 223:     INTCONbits.GIEL = 1;
  1836  000CFA  8CF2               	bsf	4082,6,c	;volatile
  1837  000CFC  0012               	return		;funcret
  1838  000CFE                     __end_of_config_interrupcao:
  1839                           	opt callstack 0
  1840                           
  1841 ;; *************** function _interrupcao *****************
  1842 ;; Defined at:
  1843 ;;		line 163 in file "main.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		None
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		Interrupt level 2
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	intcode
  1871  000008                     __pintcode:
  1872                           	opt callstack 0
  1873  000008                     _interrupcao:
  1874                           	opt callstack 26
  1875                           
  1876                           ;incstack = 0
  1877  000008  8232               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1878  00000A  ED55  F006         	call	int_func,f	;refresh shadow registers
  1879                           
  1880                           	psect	intcode_body
  1881  000CAA                     __pintcode_body:
  1882                           	opt callstack 26
  1883  000CAA                     int_func:
  1884                           	opt callstack 26
  1885  000CAA  0006               	pop		; remove dummy address from shadow register refresh
  1886                           
  1887                           ;main.c: 164:     if (INTCON3bits.INT1IF) {
  1888  000CAC  A0F0               	btfss	4080,0,c	;volatile
  1889  000CAE  D002               	goto	i2l123
  1890                           
  1891                           ;main.c: 166:         INTCON3bits.INT1IF = 0;
  1892  000CB0  90F0               	bcf	4080,0,c	;volatile
  1893                           
  1894                           ;main.c: 167:     } else if (INTCON3bits.INT2IF) {
  1895  000CB2  D002               	goto	i2l126
  1896  000CB4                     i2l123:
  1897  000CB4  B2F0               	btfsc	4080,1,c	;volatile
  1898                           
  1899                           ;main.c: 169:         INTCON3bits.INT2IF = 0;
  1900  000CB6  92F0               	bcf	4080,1,c	;volatile
  1901  000CB8                     i2l126:
  1902  000CB8  9232               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1903  000CBA  0011               	retfie		f
  1904  000CBC                     __end_of_interrupcao:
  1905                           	opt callstack 0
  1906                           
  1907                           	psect	rparam
  1908  0000                     
  1909                           	psect	temp
  1910  000032                     btemp:
  1911                           	opt callstack 0
  1912  000032                     	ds	1
  1913  0000                     int$flags	set	btemp
  1914  0000                     wtemp8	set	btemp+1
  1915  0000                     ttemp5	set	btemp+1
  1916  0000                     ttemp6	set	btemp+4
  1917  0000                     ttemp7	set	btemp+8
  1918                           tosu	equ	0xFFF
  1919                           tosh	equ	0xFFE
  1920                           tosl	equ	0xFFD
  1921                           stkptr	equ	0xFFC
  1922                           pclatu	equ	0xFFB
  1923                           pclath	equ	0xFFA
  1924                           pcl	equ	0xFF9
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           prodh	equ	0xFF4
  1930                           prodl	equ	0xFF3
  1931                           indf0	equ	0xFEF
  1932                           postinc0	equ	0xFEE
  1933                           postdec0	equ	0xFED
  1934                           preinc0	equ	0xFEC
  1935                           plusw0	equ	0xFEB
  1936                           fsr0h	equ	0xFEA
  1937                           fsr0l	equ	0xFE9
  1938                           wreg	equ	0xFE8
  1939                           indf1	equ	0xFE7
  1940                           postinc1	equ	0xFE6
  1941                           postdec1	equ	0xFE5
  1942                           preinc1	equ	0xFE4
  1943                           plusw1	equ	0xFE3
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           bsr	equ	0xFE0
  1947                           indf2	equ	0xFDF
  1948                           postinc2	equ	0xFDE
  1949                           postdec2	equ	0xFDD
  1950                           preinc2	equ	0xFDC
  1951                           plusw2	equ	0xFDB
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_tecladoMatricial
    _putsXLCD->_WriteDataXLCD
    _lcd->_WriteCmdXLCD
    _lcd->_WriteDataXLCD
    _config_ldc->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _interrupcao in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     986
                                             28 COMRAM     5     5      0
                           _BusyXLCD
                       _WriteCmdXLCD
                 _config_interrupcao
                _config_interrupcao1
                _config_interrupcao2
                         _config_ldc
                                _lcd
                           _putsXLCD
                   _tecladoMatricial
 ---------------------------------------------------------------------------------
 (1) _tecladoMatricial                                    28    26      2     406
                                              0 COMRAM    28    26      2
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     151
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 18    16      2     204
                                              1 COMRAM    18    16      2
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _config_ldc                                           1     1      0     105
                                              2 COMRAM     1     1      0
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      75
                                              1 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      30
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao2                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao1                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
     _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _config_interrupcao
   _config_interrupcao1
   _config_interrupcao2
   _config_ldc
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _lcd
     _WriteCmdXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _tecladoMatricial

 _interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      20        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 31 17:19:04 2022

                          l43 086E                            l61 08D4                            l79 093A  
                          l97 09A0                            u20 09F0                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000             ?_tecladoMatricial 0001                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000         tecladoMatricial@tecla 001B                  __CFG_CP3$OFF 000000  
                         l209 0BEA                  __CFG_CPB$OFF 000000                           u431 0B92  
                         u440 0BA4                  __CFG_CPD$OFF 000000                           u710 0A9E  
                         u737 0AC2                           u747 0C44                           u757 0C9E  
                         u767 0CD2                           u777 0CDE                  __CFG_BOR$OFF 000000  
          ??_tecladoMatricial 0003                           _lcd 0B88         __size_of_WriteCmdXLCD 003E  
                         wreg 000FE8                  __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000  
                __CFG_WDT$OFF 000000                          l1061 09E6                          l1071 0A10  
                        l1083 0A40                          l1075 0A20                          l1067 0A00  
                        l1411 0834                          l1501 0980                          l1421 0860  
                        l1413 083C                          l1079 0A30                          l1511 0C00  
                        l1503 098A                          l1407 0822                          l1415 0846  
                        l1505 0992                          l1441 08A2                          l1417 084E  
                        l1409 082A                          l1435 0888                          l1443 08AC  
                        l1419 0858                          l1517 0C1E                          l1445 08B4  
                        l1437 0890                          l1541 0A84                          l1463 08EE  
                        l1471 0912                          l1439 089A                          l1447 08BE  
                        l1473 091A                          l1465 08F6                          l1449 08C6  
                        l1491 0954                          l1467 0900                          l1475 0924  
                        l1547 0AAA                          l1493 095C                          l1477 092C  
                        l1469 0908                          l1495 0966                          l1497 096E  
                        ?_lcd 0002                          l1499 0978                          STR_1 0801  
                        _RBPU 007F8F                          _main 0A52                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0032  
      __size_of_WriteDataXLCD 003E                          start 000E                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000                         ??_lcd 0004  
                _WriteCmdXLCD 0B4A                 __CFG_PLLDIV$1 000000                 ?_SetDDRamAddr 0001  
                       ?_main 0001                         i2l123 0CB4                         i2l126 0CB8  
                       _PORTD 000F83                 __CFG_USBDIV$1 000000                         _TRISD 000F95  
 __size_of_config_interrupcao 0008                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       tablat 000FF5                         plusw1 000FE3                         plusw2 000FDB  
                       ttemp5 0033                         ttemp6 0036                         ttemp7 003A  
                       status 000FD8                         wtemp8 0033                __CFG_ICPRT$OFF 000000  
             __initialization 0C66                  ?_interrupcao 0001                  __end_of_main 0ACC  
            __end_of_BusyXLCD 0BFE            __size_of_DelayXLCD 0012         __size_of_DelayPORXLCD 0010  
              ??_SetDDRamAddr 0001              __end_of_OpenXLCD 0A52                        ??_main 001D  
               __activetblptr 000001                 _WriteDataXLCD 0B0C               __CFG_CCP2MX$OFF 000000  
                      _ADCON1 000FC1  __size_of_config_interrupcao1 0008  __size_of_config_interrupcao2 0008  
                _DelayPORXLCD 0CCC                __CFG_XINST$OFF 000000          _tecladoMatricial$480 000F  
        _tecladoMatricial$481 0011          _tecladoMatricial$482 0013          _tecladoMatricial$474 0003  
        _tecladoMatricial$483 0015          _tecladoMatricial$475 0005          _tecladoMatricial$484 0017  
        _tecladoMatricial$476 0007          _tecladoMatricial$485 0019          _tecladoMatricial$477 0009  
        _tecladoMatricial$478 000B          _tecladoMatricial$479 000D                ?_WriteDataXLCD 0001  
                __pdataCOMRAM 0022                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8              __end_of_putsXLCD 0C32  
           main@teclaAnterior 001E             __end_of_DelayXLCD 0CAA                    __accesstop 0060  
     __end_of__initialization 0C86               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
              __pcstackCOMRAM 0001        __size_of_DelayFor18TCY 000A                     ?_BusyXLCD 0001  
   __size_of_tecladoMatricial 01A2               WriteCmdXLCD@cmd 0001          __end_of_SetDDRamAddr 0B0C  
                   ?_OpenXLCD 0001             WriteDataXLCD@data 0001          __size_of_interrupcao 0CB4  
             ??_WriteDataXLCD 0001                    _config_ldc 0C32                    ??_BusyXLCD 0001  
             __CFG_VREGEN$OFF 000000                    ??_OpenXLCD 0002                       __Hparam 0000  
                     __Lparam 0000                 _DelayFor18TCY 0CDC                     ?_putsXLCD 0002  
                __psmallconst 0800               __CFG_STVREN$OFF 000000                       __pcinit 0C66  
                     __ramtop 0800                       __ptext0 0A52                       __ptext1 0808  
                     __ptext2 0BFE                       __ptext3 0B88                       __ptext4 0B0C  
  __end_of_config_interrupcao 0CFE                       __ptext5 0C32                       __ptext6 09AA  
                     __ptext7 0B4A                       __ptext8 0ACC                       __ptext9 0C98  
                   _T0CONbits 000FD5           _config_interrupcao1 0CEE           _config_interrupcao2 0CE6  
                __size_of_lcd 003C                __pintcode_body 0CAA          end_of_initialization 0C86  
                     int_func 0CAA                    lcd@teclado 0004          ?_config_interrupcao1 0001  
        ?_config_interrupcao2 0001                ?_DelayFor18TCY 0001                       postdec1 000FE5  
                     postinc0 000FEE                    ??_putsXLCD 0004                     _PORTBbits 000F81  
                   _PORTDbits 000F83                   ?_config_ldc 0001                     _TRISBbits 000F93  
                   _TRISDbits 000F95                     _TRISEbits 000F96         __size_of_SetDDRamAddr 0040  
            _tecladoMatricial 0808         ??_config_interrupcao1 0001         ??_config_interrupcao2 0001  
                   _DelayXLCD 0C98                 __pidataCOMRAM 0CBC                  _SetDDRamAddr 0ACC  
          SetDDRamAddr@DDaddr 0001           start_initialization 0C66                   __end_of_lcd 0BC4  
           __size_of_BusyXLCD 003A                    ?_DelayXLCD 0001               ??_DelayFor18TCY 0001  
           __size_of_OpenXLCD 00A8           __size_of_config_ldc 0034                 ?_WriteCmdXLCD 0001  
            __CFG_LPT1OSC$OFF 000000                putsXLCD@buffer 0002                 ??_interrupcao 0001  
                   __pintcode 0008                ??_WriteCmdXLCD 0001             __size_of_putsXLCD 0034  
       __end_of_WriteDataXLCD 0B4A                   __smallconst 0800            _config_interrupcao 0CF6  
                    _LATEbits 000F8D                   ??_DelayXLCD 0001                 ?_DelayPORXLCD 0001  
         ?_config_interrupcao 0001               OpenXLCD@lcdtype 0002                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000      __end_of_tecladoMatricial 09AA           __end_of_interrupcao 0CBC  
        ??_config_interrupcao 0001                     main@tecla 0020                  ??_config_ldc 0003  
                 _INTCON2bits 000FF1                   _INTCON3bits 000FF0                     copy_data0 0C7A  
                    _BusyXLCD 0BC4                ??_DelayPORXLCD 0001                      _OpenXLCD 09AA  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 0800  
          __end_of_config_ldc 0C66                      __ptext10 0CCC                      __ptext11 0BC4  
                    __ptext12 0CDC                      __ptext13 0CE6                      __ptext14 0CEE  
                    __ptext15 0CF6   __end_of_config_interrupcao1 0CF6   __end_of_config_interrupcao2 0CEE  
                    lcd@F3182 0022          __end_of_WriteCmdXLCD 0B88                 __size_of_main 007A  
                    lcd@tecla 0002                   _interrupcao 0008                      int$flags 0032  
                    _putsXLCD 0BFE         __CFG_CPUDIV$OSC1_PLL2 000000                    _INTCONbits 000FF2  
                    intlevel2 0000         __end_of_DelayFor18TCY 0CE6          __end_of_DelayPORXLCD 0CDC  
