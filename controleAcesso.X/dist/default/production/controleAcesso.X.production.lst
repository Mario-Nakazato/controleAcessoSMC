

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 31 21:54:23 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0011A0                     __pidataCOMRAM:
    79                           	opt callstack 0
    80                           
    81                           ;initializer for lcd@F3185
    82  0011A0  31                 	db	49
    83  0011A1  32                 	db	50
    84  0011A2  33                 	db	51
    85  0011A3  41                 	db	65
    86  0011A4  34                 	db	52
    87  0011A5  35                 	db	53
    88  0011A6  36                 	db	54
    89  0011A7  42                 	db	66
    90  0011A8  37                 	db	55
    91  0011A9  38                 	db	56
    92  0011AA  39                 	db	57
    93  0011AB  43                 	db	67
    94  0011AC  2A                 	db	42
    95  0011AD  30                 	db	48
    96  0011AE  23                 	db	35
    97  0011AF  44                 	db	68
    98                           
    99                           ;initializer for _cursor
   100  0011B0  00C1               	dw	193
   101  0000                     _TMR0	set	4054
   102  0000                     _LATEbits	set	3981
   103  0000                     _TRISEbits	set	3990
   104  0000                     _TRISD	set	3989
   105  0000                     _PORTD	set	3971
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PIR2bits	set	4001
   108  0000                     _EECON2	set	4007
   109  0000                     _EECON1bits	set	4006
   110  0000                     _EEDATA	set	4008
   111  0000                     _EEADR	set	4009
   112  0000                     _RCONbits	set	4048
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _T0CONbits	set	4053
   115  0000                     _INTCONbits	set	4082
   116  0000                     _INTCON3bits	set	4080
   117  0000                     _TRISDbits	set	3989
   118  0000                     _TRISBbits	set	3987
   119  0000                     _ADCON1	set	4033
   120  0000                     _PORTDbits	set	3971
   121  0000                     _PORTBbits	set	3969
   122  0000                     _RBPU	set	32655
   123                           
   124                           	psect	smallconst
   125  000800                     __psmallconst:
   126                           	opt callstack 0
   127  000800  00                 	db	0
   128  000801                     STR_2:
   129  000801  46                 	db	70	;'F'
   130  000802  65                 	db	101	;'e'
   131  000803  63                 	db	99	;'c'
   132  000804  68                 	db	104	;'h'
   133  000805  61                 	db	97	;'a'
   134  000806  64                 	db	100	;'d'
   135  000807  75                 	db	117	;'u'
   136  000808  72                 	db	114	;'r'
   137  000809  61                 	db	97	;'a'
   138  00080A  00                 	db	0
   139  00080B                     STR_1:
   140  00080B  3A                 	db	58	;':'
   141  00080C  00                 	db	0
   142                           
   143                           ; #config settings
   144  00080D  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	cinit
   147  0010AA                     __pcinit:
   148                           	opt callstack 0
   149  0010AA                     start_initialization:
   150                           	opt callstack 0
   151  0010AA                     __initialization:
   152                           	opt callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (18 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156  0010AA  0EA0               	movlw	low __pidataCOMRAM
   157  0010AC  6EF6               	movwf	tblptrl,c
   158  0010AE  0E11               	movlw	high __pidataCOMRAM
   159  0010B0  6EF7               	movwf	tblptrh,c
   160  0010B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161  0010B4  6EF8               	movwf	tblptru,c
   162  0010B6  EE00  F04A         	lfsr	0,__pdataCOMRAM
   163  0010BA  EE10 F012          	lfsr	1,18
   164  0010BE                     copy_data0:
   165  0010BE  0009               	tblrd		*+
   166  0010C0  CFF5 FFEE          	movff	tablat,postinc0
   167  0010C4  50E5               	movf	postdec1,w,c
   168  0010C6  50E1               	movf	fsr1l,w,c
   169  0010C8  E1FA               	bnz	copy_data0
   170  0010CA                     end_of_initialization:
   171                           	opt callstack 0
   172  0010CA                     __end_of__initialization:
   173                           	opt callstack 0
   174  0010CA  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   175  0010CC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   176  0010CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  0010D0  6EF8               	movwf	tblptru,c
   178  0010D2  0100               	movlb	0
   179  0010D4  EF07  F004         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	dataCOMRAM
   182  00004A                     __pdataCOMRAM:
   183                           	opt callstack 0
   184  00004A                     lcd@F3185:
   185                           	opt callstack 0
   186  00004A                     	ds	16
   187  00005A                     _cursor:
   188                           	opt callstack 0
   189  00005A                     	ds	2
   190                           
   191                           	psect	cstackCOMRAM
   192  000001                     __pcstackCOMRAM:
   193                           	opt callstack 0
   194  000001                     ??_varreduraTeclado:
   195  000001                     
   196                           ; 1 bytes @ 0x0
   197  000001                     	ds	1
   198  000002                     ??_DelayPORXLCD:
   199  000002                     ??_DelayXLCD:
   200  000002                     ?_isspace:
   201                           	opt callstack 0
   202  000002                     ?_isdigit:
   203                           	opt callstack 0
   204  000002                     ?_tecladoMatricial:
   205                           	opt callstack 0
   206  000002                     ?___wmul:
   207                           	opt callstack 0
   208  000002                     SetDDRamAddr@DDaddr:
   209                           	opt callstack 0
   210  000002                     WriteCmdXLCD@cmd:
   211                           	opt callstack 0
   212  000002                     WriteDataXLCD@data:
   213                           	opt callstack 0
   214  000002                     EEPROM_Ler@dir:
   215                           	opt callstack 0
   216  000002                     ___wmul@multiplier:
   217                           	opt callstack 0
   218  000002                     isdigit@c:
   219                           	opt callstack 0
   220  000002                     isspace@c:
   221                           	opt callstack 0
   222                           
   223                           ; 2 bytes @ 0x1
   224  000002                     	ds	1
   225  000003                     OpenXLCD@lcdtype:
   226                           	opt callstack 0
   227  000003                     lcd@tecla:
   228                           	opt callstack 0
   229  000003                     putsXLCD@buffer:
   230                           	opt callstack 0
   231  000003                     putrsXLCD@buffer:
   232                           	opt callstack 0
   233                           
   234                           ; 2 bytes @ 0x2
   235  000003                     	ds	1
   236  000004                     ??_isspace:
   237  000004                     ??_isdigit:
   238  000004                     ?_verificaMemoria:
   239                           	opt callstack 0
   240  000004                     _tecladoMatricial$624:
   241                           	opt callstack 0
   242  000004                     ___wmul@multiplicand:
   243                           	opt callstack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000004                     	ds	1
   247  000005                     ??_lcd:
   248  000005                     lcdTxt@txt:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x4
   252  000005                     	ds	1
   253  000006                     _tecladoMatricial$625:
   254                           	opt callstack 0
   255  000006                     ___wmul@product:
   256                           	opt callstack 0
   257  000006                     lcd@teclado:
   258                           	opt callstack 0
   259                           
   260                           ; 16 bytes @ 0x5
   261  000006                     	ds	1
   262  000007                     ??_lcdTxt:
   263                           
   264                           ; 1 bytes @ 0x6
   265  000007                     	ds	1
   266  000008                     _isspace$1327:
   267                           	opt callstack 0
   268  000008                     _tecladoMatricial$626:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x7
   272  000008                     	ds	1
   273  000009                     ?_atoi:
   274                           	opt callstack 0
   275  000009                     atoi@s:
   276                           	opt callstack 0
   277                           
   278                           ; 3 bytes @ 0x8
   279  000009                     	ds	1
   280  00000A                     _tecladoMatricial$627:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x9
   284  00000A                     	ds	2
   285  00000C                     ??_atoi:
   286  00000C                     _tecladoMatricial$628:
   287                           	opt callstack 0
   288                           
   289                           ; 2 bytes @ 0xB
   290  00000C                     	ds	2
   291  00000E                     _tecladoMatricial$629:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0xD
   295  00000E                     	ds	2
   296  000010                     _tecladoMatricial$630:
   297                           	opt callstack 0
   298  000010                     atoi@neg:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0xF
   302  000010                     	ds	2
   303  000012                     _tecladoMatricial$631:
   304                           	opt callstack 0
   305  000012                     _atoi$1309:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x11
   309  000012                     	ds	2
   310  000014                     _tecladoMatricial$632:
   311                           	opt callstack 0
   312  000014                     _atoi$1311:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x13
   316  000014                     	ds	2
   317  000016                     _atoi$1310:
   318                           	opt callstack 0
   319  000016                     _tecladoMatricial$633:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x15
   323  000016                     	ds	1
   324  000017                     atoi@n:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x16
   328  000017                     	ds	1
   329  000018                     _tecladoMatricial$634:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x17
   333  000018                     	ds	2
   334  00001A                     _tecladoMatricial$635:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x19
   338  00001A                     	ds	2
   339  00001C                     tecladoMatricial@tecla:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x1B
   343  00001C                     	ds	2
   344  00001E                     ??_main:
   345                           
   346                           ; 1 bytes @ 0x1D
   347  00001E                     	ds	4
   348  000022                     main@senha:
   349                           	opt callstack 0
   350                           
   351                           ; 8 bytes @ 0x21
   352  000022                     	ds	8
   353  00002A                     main@senhaAtual:
   354                           	opt callstack 0
   355                           
   356                           ; 8 bytes @ 0x29
   357  00002A                     	ds	8
   358  000032                     main@senhaAdmin:
   359                           	opt callstack 0
   360                           
   361                           ; 8 bytes @ 0x31
   362  000032                     	ds	8
   363  00003A                     main@tecla:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x39
   367  00003A                     	ds	2
   368  00003C                     main@ctrl:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x3B
   372  00003C                     	ds	2
   373  00003E                     main@i_763:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x3D
   377  00003E                     	ds	2
   378  000040                     main@i_760:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x3F
   382  000040                     	ds	2
   383  000042                     main@i_762:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x41
   387  000042                     	ds	2
   388  000044                     main@i_766:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x43
   392  000044                     	ds	2
   393  000046                     main@i_767:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x45
   397  000046                     	ds	2
   398  000048                     main@i:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x47
   402  000048                     	ds	2
   403                           
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 290 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  i               2   69[COMRAM] int 
   414 ;;  i               2   67[COMRAM] int 
   415 ;;  i               2   61[COMRAM] int 
   416 ;;  i               2   65[COMRAM] int 
   417 ;;  i               2   63[COMRAM] int 
   418 ;;  i               2   71[COMRAM] int 
   419 ;;  senhaAdmin      8   49[COMRAM] int [4]
   420 ;;  senhaAtual      8   41[COMRAM] int [4]
   421 ;;  senha           8   33[COMRAM] int [4]
   422 ;;  ctrl            2   59[COMRAM] int 
   423 ;;  tecla           2   57[COMRAM] int 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   433 ;;      Params:         0       0       0       0       0       0       0       0       0
   434 ;;      Locals:        40       0       0       0       0       0       0       0       0
   435 ;;      Temps:          4       0       0       0       0       0       0       0       0
   436 ;;      Totals:        44       0       0       0       0       0       0       0       0
   437 ;;Total ram usage:       44 bytes
   438 ;; Hardware stack levels required when called:    7
   439 ;; This function calls:
   440 ;;		_EEPROM_Ler
   441 ;;		_atoi
   442 ;;		_config_interrupcao
   443 ;;		_config_ldc
   444 ;;		_config_led
   445 ;;		_config_teclado
   446 ;;		_config_timer0
   447 ;;		_lcd
   448 ;;		_tecladoMatricial
   449 ;;		_verificaMemoria
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text0
   456  00080E                     __ptext0:
   457                           	opt callstack 0
   458  00080E                     _main:
   459                           	opt callstack 24
   460                           
   461                           ;main.c: 292:     config_interrupcao();
   462                           
   463                           ;incstack = 0
   464  00080E  ECF6  F008         	call	_config_interrupcao	;wreg free
   465                           
   466                           ;main.c: 296:     config_timer0();
   467  000812  ECB6  F008         	call	_config_timer0	;wreg free
   468                           
   469                           ;main.c: 297:     config_led();
   470  000816  ECFA  F008         	call	_config_led	;wreg free
   471                           
   472                           ;main.c: 298:     config_teclado();
   473  00081A  ECA6  F008         	call	_config_teclado	;wreg free
   474                           
   475                           ;main.c: 299:     config_ldc();
   476  00081E  ECC3  F008         	call	_config_ldc	;wreg free
   477                           
   478                           ;main.c: 301:     int tecla, senha[4], ctrl, senhaAtual[4], senhaAdmin[4];;main.c: 304: 
      +                              if(verificaMemoria()){
   479  000822  EC80  F008         	call	_verificaMemoria	;wreg free
   480  000826  5004               	movf	?_verificaMemoria,w,c
   481  000828  1005               	iorwf	?_verificaMemoria+1,w,c
   482  00082A  B4D8               	btfsc	status,2,c
   483  00082C  D02F               	goto	l1971
   484                           
   485                           ;main.c: 305:         for (int i = 0;i<4;i++){
   486  00082E  0E00               	movlw	0
   487  000830  6E49               	movwf	main@i+1,c
   488  000832  0E00               	movlw	0
   489  000834  6E48               	movwf	main@i,c
   490  000836                     l1965:
   491                           
   492                           ;main.c: 306:             senhaAtual[i] = 0;
   493  000836  90D8               	bcf	status,0,c
   494  000838  3448               	rlcf	main@i,w,c
   495  00083A  6ED9               	movwf	fsr2l,c
   496  00083C  3449               	rlcf	main@i+1,w,c
   497  00083E  6EDA               	movwf	fsr2h,c
   498  000840  0E2A               	movlw	low main@senhaAtual
   499  000842  26D9               	addwf	fsr2l,f,c
   500  000844  0E00               	movlw	high main@senhaAtual
   501  000846  22DA               	addwfc	fsr2h,f,c
   502  000848  0E00               	movlw	0
   503  00084A  6EDE               	movwf	postinc2,c
   504  00084C  0E00               	movlw	0
   505  00084E  6EDD               	movwf	postdec2,c
   506                           
   507                           ;main.c: 307:             senhaAdmin[i] = i+1;
   508  000850  0E01               	movlw	1
   509  000852  2448               	addwf	main@i,w,c
   510  000854  6E1E               	movwf	??_main& (0+255),c
   511  000856  0E00               	movlw	0
   512  000858  2049               	addwfc	main@i+1,w,c
   513  00085A  6E1F               	movwf	(??_main+1)& (0+255),c
   514  00085C  90D8               	bcf	status,0,c
   515  00085E  3448               	rlcf	main@i,w,c
   516  000860  6ED9               	movwf	fsr2l,c
   517  000862  3449               	rlcf	main@i+1,w,c
   518  000864  6EDA               	movwf	fsr2h,c
   519  000866  0E32               	movlw	low main@senhaAdmin
   520  000868  26D9               	addwf	fsr2l,f,c
   521  00086A  0E00               	movlw	high main@senhaAdmin
   522  00086C  22DA               	addwfc	fsr2h,f,c
   523  00086E  C01E  FFDE         	movff	??_main,postinc2
   524  000872  C01F  FFDD         	movff	??_main+1,postdec2
   525                           
   526                           ;main.c: 308:         }
   527  000876  4A48               	infsnz	main@i,f,c
   528  000878  2A49               	incf	main@i+1,f,c
   529  00087A  BE49               	btfsc	main@i+1,7,c
   530  00087C  D7DC               	goto	l1965
   531  00087E  5049               	movf	main@i+1,w,c
   532  000880  E15D               	bnz	l1995
   533  000882  0E04               	movlw	4
   534  000884  5C48               	subwf	main@i,w,c
   535  000886  B0D8               	btfsc	status,0,c
   536  000888  D059               	goto	u1140
   537  00088A  D7D5               	goto	l1965
   538  00088C                     l1971:
   539                           
   540                           ;main.c: 310:         for (int i = 1;i<5;i++){
   541  00088C  0E00               	movlw	0
   542  00088E  6E41               	movwf	main@i_760+1,c
   543  000890  0E01               	movlw	1
   544  000892  6E40               	movwf	main@i_760,c
   545  000894                     l1977:
   546                           
   547                           ;main.c: 311:             senhaAtual[i] = atoi(EEPROM_Ler(i));
   548  000894  C040  F002         	movff	main@i_760,EEPROM_Ler@dir
   549  000898  C041  F003         	movff	main@i_760+1,EEPROM_Ler@dir+1
   550  00089C  ECEA  F008         	call	_EEPROM_Ler	;wreg free
   551  0008A0  6E1E               	movwf	??_main& (0+255),c
   552  0008A2  6A1F               	clrf	(??_main+1)& (0+255),c
   553  0008A4  6A20               	clrf	(??_main+2)& (0+255),c
   554  0008A6  C01E  F009         	movff	??_main,atoi@s
   555  0008AA  C01F  F00A         	movff	??_main+1,atoi@s+1
   556  0008AE  C020  F00B         	movff	??_main+2,atoi@s+2
   557  0008B2  ECE6  F005         	call	_atoi	;wreg free
   558  0008B6  90D8               	bcf	status,0,c
   559  0008B8  3440               	rlcf	main@i_760,w,c
   560  0008BA  6ED9               	movwf	fsr2l,c
   561  0008BC  3441               	rlcf	main@i_760+1,w,c
   562  0008BE  6EDA               	movwf	fsr2h,c
   563  0008C0  0E2A               	movlw	low main@senhaAtual
   564  0008C2  26D9               	addwf	fsr2l,f,c
   565  0008C4  0E00               	movlw	high main@senhaAtual
   566  0008C6  22DA               	addwfc	fsr2h,f,c
   567  0008C8  C009  FFDE         	movff	?_atoi,postinc2
   568  0008CC  C00A  FFDD         	movff	?_atoi+1,postdec2
   569                           
   570                           ;main.c: 312:         }
   571  0008D0  4A40               	infsnz	main@i_760,f,c
   572  0008D2  2A41               	incf	main@i_760+1,f,c
   573  0008D4  BE41               	btfsc	main@i_760+1,7,c
   574  0008D6  D7DE               	goto	l1977
   575  0008D8  5041               	movf	main@i_760+1,w,c
   576  0008DA  E104               	bnz	u1130
   577  0008DC  0E05               	movlw	5
   578  0008DE  5C40               	subwf	main@i_760,w,c
   579  0008E0  A0D8               	btfss	status,0,c
   580  0008E2  D7D8               	goto	l1977
   581  0008E4                     u1130:
   582                           
   583                           ;main.c: 313:         for (int i = 5;i<9;i++){
   584  0008E4  0E00               	movlw	0
   585  0008E6  6E43               	movwf	main@i_762+1,c
   586  0008E8  0E05               	movlw	5
   587  0008EA  6E42               	movwf	main@i_762,c
   588  0008EC                     l1989:
   589                           
   590                           ;main.c: 314:             senhaAdmin[i] = atoi(EEPROM_Ler(i));
   591  0008EC  C042  F002         	movff	main@i_762,EEPROM_Ler@dir
   592  0008F0  C043  F003         	movff	main@i_762+1,EEPROM_Ler@dir+1
   593  0008F4  ECEA  F008         	call	_EEPROM_Ler	;wreg free
   594  0008F8  6E1E               	movwf	??_main& (0+255),c
   595  0008FA  6A1F               	clrf	(??_main+1)& (0+255),c
   596  0008FC  6A20               	clrf	(??_main+2)& (0+255),c
   597  0008FE  C01E  F009         	movff	??_main,atoi@s
   598  000902  C01F  F00A         	movff	??_main+1,atoi@s+1
   599  000906  C020  F00B         	movff	??_main+2,atoi@s+2
   600  00090A  ECE6  F005         	call	_atoi	;wreg free
   601  00090E  90D8               	bcf	status,0,c
   602  000910  3442               	rlcf	main@i_762,w,c
   603  000912  6ED9               	movwf	fsr2l,c
   604  000914  3443               	rlcf	main@i_762+1,w,c
   605  000916  6EDA               	movwf	fsr2h,c
   606  000918  0E32               	movlw	low main@senhaAdmin
   607  00091A  26D9               	addwf	fsr2l,f,c
   608  00091C  0E00               	movlw	high main@senhaAdmin
   609  00091E  22DA               	addwfc	fsr2h,f,c
   610  000920  C009  FFDE         	movff	?_atoi,postinc2
   611  000924  C00A  FFDD         	movff	?_atoi+1,postdec2
   612                           
   613                           ;main.c: 315:         }
   614  000928  4A42               	infsnz	main@i_762,f,c
   615  00092A  2A43               	incf	main@i_762+1,f,c
   616  00092C  BE43               	btfsc	main@i_762+1,7,c
   617  00092E  D7DE               	goto	l1989
   618  000930  5043               	movf	main@i_762+1,w,c
   619  000932  E104               	bnz	l1995
   620  000934  0E09               	movlw	9
   621  000936  5C42               	subwf	main@i_762,w,c
   622  000938  A0D8               	btfss	status,0,c
   623  00093A  D7D8               	goto	l1989
   624  00093C                     u1140:
   625  00093C                     l1995:
   626                           
   627                           ;main.c: 322:         for(int i =0; i<4;i++){
   628  00093C  0E00               	movlw	0
   629  00093E  6E3F               	movwf	main@i_763+1,c
   630  000940  0E00               	movlw	0
   631  000942  6E3E               	movwf	main@i_763,c
   632  000944                     l2001:
   633                           
   634                           ;main.c: 323:             tecla = tecladoMatricial();
   635  000944  EC31  F005         	call	_tecladoMatricial	;wreg free
   636  000948  C002  F03A         	movff	?_tecladoMatricial,main@tecla
   637  00094C  C003  F03B         	movff	?_tecladoMatricial+1,main@tecla+1
   638                           
   639                           ;main.c: 324:             lcd(tecla);
   640  000950  C03A  F003         	movff	main@tecla,lcd@tecla
   641  000954  C03B  F004         	movff	main@tecla+1,lcd@tecla+1
   642  000958  ECEC  F006         	call	_lcd	;wreg free
   643                           
   644                           ;main.c: 325:             senha[i]=tecla;
   645  00095C  90D8               	bcf	status,0,c
   646  00095E  343E               	rlcf	main@i_763,w,c
   647  000960  6ED9               	movwf	fsr2l,c
   648  000962  343F               	rlcf	main@i_763+1,w,c
   649  000964  6EDA               	movwf	fsr2h,c
   650  000966  0E22               	movlw	low main@senha
   651  000968  26D9               	addwf	fsr2l,f,c
   652  00096A  0E00               	movlw	high main@senha
   653  00096C  22DA               	addwfc	fsr2h,f,c
   654  00096E  C03A  FFDE         	movff	main@tecla,postinc2
   655  000972  C03B  FFDD         	movff	main@tecla+1,postdec2
   656                           
   657                           ;main.c: 326:         }
   658  000976  4A3E               	infsnz	main@i_763,f,c
   659  000978  2A3F               	incf	main@i_763+1,f,c
   660  00097A  BE3F               	btfsc	main@i_763+1,7,c
   661  00097C  D7E3               	goto	l2001
   662  00097E  503F               	movf	main@i_763+1,w,c
   663  000980  E104               	bnz	u1150
   664  000982  0E04               	movlw	4
   665  000984  5C3E               	subwf	main@i_763,w,c
   666  000986  A0D8               	btfss	status,0,c
   667  000988  D7DD               	goto	l2001
   668  00098A                     u1150:
   669                           
   670                           ;main.c: 328:         ctrl = 1;
   671  00098A  0E00               	movlw	0
   672  00098C  6E3D               	movwf	main@ctrl+1,c
   673  00098E  0E01               	movlw	1
   674  000990  6E3C               	movwf	main@ctrl,c
   675                           
   676                           ;main.c: 329:         for(int i=0;i<4;i++){
   677  000992  0E00               	movlw	0
   678  000994  6E45               	movwf	main@i_766+1,c
   679  000996  0E00               	movlw	0
   680  000998  6E44               	movwf	main@i_766,c
   681  00099A                     l2017:
   682                           
   683                           ;main.c: 330:             if(senha[i] != senhaAtual[i]){
   684  00099A  90D8               	bcf	status,0,c
   685  00099C  3444               	rlcf	main@i_766,w,c
   686  00099E  6ED9               	movwf	fsr2l,c
   687  0009A0  3445               	rlcf	main@i_766+1,w,c
   688  0009A2  6EDA               	movwf	fsr2h,c
   689  0009A4  0E2A               	movlw	low main@senhaAtual
   690  0009A6  26D9               	addwf	fsr2l,f,c
   691  0009A8  0E00               	movlw	high main@senhaAtual
   692  0009AA  22DA               	addwfc	fsr2h,f,c
   693  0009AC  90D8               	bcf	status,0,c
   694  0009AE  3444               	rlcf	main@i_766,w,c
   695  0009B0  6EE1               	movwf	fsr1l,c
   696  0009B2  3445               	rlcf	main@i_766+1,w,c
   697  0009B4  6EE2               	movwf	fsr1h,c
   698  0009B6  0E22               	movlw	low main@senha
   699  0009B8  26E1               	addwf	fsr1l,f,c
   700  0009BA  0E00               	movlw	high main@senha
   701  0009BC  22E2               	addwfc	fsr1h,f,c
   702  0009BE  50DE               	movf	postinc2,w,c
   703  0009C0  18E6               	xorwf	postinc1,w,c
   704  0009C2  E104               	bnz	u1160
   705  0009C4  50DE               	movf	postinc2,w,c
   706  0009C6  18E6               	xorwf	postinc1,w,c
   707  0009C8  B4D8               	btfsc	status,2,c
   708  0009CA  D004               	goto	l2021
   709  0009CC                     u1160:
   710                           
   711                           ;main.c: 331:                 ctrl = 2;
   712  0009CC  0E00               	movlw	0
   713  0009CE  6E3D               	movwf	main@ctrl+1,c
   714  0009D0  0E02               	movlw	2
   715  0009D2  6E3C               	movwf	main@ctrl,c
   716  0009D4                     l2021:
   717                           
   718                           ;main.c: 333:         }
   719  0009D4  4A44               	infsnz	main@i_766,f,c
   720  0009D6  2A45               	incf	main@i_766+1,f,c
   721  0009D8  BE45               	btfsc	main@i_766+1,7,c
   722  0009DA  D7DF               	goto	l2017
   723  0009DC  5045               	movf	main@i_766+1,w,c
   724  0009DE  E104               	bnz	u1170
   725  0009E0  0E04               	movlw	4
   726  0009E2  5C44               	subwf	main@i_766,w,c
   727  0009E4  A0D8               	btfss	status,0,c
   728  0009E6  D7D9               	goto	l2017
   729  0009E8                     u1170:
   730                           
   731                           ;main.c: 335:         for(int i=0;i<4;i++){
   732  0009E8  0E00               	movlw	0
   733  0009EA  6E47               	movwf	main@i_767+1,c
   734  0009EC  0E00               	movlw	0
   735  0009EE  6E46               	movwf	main@i_767,c
   736  0009F0                     l2031:
   737                           
   738                           ;main.c: 336:             if(senha[i] != senhaAdmin[i]){
   739  0009F0  90D8               	bcf	status,0,c
   740  0009F2  3446               	rlcf	main@i_767,w,c
   741  0009F4  6ED9               	movwf	fsr2l,c
   742  0009F6  3447               	rlcf	main@i_767+1,w,c
   743  0009F8  6EDA               	movwf	fsr2h,c
   744  0009FA  0E32               	movlw	low main@senhaAdmin
   745  0009FC  26D9               	addwf	fsr2l,f,c
   746  0009FE  0E00               	movlw	high main@senhaAdmin
   747  000A00  22DA               	addwfc	fsr2h,f,c
   748  000A02  90D8               	bcf	status,0,c
   749  000A04  3446               	rlcf	main@i_767,w,c
   750  000A06  6EE1               	movwf	fsr1l,c
   751  000A08  3447               	rlcf	main@i_767+1,w,c
   752  000A0A  6EE2               	movwf	fsr1h,c
   753  000A0C  0E22               	movlw	low main@senha
   754  000A0E  26E1               	addwf	fsr1l,f,c
   755  000A10  0E00               	movlw	high main@senha
   756  000A12  22E2               	addwfc	fsr1h,f,c
   757  000A14  50DE               	movf	postinc2,w,c
   758  000A16  18E6               	xorwf	postinc1,w,c
   759  000A18  E104               	bnz	u1180
   760  000A1A  50DE               	movf	postinc2,w,c
   761  000A1C  18E6               	xorwf	postinc1,w,c
   762  000A1E  B4D8               	btfsc	status,2,c
   763  000A20  D004               	goto	l2035
   764  000A22                     u1180:
   765                           
   766                           ;main.c: 337:                 ctrl = 0;
   767  000A22  0E00               	movlw	0
   768  000A24  6E3D               	movwf	main@ctrl+1,c
   769  000A26  0E00               	movlw	0
   770  000A28  6E3C               	movwf	main@ctrl,c
   771  000A2A                     l2035:
   772                           
   773                           ;main.c: 339:         }
   774  000A2A  4A46               	infsnz	main@i_767,f,c
   775  000A2C  2A47               	incf	main@i_767+1,f,c
   776  000A2E  BE47               	btfsc	main@i_767+1,7,c
   777  000A30  D7DF               	goto	l2031
   778  000A32  5047               	movf	main@i_767+1,w,c
   779  000A34  E104               	bnz	u1190
   780  000A36  0E04               	movlw	4
   781  000A38  5C46               	subwf	main@i_767,w,c
   782  000A3A  A0D8               	btfss	status,0,c
   783  000A3C  D7D9               	goto	l2031
   784  000A3E                     u1190:
   785                           
   786                           ;main.c: 341:         if(ctrl == 1){
   787  000A3E  043C               	decf	main@ctrl,w,c
   788  000A40  103D               	iorwf	main@ctrl+1,w,c
   789  000A42  A4D8               	btfss	status,2,c
   790  000A44  D77B               	goto	u1140
   791                           
   792                           ;main.c: 344:             PORTCbits.RC6 = 1;
   793  000A46  8C82               	bsf	3970,6,c	;volatile
   794                           
   795                           ;main.c: 345:             _delay((unsigned long)((100)*(20000000/4000.0)));
   796  000A48  0E03               	movlw	3
   797  000A4A  6E1F               	movwf	(??_main+1)& (0+255),c
   798  000A4C  0E8A               	movlw	138
   799  000A4E  6E1E               	movwf	??_main& (0+255),c
   800  000A50  0E56               	movlw	86
   801  000A52                     u1217:
   802  000A52  2EE8               	decfsz	wreg,f,c
   803  000A54  D7FE               	bra	u1217
   804  000A56  2E1E               	decfsz	??_main& (0+255),f,c
   805  000A58  D7FC               	bra	u1217
   806  000A5A  2E1F               	decfsz	(??_main+1)& (0+255),f,c
   807  000A5C  D7FA               	bra	u1217
   808                           
   809                           ;main.c: 346:             PORTCbits.RC6 = 0;
   810  000A5E  9C82               	bcf	3970,6,c	;volatile
   811  000A60  D76D               	goto	u1140
   812  000A62                     __end_of_main:
   813                           	opt callstack 0
   814                           
   815 ;; *************** function _verificaMemoria *****************
   816 ;; Defined at:
   817 ;;		line 283 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2    3[COMRAM] int 
   824 ;; Registers used:
   825 ;;		wreg, status,2, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         2       0       0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0
   834 ;;      Totals:         2       0       0       0       0       0       0       0       0
   835 ;;Total ram usage:        2 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    3
   838 ;; This function calls:
   839 ;;		_EEPROM_Ler
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text1
   846  001100                     __ptext1:
   847                           	opt callstack 0
   848  001100                     _verificaMemoria:
   849                           	opt callstack 27
   850                           
   851                           ;main.c: 284:     if(EEPROM_Ler(0)=='S'){
   852                           
   853                           ;incstack = 0
   854  001100  0E00               	movlw	0
   855  001102  6E03               	movwf	EEPROM_Ler@dir+1,c
   856  001104  0E00               	movlw	0
   857  001106  6E02               	movwf	EEPROM_Ler@dir,c
   858  001108  ECEA  F008         	call	_EEPROM_Ler	;wreg free
   859  00110C  0A53               	xorlw	83
   860  00110E  A4D8               	btfss	status,2,c
   861  001110  D005               	goto	l1903
   862                           
   863                           ;main.c: 285:         return 0;
   864  001112  0E00               	movlw	0
   865  001114  6E05               	movwf	?_verificaMemoria+1,c
   866  001116  0E00               	movlw	0
   867  001118  6E04               	movwf	?_verificaMemoria,c
   868  00111A  0012               	return	
   869  00111C                     l1903:
   870  00111C  0E00               	movlw	0
   871  00111E  6E05               	movwf	?_verificaMemoria+1,c
   872  001120  0E01               	movlw	1
   873  001122  6E04               	movwf	?_verificaMemoria,c
   874  001124  0012               	return		;funcret
   875  001126                     __end_of_verificaMemoria:
   876                           	opt callstack 0
   877                           
   878 ;; *************** function _EEPROM_Ler *****************
   879 ;; Defined at:
   880 ;;		line 275 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  dir             2    1[COMRAM] int 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      unsigned char 
   887 ;; Registers used:
   888 ;;		wreg, status,2
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   894 ;;      Params:         2       0       0       0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0
   897 ;;      Totals:         2       0       0       0       0       0       0       0       0
   898 ;;Total ram usage:        2 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_verificaMemoria
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text2
   910  0011D4                     __ptext2:
   911                           	opt callstack 0
   912  0011D4                     _EEPROM_Ler:
   913                           	opt callstack 27
   914                           
   915                           ;main.c: 276:     EEADR = dir;
   916                           
   917                           ;incstack = 0
   918  0011D4  C002  FFA9         	movff	EEPROM_Ler@dir,4009	;volatile
   919                           
   920                           ;main.c: 277:     EECON1bits.EEPGD = 0;
   921  0011D8  9EA6               	bcf	4006,7,c	;volsfr
   922                           
   923                           ;main.c: 278:     EECON1bits.CFGS = 0;
   924  0011DA  9CA6               	bcf	4006,6,c	;volsfr
   925                           
   926                           ;main.c: 279:     EECON1bits.RD = 1;
   927  0011DC  80A6               	bsf	4006,0,c	;volsfr
   928                           
   929                           ;main.c: 280:     return EEDATA;
   930  0011DE  50A8               	movf	4008,w,c	;volatile
   931  0011E0  0012               	return		;funcret
   932  0011E2                     __end_of_EEPROM_Ler:
   933                           	opt callstack 0
   934                           
   935 ;; *************** function _tecladoMatricial *****************
   936 ;; Defined at:
   937 ;;		line 136 in file "main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  tecla           2   27[COMRAM] int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    1[COMRAM] int 
   944 ;; Registers used:
   945 ;;		wreg, status,2
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         2       0       0       0       0       0       0       0       0
   952 ;;      Locals:        26       0       0       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0
   954 ;;      Totals:        28       0       0       0       0       0       0       0       0
   955 ;;Total ram usage:       28 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text3
   966  000A62                     __ptext3:
   967                           	opt callstack 0
   968  000A62                     _tecladoMatricial:
   969                           	opt callstack 28
   970                           
   971                           ;main.c: 137:     int tecla;;main.c: 138:     if(!PORTBbits.RB3){
   972                           
   973                           ;incstack = 0
   974  000A62  B681               	btfsc	3969,3,c	;volatile
   975  000A64  D02A               	goto	l81
   976                           
   977                           ;main.c: 139:         tecla = !PORTBbits.RB4 ? 0:
   978  000A66  A881               	btfss	3969,4,c	;volatile
   979  000A68  D024               	goto	l1813
   980  000A6A  AA81               	btfss	3969,5,c	;volatile
   981  000A6C  D019               	goto	l1809
   982  000A6E  AC81               	btfss	3969,6,c	;volatile
   983  000A70  D00E               	goto	l1805
   984  000A72  AE81               	btfss	3969,7,c	;volatile
   985  000A74  D003               	goto	l1801
   986  000A76  6808               	setf	_tecladoMatricial$626,c
   987  000A78  6809               	setf	_tecladoMatricial$626+1,c
   988  000A7A  D004               	goto	l1803
   989  000A7C                     l1801:
   990  000A7C  0E00               	movlw	0
   991  000A7E  6E09               	movwf	_tecladoMatricial$626+1,c
   992  000A80  0E0C               	movlw	12
   993  000A82  6E08               	movwf	_tecladoMatricial$626,c
   994  000A84                     l1803:
   995  000A84  C008  F006         	movff	_tecladoMatricial$626,_tecladoMatricial$625
   996  000A88  C009  F007         	movff	_tecladoMatricial$626+1,_tecladoMatricial$625+1
   997  000A8C  D004               	goto	l1807
   998  000A8E                     l1805:
   999  000A8E  0E00               	movlw	0
  1000  000A90  6E07               	movwf	_tecladoMatricial$625+1,c
  1001  000A92  0E08               	movlw	8
  1002  000A94  6E06               	movwf	_tecladoMatricial$625,c
  1003  000A96                     l1807:
  1004  000A96  C006  F004         	movff	_tecladoMatricial$625,_tecladoMatricial$624
  1005  000A9A  C007  F005         	movff	_tecladoMatricial$625+1,_tecladoMatricial$624+1
  1006  000A9E  D004               	goto	l1811
  1007  000AA0                     l1809:
  1008  000AA0  0E00               	movlw	0
  1009  000AA2  6E05               	movwf	_tecladoMatricial$624+1,c
  1010  000AA4  0E04               	movlw	4
  1011  000AA6  6E04               	movwf	_tecladoMatricial$624,c
  1012  000AA8                     l1811:
  1013  000AA8  C004  F01C         	movff	_tecladoMatricial$624,tecladoMatricial@tecla
  1014  000AAC  C005  F01D         	movff	_tecladoMatricial$624+1,tecladoMatricial@tecla+1
  1015  000AB0  D088               	goto	l1887
  1016  000AB2                     l1813:
  1017  000AB2  0E00               	movlw	0
  1018  000AB4  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1019  000AB6  0E00               	movlw	0
  1020  000AB8  D083               	goto	L1
  1021  000ABA                     l81:
  1022  000ABA  B481               	btfsc	3969,2,c	;volatile
  1023  000ABC  D02A               	goto	l99
  1024                           
  1025                           ;main.c: 144:         tecla = !PORTBbits.RB4 ? 1:
  1026  000ABE  A881               	btfss	3969,4,c	;volatile
  1027  000AC0  D024               	goto	l1837
  1028  000AC2  AA81               	btfss	3969,5,c	;volatile
  1029  000AC4  D019               	goto	l1833
  1030  000AC6  AC81               	btfss	3969,6,c	;volatile
  1031  000AC8  D00E               	goto	l1829
  1032  000ACA  AE81               	btfss	3969,7,c	;volatile
  1033  000ACC  D003               	goto	l1825
  1034  000ACE  680E               	setf	_tecladoMatricial$629,c
  1035  000AD0  680F               	setf	_tecladoMatricial$629+1,c
  1036  000AD2  D004               	goto	l1827
  1037  000AD4                     l1825:
  1038  000AD4  0E00               	movlw	0
  1039  000AD6  6E0F               	movwf	_tecladoMatricial$629+1,c
  1040  000AD8  0E0D               	movlw	13
  1041  000ADA  6E0E               	movwf	_tecladoMatricial$629,c
  1042  000ADC                     l1827:
  1043  000ADC  C00E  F00C         	movff	_tecladoMatricial$629,_tecladoMatricial$628
  1044  000AE0  C00F  F00D         	movff	_tecladoMatricial$629+1,_tecladoMatricial$628+1
  1045  000AE4  D004               	goto	l1831
  1046  000AE6                     l1829:
  1047  000AE6  0E00               	movlw	0
  1048  000AE8  6E0D               	movwf	_tecladoMatricial$628+1,c
  1049  000AEA  0E09               	movlw	9
  1050  000AEC  6E0C               	movwf	_tecladoMatricial$628,c
  1051  000AEE                     l1831:
  1052  000AEE  C00C  F00A         	movff	_tecladoMatricial$628,_tecladoMatricial$627
  1053  000AF2  C00D  F00B         	movff	_tecladoMatricial$628+1,_tecladoMatricial$627+1
  1054  000AF6  D004               	goto	l1835
  1055  000AF8                     l1833:
  1056  000AF8  0E00               	movlw	0
  1057  000AFA  6E0B               	movwf	_tecladoMatricial$627+1,c
  1058  000AFC  0E05               	movlw	5
  1059  000AFE  6E0A               	movwf	_tecladoMatricial$627,c
  1060  000B00                     l1835:
  1061  000B00  C00A  F01C         	movff	_tecladoMatricial$627,tecladoMatricial@tecla
  1062  000B04  C00B  F01D         	movff	_tecladoMatricial$627+1,tecladoMatricial@tecla+1
  1063  000B08  D05C               	goto	l1887
  1064  000B0A                     l1837:
  1065  000B0A  0E00               	movlw	0
  1066  000B0C  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1067  000B0E  0E01               	movlw	1
  1068  000B10  D057               	goto	L1
  1069  000B12                     l99:
  1070  000B12  B281               	btfsc	3969,1,c	;volatile
  1071  000B14  D02A               	goto	l117
  1072                           
  1073                           ;main.c: 149:         tecla = !PORTBbits.RB4 ? 2:
  1074  000B16  A881               	btfss	3969,4,c	;volatile
  1075  000B18  D024               	goto	l1861
  1076  000B1A  AA81               	btfss	3969,5,c	;volatile
  1077  000B1C  D019               	goto	l1857
  1078  000B1E  AC81               	btfss	3969,6,c	;volatile
  1079  000B20  D00E               	goto	l1853
  1080  000B22  AE81               	btfss	3969,7,c	;volatile
  1081  000B24  D003               	goto	l1849
  1082  000B26  6814               	setf	_tecladoMatricial$632,c
  1083  000B28  6815               	setf	_tecladoMatricial$632+1,c
  1084  000B2A  D004               	goto	l1851
  1085  000B2C                     l1849:
  1086  000B2C  0E00               	movlw	0
  1087  000B2E  6E15               	movwf	_tecladoMatricial$632+1,c
  1088  000B30  0E0E               	movlw	14
  1089  000B32  6E14               	movwf	_tecladoMatricial$632,c
  1090  000B34                     l1851:
  1091  000B34  C014  F012         	movff	_tecladoMatricial$632,_tecladoMatricial$631
  1092  000B38  C015  F013         	movff	_tecladoMatricial$632+1,_tecladoMatricial$631+1
  1093  000B3C  D004               	goto	l1855
  1094  000B3E                     l1853:
  1095  000B3E  0E00               	movlw	0
  1096  000B40  6E13               	movwf	_tecladoMatricial$631+1,c
  1097  000B42  0E0A               	movlw	10
  1098  000B44  6E12               	movwf	_tecladoMatricial$631,c
  1099  000B46                     l1855:
  1100  000B46  C012  F010         	movff	_tecladoMatricial$631,_tecladoMatricial$630
  1101  000B4A  C013  F011         	movff	_tecladoMatricial$631+1,_tecladoMatricial$630+1
  1102  000B4E  D004               	goto	l1859
  1103  000B50                     l1857:
  1104  000B50  0E00               	movlw	0
  1105  000B52  6E11               	movwf	_tecladoMatricial$630+1,c
  1106  000B54  0E06               	movlw	6
  1107  000B56  6E10               	movwf	_tecladoMatricial$630,c
  1108  000B58                     l1859:
  1109  000B58  C010  F01C         	movff	_tecladoMatricial$630,tecladoMatricial@tecla
  1110  000B5C  C011  F01D         	movff	_tecladoMatricial$630+1,tecladoMatricial@tecla+1
  1111  000B60  D030               	goto	l1887
  1112  000B62                     l1861:
  1113  000B62  0E00               	movlw	0
  1114  000B64  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1115  000B66  0E02               	movlw	2
  1116  000B68  D02B               	goto	L1
  1117  000B6A                     l117:
  1118  000B6A  B081               	btfsc	3969,0,c	;volatile
  1119  000B6C  D02A               	goto	l1887
  1120                           
  1121                           ;main.c: 154:         tecla = !PORTBbits.RB4 ? 3:
  1122  000B6E  A881               	btfss	3969,4,c	;volatile
  1123  000B70  D024               	goto	l1885
  1124  000B72  AA81               	btfss	3969,5,c	;volatile
  1125  000B74  D019               	goto	l1881
  1126  000B76  AC81               	btfss	3969,6,c	;volatile
  1127  000B78  D00E               	goto	l1877
  1128  000B7A  AE81               	btfss	3969,7,c	;volatile
  1129  000B7C  D003               	goto	l1873
  1130  000B7E  681A               	setf	_tecladoMatricial$635,c
  1131  000B80  681B               	setf	_tecladoMatricial$635+1,c
  1132  000B82  D004               	goto	l1875
  1133  000B84                     l1873:
  1134  000B84  0E00               	movlw	0
  1135  000B86  6E1B               	movwf	_tecladoMatricial$635+1,c
  1136  000B88  0E0F               	movlw	15
  1137  000B8A  6E1A               	movwf	_tecladoMatricial$635,c
  1138  000B8C                     l1875:
  1139  000B8C  C01A  F018         	movff	_tecladoMatricial$635,_tecladoMatricial$634
  1140  000B90  C01B  F019         	movff	_tecladoMatricial$635+1,_tecladoMatricial$634+1
  1141  000B94  D004               	goto	l1879
  1142  000B96                     l1877:
  1143  000B96  0E00               	movlw	0
  1144  000B98  6E19               	movwf	_tecladoMatricial$634+1,c
  1145  000B9A  0E0B               	movlw	11
  1146  000B9C  6E18               	movwf	_tecladoMatricial$634,c
  1147  000B9E                     l1879:
  1148  000B9E  C018  F016         	movff	_tecladoMatricial$634,_tecladoMatricial$633
  1149  000BA2  C019  F017         	movff	_tecladoMatricial$634+1,_tecladoMatricial$633+1
  1150  000BA6  D004               	goto	l1883
  1151  000BA8                     l1881:
  1152  000BA8  0E00               	movlw	0
  1153  000BAA  6E17               	movwf	_tecladoMatricial$633+1,c
  1154  000BAC  0E07               	movlw	7
  1155  000BAE  6E16               	movwf	_tecladoMatricial$633,c
  1156  000BB0                     l1883:
  1157  000BB0  C016  F01C         	movff	_tecladoMatricial$633,tecladoMatricial@tecla
  1158  000BB4  C017  F01D         	movff	_tecladoMatricial$633+1,tecladoMatricial@tecla+1
  1159  000BB8  D004               	goto	l1887
  1160  000BBA                     l1885:
  1161  000BBA  0E00               	movlw	0
  1162  000BBC  6E1D               	movwf	tecladoMatricial@tecla+1,c
  1163  000BBE  0E03               	movlw	3
  1164  000BC0                     L1:
  1165  000BC0  6E1C               	movwf	tecladoMatricial@tecla,c
  1166  000BC2                     l1887:
  1167                           
  1168                           ;main.c: 159:     return tecla;
  1169  000BC2  C01C  F002         	movff	tecladoMatricial@tecla,?_tecladoMatricial
  1170  000BC6  C01D  F003         	movff	tecladoMatricial@tecla+1,?_tecladoMatricial+1
  1171  000BCA  0012               	return		;funcret
  1172  000BCC                     __end_of_tecladoMatricial:
  1173                           	opt callstack 0
  1174                           
  1175 ;; *************** function _lcd *****************
  1176 ;; Defined at:
  1177 ;;		line 94 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  tecla           2    2[COMRAM] int 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  teclado        16    5[COMRAM] unsigned char [16]
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1191 ;;      Params:         2       0       0       0       0       0       0       0       0
  1192 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1193 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1194 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1195 ;;Total ram usage:       19 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    4
  1198 ;; This function calls:
  1199 ;;		_BusyXLCD
  1200 ;;		_WriteCmdXLCD
  1201 ;;		_WriteDataXLCD
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text4
  1208  000DD8                     __ptext4:
  1209                           	opt callstack 0
  1210  000DD8                     _lcd:
  1211                           	opt callstack 26
  1212                           
  1213                           ;main.c: 95:     char teclado[16] = {
  1214                           
  1215                           ;incstack = 0
  1216  000DD8  EE20  F04A         	lfsr	2,lcd@F3185
  1217  000DDC  EE10  F006         	lfsr	1,lcd@teclado
  1218  000DE0  0E0F               	movlw	15
  1219  000DE2                     u781:
  1220  000DE2  CFDB FFE3          	movff	plusw2,plusw1
  1221  000DE6  06E8               	decf	wreg,f,c
  1222  000DE8  E2FC               	bc	u781
  1223                           
  1224                           ;main.c: 102:     if(tecla != -1){
  1225  000DEA  2803               	incf	lcd@tecla,w,c
  1226  000DEC  E103               	bnz	u790
  1227  000DEE  2804               	incf	lcd@tecla+1,w,c
  1228  000DF0  B4D8               	btfsc	status,2,c
  1229  000DF2  D02B               	goto	l1785
  1230  000DF4                     u790:
  1231                           
  1232                           ;main.c: 103:         if(teclado[tecla] == '*'){
  1233  000DF4  0E06               	movlw	low lcd@teclado
  1234  000DF6  2403               	addwf	lcd@tecla,w,c
  1235  000DF8  6ED9               	movwf	fsr2l,c
  1236  000DFA  0E00               	movlw	high lcd@teclado
  1237  000DFC  2004               	addwfc	lcd@tecla+1,w,c
  1238  000DFE  6EDA               	movwf	fsr2h,c
  1239  000E00  0E2A               	movlw	42
  1240  000E02  18DE               	xorwf	postinc2,w,c
  1241  000E04  A4D8               	btfss	status,2,c
  1242  000E06  D004               	goto	l1773
  1243                           
  1244                           ;main.c: 104:             cursor--;
  1245  000E08  065A               	decf	_cursor,f,c
  1246  000E0A  A0D8               	btfss	status,0,c
  1247  000E0C  065B               	decf	_cursor+1,f,c
  1248                           
  1249                           ;main.c: 105:         }else if(teclado[tecla] == '#'){
  1250  000E0E  D01A               	goto	l1783
  1251  000E10                     l1773:
  1252  000E10  0E06               	movlw	low lcd@teclado
  1253  000E12  2403               	addwf	lcd@tecla,w,c
  1254  000E14  6ED9               	movwf	fsr2l,c
  1255  000E16  0E00               	movlw	high lcd@teclado
  1256  000E18  2004               	addwfc	lcd@tecla+1,w,c
  1257  000E1A  6EDA               	movwf	fsr2h,c
  1258  000E1C  0E23               	movlw	35
  1259  000E1E  18DE               	xorwf	postinc2,w,c
  1260  000E20  A4D8               	btfss	status,2,c
  1261  000E22  D003               	goto	l1777
  1262  000E24                     u810:
  1263                           
  1264                           ;main.c: 106:             cursor++;
  1265  000E24  4A5A               	infsnz	_cursor,f,c
  1266  000E26  2A5B               	incf	_cursor+1,f,c
  1267                           
  1268                           ;main.c: 107:         }else{
  1269  000E28  D00D               	goto	l1783
  1270  000E2A                     l1777:
  1271                           
  1272                           ;main.c: 108:             WriteCmdXLCD(cursor);
  1273  000E2A  505A               	movf	_cursor,w,c
  1274  000E2C  EC71  F007         	call	_WriteCmdXLCD
  1275                           
  1276                           ;main.c: 109:             WriteDataXLCD(teclado[tecla]);
  1277  000E30  0E06               	movlw	low lcd@teclado
  1278  000E32  2403               	addwf	lcd@tecla,w,c
  1279  000E34  6ED9               	movwf	fsr2l,c
  1280  000E36  0E00               	movlw	high lcd@teclado
  1281  000E38  2004               	addwfc	lcd@tecla+1,w,c
  1282  000E3A  6EDA               	movwf	fsr2h,c
  1283  000E3C  50DF               	movf	indf2,w,c
  1284  000E3E  EC52  F007         	call	_WriteDataXLCD
  1285  000E42  D7F0               	goto	u810
  1286  000E44                     l1783:
  1287                           
  1288                           ;main.c: 112:         WriteCmdXLCD(cursor);
  1289  000E44  505A               	movf	_cursor,w,c
  1290  000E46  EC71  F007         	call	_WriteCmdXLCD
  1291  000E4A                     l1785:
  1292                           
  1293                           ;main.c: 114:     if(!BusyXLCD()){
  1294  000E4A  ECEC  F007         	call	_BusyXLCD	;wreg free
  1295  000E4E  0900               	iorlw	0
  1296  000E50  A4D8               	btfss	status,2,c
  1297  000E52  0012               	return	
  1298                           
  1299                           ;main.c: 115:         _delay((unsigned long)((8)*(20000000/4000.0)));
  1300  000E54  0E34               	movlw	52
  1301  000E56  6E05               	movwf	??_lcd& (0+255),c
  1302  000E58  0EF2               	movlw	242
  1303  000E5A                     u1227:
  1304  000E5A  2EE8               	decfsz	wreg,f,c
  1305  000E5C  D7FE               	bra	u1227
  1306  000E5E  2E05               	decfsz	??_lcd& (0+255),f,c
  1307  000E60  D7FC               	bra	u1227
  1308  000E62  0012               	return		;funcret
  1309  000E64                     __end_of_lcd:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _config_timer0 *****************
  1313 ;; Defined at:
  1314 ;;		line 220 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text5
  1343  00116C                     __ptext5:
  1344                           	opt callstack 0
  1345  00116C                     _config_timer0:
  1346                           	opt callstack 28
  1347                           
  1348                           ;main.c: 221:     T0CONbits.TMR0ON = 1;
  1349                           
  1350                           ;incstack = 0
  1351  00116C  8ED5               	bsf	4053,7,c	;volatile
  1352                           
  1353                           ;main.c: 222:     T0CONbits.T08BIT = 1;
  1354  00116E  8CD5               	bsf	4053,6,c	;volatile
  1355                           
  1356                           ;main.c: 223:     T0CONbits.T0CS = 0;
  1357  001170  9AD5               	bcf	4053,5,c	;volatile
  1358                           
  1359                           ;main.c: 225:     T0CONbits.PSA = 1;
  1360  001172  86D5               	bsf	4053,3,c	;volatile
  1361                           
  1362                           ;main.c: 226:     T0CONbits.T0PS2 = 1;
  1363  001174  84D5               	bsf	4053,2,c	;volatile
  1364                           
  1365                           ;main.c: 227:     T0CONbits.T0PS1 = 0;
  1366  001176  92D5               	bcf	4053,1,c	;volatile
  1367                           
  1368                           ;main.c: 228:     T0CONbits.T0PS0 = 0;
  1369  001178  90D5               	bcf	4053,0,c	;volatile
  1370                           
  1371                           ;main.c: 229:     INTCONbits.TMR0IE = 1;
  1372  00117A  8AF2               	bsf	4082,5,c	;volatile
  1373                           
  1374                           ;main.c: 230:     TMR0 = 100;
  1375  00117C  0E00               	movlw	0
  1376  00117E  6ED7               	movwf	4055,c	;volatile
  1377  001180  0E64               	movlw	100
  1378  001182  6ED6               	movwf	4054,c	;volatile
  1379  001184  0012               	return		;funcret
  1380  001186                     __end_of_config_timer0:
  1381                           	opt callstack 0
  1382                           
  1383 ;; *************** function _config_teclado *****************
  1384 ;; Defined at:
  1385 ;;		line 162 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text6
  1414  00114C                     __ptext6:
  1415                           	opt callstack 0
  1416  00114C                     _config_teclado:
  1417                           	opt callstack 28
  1418                           
  1419                           ;main.c: 163:     RBPU = 0;
  1420                           
  1421                           ;incstack = 0
  1422  00114C  9EF1               	bcf	4081,7,c	;volatile
  1423                           
  1424                           ;main.c: 165:     ADCON1 = 0x0F;
  1425  00114E  0E0F               	movlw	15
  1426  001150  6EC1               	movwf	4033,c	;volatile
  1427                           
  1428                           ;main.c: 167:     TRISBbits.TRISB0 = 0;
  1429  001152  9093               	bcf	3987,0,c	;volatile
  1430                           
  1431                           ;main.c: 168:     TRISBbits.TRISB1 = 0;
  1432  001154  9293               	bcf	3987,1,c	;volatile
  1433                           
  1434                           ;main.c: 169:     TRISBbits.TRISB2 = 0;
  1435  001156  9493               	bcf	3987,2,c	;volatile
  1436                           
  1437                           ;main.c: 170:     TRISBbits.TRISB3 = 0;
  1438  001158  9693               	bcf	3987,3,c	;volatile
  1439                           
  1440                           ;main.c: 171:     TRISBbits.TRISB4 = 1;
  1441  00115A  8893               	bsf	3987,4,c	;volatile
  1442                           
  1443                           ;main.c: 172:     TRISBbits.TRISB5 = 1;
  1444  00115C  8A93               	bsf	3987,5,c	;volatile
  1445                           
  1446                           ;main.c: 173:     TRISBbits.TRISB6 = 1;
  1447  00115E  8C93               	bsf	3987,6,c	;volatile
  1448                           
  1449                           ;main.c: 174:     TRISBbits.TRISB7 = 1;
  1450  001160  8E93               	bsf	3987,7,c	;volatile
  1451                           
  1452                           ;main.c: 176:     PORTBbits.RB0 = 1;
  1453  001162  8081               	bsf	3969,0,c	;volatile
  1454                           
  1455                           ;main.c: 177:     PORTBbits.RB1 = 1;
  1456  001164  8281               	bsf	3969,1,c	;volatile
  1457                           
  1458                           ;main.c: 178:     PORTBbits.RB2 = 1;
  1459  001166  8481               	bsf	3969,2,c	;volatile
  1460                           
  1461                           ;main.c: 179:     PORTBbits.RB3 = 0;
  1462  001168  9681               	bcf	3969,3,c	;volatile
  1463  00116A  0012               	return		;funcret
  1464  00116C                     __end_of_config_teclado:
  1465                           	opt callstack 0
  1466                           
  1467 ;; *************** function _config_led *****************
  1468 ;; Defined at:
  1469 ;;		line 189 in file "main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		None
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text7
  1498  0011F4                     __ptext7:
  1499                           	opt callstack 0
  1500  0011F4                     _config_led:
  1501                           	opt callstack 28
  1502                           
  1503                           ;main.c: 190:     TRISDbits.TRISD0 = 0;
  1504                           
  1505                           ;incstack = 0
  1506  0011F4  9095               	bcf	3989,0,c	;volatile
  1507                           
  1508                           ;main.c: 191:     PORTDbits.RD0 = 1;
  1509  0011F6  8083               	bsf	3971,0,c	;volatile
  1510  0011F8  0012               	return		;funcret
  1511  0011FA                     __end_of_config_led:
  1512                           	opt callstack 0
  1513                           
  1514 ;; *************** function _config_ldc *****************
  1515 ;; Defined at:
  1516 ;;		line 182 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         0       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    6
  1537 ;; This function calls:
  1538 ;;		_OpenXLCD
  1539 ;;		_WriteCmdXLCD
  1540 ;;		_lcdTxt
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text8
  1547  001186                     __ptext8:
  1548                           	opt callstack 0
  1549  001186                     _config_ldc:
  1550                           	opt callstack 24
  1551                           
  1552                           ;main.c: 184:     OpenXLCD(0b00101100 & 0b00111000);
  1553                           
  1554                           ;incstack = 0
  1555  001186  0E28               	movlw	40
  1556  001188  EC98  F006         	call	_OpenXLCD
  1557                           
  1558                           ;main.c: 185:     WriteCmdXLCD(0x01);
  1559  00118C  0E01               	movlw	1
  1560  00118E  EC71  F007         	call	_WriteCmdXLCD
  1561                           
  1562                           ;main.c: 186:     lcdTxt("Fechadura");
  1563  001192  0E01               	movlw	low STR_2
  1564  001194  6E05               	movwf	lcdTxt@txt,c
  1565  001196  0E08               	movlw	high STR_2
  1566  001198  6E06               	movwf	lcdTxt@txt+1,c
  1567  00119A  ECCE  F007         	call	_lcdTxt	;wreg free
  1568  00119E  0012               	return		;funcret
  1569  0011A0                     __end_of_config_ldc:
  1570                           	opt callstack 0
  1571                           
  1572 ;; *************** function _lcdTxt *****************
  1573 ;; Defined at:
  1574 ;;		line 85 in file "main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  txt             2    4[COMRAM] PTR unsigned char 
  1577 ;;		 -> STR_2(10), 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1589 ;;      Params:         2       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:        3 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    5
  1596 ;; This function calls:
  1597 ;;		_WriteCmdXLCD
  1598 ;;		_putrsXLCD
  1599 ;;		_putsXLCD
  1600 ;; This function is called by:
  1601 ;;		_config_ldc
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text9
  1606  000F9C                     __ptext9:
  1607                           	opt callstack 0
  1608  000F9C                     _lcdTxt:
  1609                           	opt callstack 24
  1610                           
  1611                           ;main.c: 86:     WriteCmdXLCD(0x80);
  1612                           
  1613                           ;incstack = 0
  1614  000F9C  0E80               	movlw	128
  1615  000F9E  EC71  F007         	call	_WriteCmdXLCD
  1616                           
  1617                           ;main.c: 87:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1618  000FA2  0E1A               	movlw	26
  1619  000FA4  6E07               	movwf	??_lcdTxt& (0+255),c
  1620  000FA6  0EF8               	movlw	248
  1621  000FA8                     u1237:
  1622  000FA8  2EE8               	decfsz	wreg,f,c
  1623  000FAA  D7FE               	bra	u1237
  1624  000FAC  2E07               	decfsz	??_lcdTxt& (0+255),f,c
  1625  000FAE  D7FC               	bra	u1237
  1626  000FB0  D000               	nop2	
  1627                           
  1628                           ;main.c: 88:     putrsXLCD(txt);
  1629  000FB2  C005  F003         	movff	lcdTxt@txt,putrsXLCD@buffer
  1630  000FB6  C006  F004         	movff	lcdTxt@txt+1,putrsXLCD@buffer+1
  1631  000FBA  EC23  F008         	call	_putrsXLCD	;wreg free
  1632                           
  1633                           ;main.c: 89:     WriteCmdXLCD(0xC0);
  1634  000FBE  0EC0               	movlw	192
  1635  000FC0  EC71  F007         	call	_WriteCmdXLCD
  1636                           
  1637                           ;main.c: 90:     putsXLCD(":");
  1638  000FC4  0E0B               	movlw	low STR_1
  1639  000FC6  6E03               	movwf	putsXLCD@buffer,c
  1640  000FC8  0E08               	movlw	high STR_1
  1641  000FCA  6E04               	movwf	putsXLCD@buffer+1,c
  1642  000FCC  EC09  F008         	call	_putsXLCD	;wreg free
  1643                           
  1644                           ;main.c: 91:     WriteCmdXLCD(0xC1);
  1645  000FD0  0EC1               	movlw	193
  1646  000FD2  EC71  F007         	call	_WriteCmdXLCD
  1647  000FD6  0012               	return		;funcret
  1648  000FD8                     __end_of_lcdTxt:
  1649                           	opt callstack 0
  1650                           
  1651 ;; *************** function _putsXLCD *****************
  1652 ;; Defined at:
  1653 ;;		line 510 in file "nxlcd.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  1656 ;;		 -> STR_1(2), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         2       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		_BusyXLCD
  1677 ;;		_WriteDataXLCD
  1678 ;; This function is called by:
  1679 ;;		_lcdTxt
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text10
  1684  001012                     __ptext10:
  1685                           	opt callstack 0
  1686  001012                     _putsXLCD:
  1687                           	opt callstack 24
  1688                           
  1689                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
  1690                           
  1691                           ;incstack = 0
  1692  001012  D00F               	goto	l1723
  1693  001014                     l1717:
  1694  001014  ECEC  F007         	call	_BusyXLCD	;wreg free
  1695  001018  0900               	iorlw	0
  1696  00101A  A4D8               	btfss	status,2,c
  1697  00101C  D7FB               	goto	l1717
  1698                           
  1699                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
  1700  00101E  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1701  001022  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1702  001026                     	if	0	;tblptru may be non-zero
  1703  001026                     	endif
  1704  001026                     	if	0	;tblptru may be non-zero
  1705  001026                     	endif
  1706  001026  0008               	tblrd		*
  1707  001028  50F5               	movf	tablat,w,c
  1708  00102A  EC52  F007         	call	_WriteDataXLCD
  1709                           
  1710                           ;nxlcd.c: 516:                 buffer++;
  1711  00102E  4A03               	infsnz	putsXLCD@buffer,f,c
  1712  001030  2A04               	incf	putsXLCD@buffer+1,f,c
  1713  001032                     l1723:
  1714                           
  1715                           ;nxlcd.c: 512:         while(*buffer)
  1716  001032  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1717  001036  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1718  00103A                     	if	0	;tblptru may be non-zero
  1719  00103A                     	endif
  1720  00103A                     	if	0	;tblptru may be non-zero
  1721  00103A                     	endif
  1722  00103A  0008               	tblrd		*
  1723  00103C  50F5               	movf	tablat,w,c
  1724  00103E  0900               	iorlw	0
  1725  001040  B4D8               	btfsc	status,2,c
  1726  001042  0012               	return	
  1727  001044  D7E7               	goto	l1717
  1728  001046                     __end_of_putsXLCD:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function _putrsXLCD *****************
  1732 ;; Defined at:
  1733 ;;		line 533 in file "nxlcd.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  buffer          2    2[COMRAM] PTR const unsigned char 
  1736 ;;		 -> STR_2(10), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         2       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    4
  1755 ;; This function calls:
  1756 ;;		_BusyXLCD
  1757 ;;		_WriteDataXLCD
  1758 ;; This function is called by:
  1759 ;;		_lcdTxt
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text11
  1764  001046                     __ptext11:
  1765                           	opt callstack 0
  1766  001046                     _putrsXLCD:
  1767                           	opt callstack 24
  1768                           
  1769                           ;nxlcd.c: 533: void putrsXLCD(const char *buffer);nxlcd.c: 534: {;nxlcd.c: 535:         
      +                          while(*buffer)
  1770                           
  1771                           ;incstack = 0
  1772  001046  D00F               	goto	l1713
  1773  001048                     l1707:
  1774  001048  ECEC  F007         	call	_BusyXLCD	;wreg free
  1775  00104C  0900               	iorlw	0
  1776  00104E  A4D8               	btfss	status,2,c
  1777  001050  D7FB               	goto	l1707
  1778                           
  1779                           ;nxlcd.c: 538:                 WriteDataXLCD(*buffer);
  1780  001052  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1781  001056  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1782  00105A                     	if	0	;tblptru may be non-zero
  1783  00105A                     	endif
  1784  00105A                     	if	0	;tblptru may be non-zero
  1785  00105A                     	endif
  1786  00105A  0008               	tblrd		*
  1787  00105C  50F5               	movf	tablat,w,c
  1788  00105E  EC52  F007         	call	_WriteDataXLCD
  1789                           
  1790                           ;nxlcd.c: 539:                 buffer++;
  1791  001062  4A03               	infsnz	putrsXLCD@buffer,f,c
  1792  001064  2A04               	incf	putrsXLCD@buffer+1,f,c
  1793  001066                     l1713:
  1794                           
  1795                           ;nxlcd.c: 535:         while(*buffer)
  1796  001066  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1797  00106A  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1798  00106E                     	if	0	;tblptru may be non-zero
  1799  00106E                     	endif
  1800  00106E                     	if	0	;tblptru may be non-zero
  1801  00106E                     	endif
  1802  00106E  0008               	tblrd		*
  1803  001070  50F5               	movf	tablat,w,c
  1804  001072  0900               	iorlw	0
  1805  001074  B4D8               	btfsc	status,2,c
  1806  001076  0012               	return	
  1807  001078  D7E7               	goto	l1707
  1808  00107A                     __end_of_putrsXLCD:
  1809                           	opt callstack 0
  1810                           
  1811 ;; *************** function _WriteDataXLCD *****************
  1812 ;; Defined at:
  1813 ;;		line 449 in file "nxlcd.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  data            1    wreg     unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  data            1    1[COMRAM] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        1 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    3
  1834 ;; This function calls:
  1835 ;;		_DelayFor18TCY
  1836 ;; This function is called by:
  1837 ;;		_lcd
  1838 ;;		_putsXLCD
  1839 ;;		_putrsXLCD
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text12
  1844  000EA4                     __ptext12:
  1845                           	opt callstack 0
  1846  000EA4                     _WriteDataXLCD:
  1847                           	opt callstack 26
  1848                           
  1849                           ;incstack = 0
  1850                           ;WriteDataXLCD@data stored from wreg
  1851  000EA4  6E02               	movwf	WriteDataXLCD@data,c
  1852                           
  1853                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  1854  000EA6  0E0F               	movlw	15
  1855  000EA8  1695               	andwf	3989,f,c	;volatile
  1856                           
  1857                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  1858  000EAA  0E0F               	movlw	15
  1859  000EAC  1683               	andwf	3971,f,c	;volatile
  1860                           
  1861                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  1862  000EAE  5002               	movf	WriteDataXLCD@data,w,c
  1863  000EB0  0BF0               	andlw	240
  1864  000EB2  1283               	iorwf	3971,f,c	;volatile
  1865                           
  1866                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  1867  000EB4  808D               	bsf	3981,0,c	;volatile
  1868                           
  1869                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  1870  000EB6  948D               	bcf	3981,2,c	;volatile
  1871                           
  1872                           ;nxlcd.c: 474:         DelayFor18TCY();
  1873  000EB8  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  1874                           
  1875                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  1876  000EBC  828D               	bsf	3981,1,c	;volatile
  1877                           
  1878                           ;nxlcd.c: 476:         DelayFor18TCY();
  1879  000EBE  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  1880                           
  1881                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  1882  000EC2  928D               	bcf	3981,1,c	;volatile
  1883                           
  1884                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  1885  000EC4  0E0F               	movlw	15
  1886  000EC6  1683               	andwf	3971,f,c	;volatile
  1887                           
  1888                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  1889  000EC8  3802               	swapf	WriteDataXLCD@data,w,c
  1890  000ECA  0BF0               	andlw	240
  1891  000ECC  0BF0               	andlw	240
  1892  000ECE  1283               	iorwf	3971,f,c	;volatile
  1893                           
  1894                           ;nxlcd.c: 485:         DelayFor18TCY();
  1895  000ED0  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  1896                           
  1897                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  1898  000ED4  828D               	bsf	3981,1,c	;volatile
  1899                           
  1900                           ;nxlcd.c: 487:         DelayFor18TCY();
  1901  000ED6  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  1902                           
  1903                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  1904  000EDA  928D               	bcf	3981,1,c	;volatile
  1905                           
  1906                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  1907  000EDC  0EF0               	movlw	240
  1908  000EDE  1295               	iorwf	3989,f,c	;volatile
  1909  000EE0  0012               	return		;funcret
  1910  000EE2                     __end_of_WriteDataXLCD:
  1911                           	opt callstack 0
  1912                           
  1913 ;; *************** function _OpenXLCD *****************
  1914 ;; Defined at:
  1915 ;;		line 41 in file "nxlcd.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  lcdtype         1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  lcdtype         1    2[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1932 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    4
  1936 ;; This function calls:
  1937 ;;		_BusyXLCD
  1938 ;;		_DelayPORXLCD
  1939 ;;		_DelayXLCD
  1940 ;;		_SetDDRamAddr
  1941 ;;		_WriteCmdXLCD
  1942 ;; This function is called by:
  1943 ;;		_config_ldc
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text13
  1948  000D30                     __ptext13:
  1949                           	opt callstack 0
  1950  000D30                     _OpenXLCD:
  1951                           	opt callstack 25
  1952                           
  1953                           ;incstack = 0
  1954                           ;OpenXLCD@lcdtype stored from wreg
  1955  000D30  6E03               	movwf	OpenXLCD@lcdtype,c
  1956                           
  1957                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1958  000D32  0E0F               	movlw	15
  1959  000D34  1683               	andwf	3971,f,c	;volatile
  1960                           
  1961                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1962  000D36  0E0F               	movlw	15
  1963  000D38  1695               	andwf	3989,f,c	;volatile
  1964                           
  1965                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1966  000D3A  9496               	bcf	3990,2,c	;volatile
  1967                           
  1968                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1969  000D3C  9096               	bcf	3990,0,c	;volatile
  1970                           
  1971                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  1972  000D3E  9296               	bcf	3990,1,c	;volatile
  1973                           
  1974                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  1975  000D40  948D               	bcf	3981,2,c	;volatile
  1976                           
  1977                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  1978  000D42  908D               	bcf	3981,0,c	;volatile
  1979                           
  1980                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  1981  000D44  928D               	bcf	3981,1,c	;volatile
  1982                           
  1983                           ;nxlcd.c: 65:         DelayPORXLCD();
  1984  000D46  ECE2  F008         	call	_DelayPORXLCD	;wreg free
  1985                           
  1986                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  1987  000D4A  0E30               	movlw	48
  1988  000D4C  EC71  F007         	call	_WriteCmdXLCD
  1989                           
  1990                           ;nxlcd.c: 68:    DelayXLCD();
  1991  000D50  ECD9  F008         	call	_DelayXLCD	;wreg free
  1992                           
  1993                           ;nxlcd.c: 69:    DelayXLCD();
  1994  000D54  ECD9  F008         	call	_DelayXLCD	;wreg free
  1995                           
  1996                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  1997  000D58  0E30               	movlw	48
  1998  000D5A  EC71  F007         	call	_WriteCmdXLCD
  1999                           
  2000                           ;nxlcd.c: 71:    DelayXLCD();
  2001  000D5E  ECD9  F008         	call	_DelayXLCD	;wreg free
  2002                           
  2003                           ;nxlcd.c: 72:    DelayXLCD();
  2004  000D62  ECD9  F008         	call	_DelayXLCD	;wreg free
  2005                           
  2006                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  2007  000D66  0E32               	movlw	50
  2008  000D68  EC71  F007         	call	_WriteCmdXLCD
  2009  000D6C                     l1213:
  2010  000D6C  ECEC  F007         	call	_BusyXLCD	;wreg free
  2011  000D70  0900               	iorlw	0
  2012  000D72  A4D8               	btfss	status,2,c
  2013  000D74  D7FB               	goto	l1213
  2014  000D76                     u60:
  2015  000D76  ECEC  F007         	call	_BusyXLCD	;wreg free
  2016  000D7A  0900               	iorlw	0
  2017  000D7C  A4D8               	btfss	status,2,c
  2018  000D7E  D7FB               	goto	u60
  2019                           
  2020                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  2021  000D80  5003               	movf	OpenXLCD@lcdtype,w,c
  2022  000D82  EC71  F007         	call	_WriteCmdXLCD
  2023  000D86                     l1219:
  2024  000D86  ECEC  F007         	call	_BusyXLCD	;wreg free
  2025  000D8A  0900               	iorlw	0
  2026  000D8C  A4D8               	btfss	status,2,c
  2027  000D8E  D7FB               	goto	l1219
  2028                           
  2029                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2030  000D90  0E08               	movlw	8
  2031  000D92  EC71  F007         	call	_WriteCmdXLCD
  2032  000D96                     l1223:
  2033  000D96  ECEC  F007         	call	_BusyXLCD	;wreg free
  2034  000D9A  0900               	iorlw	0
  2035  000D9C  A4D8               	btfss	status,2,c
  2036  000D9E  D7FB               	goto	l1223
  2037                           
  2038                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2039  000DA0  0E0F               	movlw	15
  2040  000DA2  EC71  F007         	call	_WriteCmdXLCD
  2041  000DA6                     l1227:
  2042  000DA6  ECEC  F007         	call	_BusyXLCD	;wreg free
  2043  000DAA  0900               	iorlw	0
  2044  000DAC  A4D8               	btfss	status,2,c
  2045  000DAE  D7FB               	goto	l1227
  2046                           
  2047                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  2048  000DB0  0E01               	movlw	1
  2049  000DB2  EC71  F007         	call	_WriteCmdXLCD
  2050  000DB6                     l1231:
  2051  000DB6  ECEC  F007         	call	_BusyXLCD	;wreg free
  2052  000DBA  0900               	iorlw	0
  2053  000DBC  A4D8               	btfss	status,2,c
  2054  000DBE  D7FB               	goto	l1231
  2055                           
  2056                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  2057  000DC0  0E04               	movlw	4
  2058  000DC2  EC71  F007         	call	_WriteCmdXLCD
  2059  000DC6                     l1235:
  2060  000DC6  ECEC  F007         	call	_BusyXLCD	;wreg free
  2061  000DCA  0900               	iorlw	0
  2062  000DCC  A4D8               	btfss	status,2,c
  2063  000DCE  D7FB               	goto	l1235
  2064                           
  2065                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  2066  000DD0  0E80               	movlw	128
  2067  000DD2  EC32  F007         	call	_SetDDRamAddr
  2068  000DD6  0012               	return		;funcret
  2069  000DD8                     __end_of_OpenXLCD:
  2070                           	opt callstack 0
  2071                           
  2072 ;; *************** function _WriteCmdXLCD *****************
  2073 ;; Defined at:
  2074 ;;		line 388 in file "nxlcd.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  cmd             1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  cmd             1    1[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2091 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2092 ;;Total ram usage:        1 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		_DelayFor18TCY
  2097 ;; This function is called by:
  2098 ;;		_lcdTxt
  2099 ;;		_lcd
  2100 ;;		_config_ldc
  2101 ;;		_OpenXLCD
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text14
  2106  000EE2                     __ptext14:
  2107                           	opt callstack 0
  2108  000EE2                     _WriteCmdXLCD:
  2109                           	opt callstack 26
  2110                           
  2111                           ;incstack = 0
  2112                           ;WriteCmdXLCD@cmd stored from wreg
  2113  000EE2  6E02               	movwf	WriteCmdXLCD@cmd,c
  2114                           
  2115                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  2116  000EE4  0E0F               	movlw	15
  2117  000EE6  1695               	andwf	3989,f,c	;volatile
  2118                           
  2119                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  2120  000EE8  0E0F               	movlw	15
  2121  000EEA  1683               	andwf	3971,f,c	;volatile
  2122                           
  2123                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  2124  000EEC  5002               	movf	WriteCmdXLCD@cmd,w,c
  2125  000EEE  0BF0               	andlw	240
  2126  000EF0  1283               	iorwf	3971,f,c	;volatile
  2127                           
  2128                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  2129  000EF2  948D               	bcf	3981,2,c	;volatile
  2130                           
  2131                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  2132  000EF4  908D               	bcf	3981,0,c	;volatile
  2133                           
  2134                           ;nxlcd.c: 413:         DelayFor18TCY();
  2135  000EF6  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2136                           
  2137                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  2138  000EFA  828D               	bsf	3981,1,c	;volatile
  2139                           
  2140                           ;nxlcd.c: 415:         DelayFor18TCY();
  2141  000EFC  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2142                           
  2143                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  2144  000F00  928D               	bcf	3981,1,c	;volatile
  2145                           
  2146                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  2147  000F02  0E0F               	movlw	15
  2148  000F04  1683               	andwf	3971,f,c	;volatile
  2149                           
  2150                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  2151  000F06  3802               	swapf	WriteCmdXLCD@cmd,w,c
  2152  000F08  0BF0               	andlw	240
  2153  000F0A  0BF0               	andlw	240
  2154  000F0C  1283               	iorwf	3971,f,c	;volatile
  2155                           
  2156                           ;nxlcd.c: 424:         DelayFor18TCY();
  2157  000F0E  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2158                           
  2159                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  2160  000F12  828D               	bsf	3981,1,c	;volatile
  2161                           
  2162                           ;nxlcd.c: 426:         DelayFor18TCY();
  2163  000F14  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2164                           
  2165                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  2166  000F18  928D               	bcf	3981,1,c	;volatile
  2167                           
  2168                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  2169  000F1A  0EF0               	movlw	240
  2170  000F1C  1295               	iorwf	3989,f,c	;volatile
  2171  000F1E  0012               	return		;funcret
  2172  000F20                     __end_of_WriteCmdXLCD:
  2173                           	opt callstack 0
  2174                           
  2175 ;; *************** function _SetDDRamAddr *****************
  2176 ;; Defined at:
  2177 ;;		line 171 in file "nxlcd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  DDaddr          1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  DDaddr          1    1[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0
  2192 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2194 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2195 ;;Total ram usage:        1 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		_DelayFor18TCY
  2200 ;; This function is called by:
  2201 ;;		_OpenXLCD
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text15
  2206  000E64                     __ptext15:
  2207                           	opt callstack 0
  2208  000E64                     _SetDDRamAddr:
  2209                           	opt callstack 25
  2210                           
  2211                           ;incstack = 0
  2212                           ;SetDDRamAddr@DDaddr stored from wreg
  2213  000E64  6E02               	movwf	SetDDRamAddr@DDaddr,c
  2214                           
  2215                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  2216  000E66  0E0F               	movlw	15
  2217  000E68  1695               	andwf	3989,f,c	;volatile
  2218                           
  2219                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  2220  000E6A  0E0F               	movlw	15
  2221  000E6C  1683               	andwf	3971,f,c	;volatile
  2222                           
  2223                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2224  000E6E  5002               	movf	SetDDRamAddr@DDaddr,w,c
  2225  000E70  0980               	iorlw	128
  2226  000E72  0BF0               	andlw	240
  2227  000E74  1283               	iorwf	3971,f,c	;volatile
  2228                           
  2229                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  2230  000E76  948D               	bcf	3981,2,c	;volatile
  2231                           
  2232                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  2233  000E78  908D               	bcf	3981,0,c	;volatile
  2234                           
  2235                           ;nxlcd.c: 196:         DelayFor18TCY();
  2236  000E7A  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2237                           
  2238                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  2239  000E7E  828D               	bsf	3981,1,c	;volatile
  2240                           
  2241                           ;nxlcd.c: 198:         DelayFor18TCY();
  2242  000E80  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2243                           
  2244                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  2245  000E84  928D               	bcf	3981,1,c	;volatile
  2246                           
  2247                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  2248  000E86  0E0F               	movlw	15
  2249  000E88  1683               	andwf	3971,f,c	;volatile
  2250                           
  2251                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  2252  000E8A  3802               	swapf	SetDDRamAddr@DDaddr,w,c
  2253  000E8C  0BF0               	andlw	240
  2254  000E8E  0BF0               	andlw	240
  2255  000E90  1283               	iorwf	3971,f,c	;volatile
  2256                           
  2257                           ;nxlcd.c: 207:         DelayFor18TCY();
  2258  000E92  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2259                           
  2260                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  2261  000E96  828D               	bsf	3981,1,c	;volatile
  2262                           
  2263                           ;nxlcd.c: 209:         DelayFor18TCY();
  2264  000E98  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2265                           
  2266                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  2267  000E9C  928D               	bcf	3981,1,c	;volatile
  2268                           
  2269                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  2270  000E9E  0EF0               	movlw	240
  2271  000EA0  1295               	iorwf	3989,f,c	;volatile
  2272  000EA2  0012               	return		;funcret
  2273  000EA4                     __end_of_SetDDRamAddr:
  2274                           	opt callstack 0
  2275                           
  2276 ;; *************** function _DelayXLCD *****************
  2277 ;; Defined at:
  2278 ;;		line 22 in file "nxlcd.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2294 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2295 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2296 ;;Total ram usage:        1 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    2
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_OpenXLCD
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text16
  2307  0011B2                     __ptext16:
  2308                           	opt callstack 0
  2309  0011B2                     _DelayXLCD:
  2310                           	opt callstack 26
  2311                           
  2312                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2313                           
  2314                           ;incstack = 0
  2315  0011B2  0E21               	movlw	33
  2316  0011B4  6E02               	movwf	??_DelayXLCD& (0+255),c
  2317  0011B6  0E76               	movlw	118
  2318  0011B8                     u1247:
  2319  0011B8  2EE8               	decfsz	wreg,f,c
  2320  0011BA  D7FE               	bra	u1247
  2321  0011BC  2E02               	decfsz	??_DelayXLCD& (0+255),f,c
  2322  0011BE  D7FC               	bra	u1247
  2323  0011C0  D000               	nop2	
  2324  0011C2  0012               	return		;funcret
  2325  0011C4                     __end_of_DelayXLCD:
  2326                           	opt callstack 0
  2327                           
  2328 ;; *************** function _DelayPORXLCD *****************
  2329 ;; Defined at:
  2330 ;;		line 17 in file "nxlcd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2346 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2347 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_OpenXLCD
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text17
  2359  0011C4                     __ptext17:
  2360                           	opt callstack 0
  2361  0011C4                     _DelayPORXLCD:
  2362                           	opt callstack 26
  2363                           
  2364                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  2365                           
  2366                           ;incstack = 0
  2367  0011C4  0E62               	movlw	98
  2368  0011C6  6E02               	movwf	??_DelayPORXLCD& (0+255),c
  2369  0011C8  0E66               	movlw	102
  2370  0011CA                     u1257:
  2371  0011CA  2EE8               	decfsz	wreg,f,c
  2372  0011CC  D7FE               	bra	u1257
  2373  0011CE  2E02               	decfsz	??_DelayPORXLCD& (0+255),f,c
  2374  0011D0  D7FC               	bra	u1257
  2375  0011D2  0012               	return		;funcret
  2376  0011D4                     __end_of_DelayPORXLCD:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _BusyXLCD *****************
  2380 ;; Defined at:
  2381 ;;		line 227 in file "nxlcd.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		_DelayFor18TCY
  2404 ;; This function is called by:
  2405 ;;		_lcd
  2406 ;;		_OpenXLCD
  2407 ;;		_putsXLCD
  2408 ;;		_putrsXLCD
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text18
  2413  000FD8                     __ptext18:
  2414                           	opt callstack 0
  2415  000FD8                     _BusyXLCD:
  2416                           	opt callstack 26
  2417                           
  2418                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  2419                           
  2420                           ;incstack = 0
  2421  000FD8  848D               	bsf	3981,2,c	;volatile
  2422                           
  2423                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  2424  000FDA  908D               	bcf	3981,0,c	;volatile
  2425                           
  2426                           ;nxlcd.c: 231:         DelayFor18TCY();
  2427  000FDC  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2428                           
  2429                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  2430  000FE0  828D               	bsf	3981,1,c	;volatile
  2431                           
  2432                           ;nxlcd.c: 233:         DelayFor18TCY();
  2433  000FE2  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2434                           
  2435                           ;nxlcd.c: 249:         if(PORTD&0x80)
  2436  000FE6  AE83               	btfss	3971,7,c	;volatile
  2437  000FE8  D00A               	goto	l284
  2438                           
  2439                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  2440  000FEA  928D               	bcf	3981,1,c	;volatile
  2441                           
  2442                           ;nxlcd.c: 255:                 DelayFor18TCY();
  2443  000FEC  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2444                           
  2445                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  2446  000FF0  828D               	bsf	3981,1,c	;volatile
  2447                           
  2448                           ;nxlcd.c: 257:                 DelayFor18TCY();
  2449  000FF2  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2450                           
  2451                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  2452  000FF6  928D               	bcf	3981,1,c	;volatile
  2453                           
  2454                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  2455  000FF8  948D               	bcf	3981,2,c	;volatile
  2456                           
  2457                           ;nxlcd.c: 260:                 return 1;
  2458  000FFA  0E01               	movlw	1
  2459  000FFC  0012               	return	
  2460  000FFE                     l284:
  2461                           
  2462                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  2463  000FFE  928D               	bcf	3981,1,c	;volatile
  2464                           
  2465                           ;nxlcd.c: 265:                 DelayFor18TCY();
  2466  001000  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2467                           
  2468                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  2469  001004  828D               	bsf	3981,1,c	;volatile
  2470                           
  2471                           ;nxlcd.c: 267:                 DelayFor18TCY();
  2472  001006  ECF1  F008         	call	_DelayFor18TCY	;wreg free
  2473                           
  2474                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  2475  00100A  928D               	bcf	3981,1,c	;volatile
  2476                           
  2477                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  2478  00100C  948D               	bcf	3981,2,c	;volatile
  2479                           
  2480                           ;nxlcd.c: 270:                 return 0;
  2481  00100E  0E00               	movlw	0
  2482  001010  0012               	return		;funcret
  2483  001012                     __end_of_BusyXLCD:
  2484                           	opt callstack 0
  2485                           
  2486 ;; *************** function _DelayFor18TCY *****************
  2487 ;; Defined at:
  2488 ;;		line 12 in file "nxlcd.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    2
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_SetDDRamAddr
  2513 ;;		_BusyXLCD
  2514 ;;		_WriteCmdXLCD
  2515 ;;		_WriteDataXLCD
  2516 ;;		_SetCGRamAddr
  2517 ;;		_ReadAddrXLCD
  2518 ;;		_ReadDataXLCD
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text19
  2523  0011E2                     __ptext19:
  2524                           	opt callstack 0
  2525  0011E2                     _DelayFor18TCY:
  2526                           	opt callstack 26
  2527                           
  2528                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2529                           
  2530                           ;incstack = 0
  2531  0011E2  0E21               	movlw	33
  2532  0011E4                     u1267:
  2533  0011E4  2EE8               	decfsz	wreg,f,c
  2534  0011E6  D7FE               	bra	u1267
  2535  0011E8  F000               	nop	
  2536  0011EA  0012               	return		;funcret
  2537  0011EC                     __end_of_DelayFor18TCY:
  2538                           	opt callstack 0
  2539                           
  2540 ;; *************** function _config_interrupcao *****************
  2541 ;; Defined at:
  2542 ;;		line 253 in file "main.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		None
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text20
  2571  0011EC                     __ptext20:
  2572                           	opt callstack 0
  2573  0011EC                     _config_interrupcao:
  2574                           	opt callstack 28
  2575                           
  2576                           ;main.c: 254:     RCONbits.IPEN = 1;
  2577                           
  2578                           ;incstack = 0
  2579  0011EC  8ED0               	bsf	4048,7,c	;volatile
  2580                           
  2581                           ;main.c: 255:     INTCONbits.GIEH = 1;
  2582  0011EE  8EF2               	bsf	4082,7,c	;volatile
  2583                           
  2584                           ;main.c: 256:     INTCONbits.GIEL = 1;
  2585  0011F0  8CF2               	bsf	4082,6,c	;volatile
  2586  0011F2  0012               	return		;funcret
  2587  0011F4                     __end_of_config_interrupcao:
  2588                           	opt callstack 0
  2589                           
  2590 ;; *************** function _atoi *****************
  2591 ;; Defined at:
  2592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  s               3    8[COMRAM] PTR const unsigned char 
  2595 ;;		 -> ROM(32767), 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  n               2   22[COMRAM] int 
  2598 ;;  neg             2   15[COMRAM] int 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  2    8[COMRAM] int 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2608 ;;      Params:         3       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2611 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:       16 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    3
  2615 ;; This function calls:
  2616 ;;		___wmul
  2617 ;;		_isdigit
  2618 ;;		_isspace
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text21
  2625  000BCC                     __ptext21:
  2626                           	opt callstack 0
  2627  000BCC                     _atoi:
  2628                           	opt callstack 27
  2629                           
  2630                           ;incstack = 0
  2631  000BCC  0E00               	movlw	0
  2632  000BCE  6E18               	movwf	atoi@n+1,c
  2633  000BD0  0E00               	movlw	0
  2634  000BD2  6E17               	movwf	atoi@n,c
  2635  000BD4  0E00               	movlw	0
  2636  000BD6  6E11               	movwf	atoi@neg+1,c
  2637  000BD8  0E00               	movlw	0
  2638  000BDA  6E10               	movwf	atoi@neg,c
  2639  000BDC  D006               	goto	l1911
  2640  000BDE                     l1909:
  2641  000BDE  0E01               	movlw	1
  2642  000BE0  2609               	addwf	atoi@s,f,c
  2643  000BE2  0E00               	movlw	0
  2644  000BE4  220A               	addwfc	atoi@s+1,f,c
  2645  000BE6  0E00               	movlw	0
  2646  000BE8  220B               	addwfc	atoi@s+2,f,c
  2647  000BEA                     l1911:
  2648  000BEA  0E01               	movlw	1
  2649  000BEC  6E16               	movwf	_atoi$1310,c
  2650  000BEE  C009  FFF6         	movff	atoi@s,tblptrl
  2651  000BF2  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2652  000BF6  C00B  FFF8         	movff	atoi@s+2,tblptru
  2653  000BFA  0008               	tblrd		*
  2654  000BFC  50F5               	movf	tablat,w,c
  2655  000BFE  0A20               	xorlw	32
  2656  000C00  B4D8               	btfsc	status,2,c
  2657  000C02  D01A               	goto	l1919
  2658  000C04  0EF7               	movlw	247
  2659  000C06  6E0C               	movwf	??_atoi& (0+255),c
  2660  000C08  0EFF               	movlw	255
  2661  000C0A  6E0D               	movwf	(??_atoi+1)& (0+255),c
  2662  000C0C  C009  FFF6         	movff	atoi@s,tblptrl
  2663  000C10  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2664  000C14  C00B  FFF8         	movff	atoi@s+2,tblptru
  2665  000C18  0008               	tblrd		*
  2666  000C1A  50F5               	movf	tablat,w,c
  2667  000C1C  6E0E               	movwf	(??_atoi+2)& (0+255),c
  2668  000C1E  6A0F               	clrf	(??_atoi+3)& (0+255),c
  2669  000C20  500C               	movf	??_atoi,w,c
  2670  000C22  260E               	addwf	??_atoi+2,f,c
  2671  000C24  500D               	movf	??_atoi+1,w,c
  2672  000C26  220F               	addwfc	??_atoi+3,f,c
  2673  000C28  500F               	movf	??_atoi+3,w,c
  2674  000C2A  E104               	bnz	u1050
  2675  000C2C  0E05               	movlw	5
  2676  000C2E  5C0E               	subwf	??_atoi+2,w,c
  2677  000C30  A0D8               	btfss	status,0,c
  2678  000C32  D002               	goto	l1919
  2679  000C34                     u1050:
  2680  000C34  0E00               	movlw	0
  2681  000C36  6E16               	movwf	_atoi$1310,c
  2682  000C38                     l1919:
  2683  000C38  C016  F012         	movff	_atoi$1310,_atoi$1309
  2684  000C3C  6A13               	clrf	_atoi$1309+1,c
  2685  000C3E  5012               	movf	_atoi$1309,w,c
  2686  000C40  1013               	iorwf	_atoi$1309+1,w,c
  2687  000C42  B4D8               	btfsc	status,2,c
  2688  000C44  D00C               	goto	l1929
  2689  000C46  D7CB               	goto	l1909
  2690  000C48                     l1925:
  2691  000C48  0E00               	movlw	0
  2692  000C4A  6E11               	movwf	atoi@neg+1,c
  2693  000C4C  0E01               	movlw	1
  2694  000C4E  6E10               	movwf	atoi@neg,c
  2695  000C50                     l1927:
  2696  000C50  0E01               	movlw	1
  2697  000C52  2609               	addwf	atoi@s,f,c
  2698  000C54  0E00               	movlw	0
  2699  000C56  220A               	addwfc	atoi@s+1,f,c
  2700  000C58  0E00               	movlw	0
  2701  000C5A  220B               	addwfc	atoi@s+2,f,c
  2702  000C5C  D032               	goto	l1935
  2703  000C5E                     l1929:
  2704  000C5E  C009  FFF6         	movff	atoi@s,tblptrl
  2705  000C62  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2706  000C66  C00B  FFF8         	movff	atoi@s+2,tblptru
  2707  000C6A  0008               	tblrd		*
  2708  000C6C  50F5               	movf	tablat,w,c
  2709  000C6E  6E0C               	movwf	??_atoi& (0+255),c
  2710  000C70  6A0D               	clrf	(??_atoi+1)& (0+255),c
  2711                           
  2712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2713                           ; Switch size 1, requested type "simple"
  2714                           ; Number of cases is 1, Range of values is 0 to 0
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte            4     3 (average)
  2718                           ;	Chosen strategy is simple_byte
  2719  000C72  500D               	movf	??_atoi+1,w,c
  2720  000C74  0A00               	xorlw	0	; case 0
  2721  000C76  A4D8               	btfss	status,2,c
  2722  000C78  D024               	goto	l1935
  2723                           
  2724                           ; Switch size 1, requested type "simple"
  2725                           ; Number of cases is 2, Range of values is 43 to 45
  2726                           ; switch strategies available:
  2727                           ; Name         Instructions Cycles
  2728                           ; simple_byte            7     4 (average)
  2729                           ;	Chosen strategy is simple_byte
  2730  000C7A  500C               	movf	??_atoi,w,c
  2731  000C7C  0A2B               	xorlw	43	; case 43
  2732  000C7E  B4D8               	btfsc	status,2,c
  2733  000C80  D7E7               	goto	l1927
  2734  000C82  0A06               	xorlw	6	; case 45
  2735  000C84  B4D8               	btfsc	status,2,c
  2736  000C86  D7E0               	goto	l1925
  2737  000C88  D01C               	goto	l1935
  2738  000C8A                     l1931:
  2739  000C8A  C017  F002         	movff	atoi@n,___wmul@multiplier
  2740  000C8E  C018  F003         	movff	atoi@n+1,___wmul@multiplier+1
  2741  000C92  0E00               	movlw	0
  2742  000C94  6E05               	movwf	___wmul@multiplicand+1,c
  2743  000C96  0E0A               	movlw	10
  2744  000C98  6E04               	movwf	___wmul@multiplicand,c
  2745  000C9A  EC93  F008         	call	___wmul	;wreg free
  2746  000C9E  C009  FFF6         	movff	atoi@s,tblptrl
  2747  000CA2  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2748  000CA6  C00B  FFF8         	movff	atoi@s+2,tblptru
  2749  000CAA  0008               	tblrd		*
  2750  000CAC  50F5               	movf	tablat,w,c
  2751  000CAE  5E02               	subwf	?___wmul,f,c
  2752  000CB0  0E00               	movlw	0
  2753  000CB2  5A03               	subwfb	?___wmul+1,f,c
  2754  000CB4  0E30               	movlw	48
  2755  000CB6  2402               	addwf	?___wmul,w,c
  2756  000CB8  6E17               	movwf	atoi@n,c
  2757  000CBA  0E00               	movlw	0
  2758  000CBC  2003               	addwfc	?___wmul+1,w,c
  2759  000CBE  6E18               	movwf	atoi@n+1,c
  2760  000CC0  D7C7               	goto	l1927
  2761  000CC2                     l1935:
  2762  000CC2  0ED0               	movlw	208
  2763  000CC4  6E0C               	movwf	??_atoi& (0+255),c
  2764  000CC6  0EFF               	movlw	255
  2765  000CC8  6E0D               	movwf	(??_atoi+1)& (0+255),c
  2766  000CCA  C009  FFF6         	movff	atoi@s,tblptrl
  2767  000CCE  C00A  FFF7         	movff	atoi@s+1,tblptrh
  2768  000CD2  C00B  FFF8         	movff	atoi@s+2,tblptru
  2769  000CD6  0008               	tblrd		*
  2770  000CD8  50F5               	movf	tablat,w,c
  2771  000CDA  6E0E               	movwf	(??_atoi+2)& (0+255),c
  2772  000CDC  6A0F               	clrf	(??_atoi+3)& (0+255),c
  2773  000CDE  500C               	movf	??_atoi,w,c
  2774  000CE0  260E               	addwf	??_atoi+2,f,c
  2775  000CE2  500D               	movf	??_atoi+1,w,c
  2776  000CE4  220F               	addwfc	??_atoi+3,f,c
  2777  000CE6  500F               	movf	??_atoi+3,w,c
  2778  000CE8  E106               	bnz	u1070
  2779  000CEA  0E0A               	movlw	10
  2780  000CEC  5C0E               	subwf	??_atoi+2,w,c
  2781  000CEE  B0D8               	btfsc	status,0,c
  2782  000CF0  D002               	goto	u1070
  2783  000CF2  0E01               	movlw	1
  2784  000CF4  D001               	goto	u1080
  2785  000CF6                     u1070:
  2786  000CF6  0E00               	movlw	0
  2787  000CF8                     u1080:
  2788  000CF8  6E14               	movwf	_atoi$1311,c
  2789  000CFA  6A15               	clrf	_atoi$1311+1,c
  2790  000CFC  5014               	movf	_atoi$1311,w,c
  2791  000CFE  1015               	iorwf	_atoi$1311+1,w,c
  2792  000D00  A4D8               	btfss	status,2,c
  2793  000D02  D7C3               	goto	l1931
  2794  000D04  5010               	movf	atoi@neg,w,c
  2795  000D06  1011               	iorwf	atoi@neg+1,w,c
  2796  000D08  A4D8               	btfss	status,2,c
  2797  000D0A  D00D               	goto	l1018
  2798  000D0C  C017  F00C         	movff	atoi@n,??_atoi
  2799  000D10  C018  F00D         	movff	atoi@n+1,??_atoi+1
  2800  000D14  1E0C               	comf	??_atoi,f,c
  2801  000D16  1E0D               	comf	??_atoi+1,f,c
  2802  000D18  4A0C               	infsnz	??_atoi,f,c
  2803  000D1A  2A0D               	incf	??_atoi+1,f,c
  2804  000D1C  C00C  F009         	movff	??_atoi,?_atoi
  2805  000D20  C00D  F00A         	movff	??_atoi+1,?_atoi+1
  2806  000D24  0012               	return	
  2807  000D26                     l1018:
  2808  000D26  C017  F009         	movff	atoi@n,?_atoi
  2809  000D2A  C018  F00A         	movff	atoi@n+1,?_atoi+1
  2810  000D2E  0012               	return		;funcret
  2811  000D30                     __end_of_atoi:
  2812                           	opt callstack 0
  2813                           
  2814 ;; *************** function _isspace *****************
  2815 ;; Defined at:
  2816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  c               2    1[COMRAM] int 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2    1[COMRAM] int 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2830 ;;      Params:         2       0       0       0       0       0       0       0       0
  2831 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2832 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2833 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2834 ;;Total ram usage:        7 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_atoi
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text22
  2845  000F20                     __ptext22:
  2846                           	opt callstack 0
  2847  000F20                     _isspace:
  2848                           	opt callstack 27
  2849                           
  2850                           ;incstack = 0
  2851  000F20  0E01               	movlw	1
  2852  000F22  6E08               	movwf	_isspace$1327,c
  2853  000F24  0E20               	movlw	32
  2854  000F26  1802               	xorwf	isspace@c,w,c
  2855  000F28  1003               	iorwf	isspace@c+1,w,c
  2856  000F2A  B4D8               	btfsc	status,2,c
  2857  000F2C  D014               	goto	l1757
  2858  000F2E  0EF7               	movlw	247
  2859  000F30  6E04               	movwf	??_isspace& (0+255),c
  2860  000F32  0EFF               	movlw	255
  2861  000F34  6E05               	movwf	(??_isspace+1)& (0+255),c
  2862  000F36  C002  F006         	movff	isspace@c,??_isspace+2
  2863  000F3A  C003  F007         	movff	isspace@c+1,??_isspace+3
  2864  000F3E  5004               	movf	??_isspace,w,c
  2865  000F40  2606               	addwf	??_isspace+2,f,c
  2866  000F42  5005               	movf	??_isspace+1,w,c
  2867  000F44  2207               	addwfc	??_isspace+3,f,c
  2868  000F46  5007               	movf	??_isspace+3,w,c
  2869  000F48  E104               	bnz	u750
  2870  000F4A  0E05               	movlw	5
  2871  000F4C  5C06               	subwf	??_isspace+2,w,c
  2872  000F4E  A0D8               	btfss	status,0,c
  2873  000F50  D002               	goto	l1757
  2874  000F52                     u750:
  2875  000F52  0E00               	movlw	0
  2876  000F54  6E08               	movwf	_isspace$1327,c
  2877  000F56                     l1757:
  2878  000F56  C008  F002         	movff	_isspace$1327,?_isspace
  2879  000F5A  6A03               	clrf	?_isspace+1,c
  2880  000F5C  0012               	return		;funcret
  2881  000F5E                     __end_of_isspace:
  2882                           	opt callstack 0
  2883                           
  2884 ;; *************** function _isdigit *****************
  2885 ;; Defined at:
  2886 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  c               2    1[COMRAM] int 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2    1[COMRAM] int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2900 ;;      Params:         2       0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2902 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        6 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    2
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_atoi
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text23
  2915  00107A                     __ptext23:
  2916                           	opt callstack 0
  2917  00107A                     _isdigit:
  2918                           	opt callstack 27
  2919                           
  2920                           ;incstack = 0
  2921  00107A  0ED0               	movlw	208
  2922  00107C  6E04               	movwf	??_isdigit& (0+255),c
  2923  00107E  0EFF               	movlw	255
  2924  001080  6E05               	movwf	(??_isdigit+1)& (0+255),c
  2925  001082  C002  F006         	movff	isdigit@c,??_isdigit+2
  2926  001086  C003  F007         	movff	isdigit@c+1,??_isdigit+3
  2927  00108A  5004               	movf	??_isdigit,w,c
  2928  00108C  2606               	addwf	??_isdigit+2,f,c
  2929  00108E  5005               	movf	??_isdigit+1,w,c
  2930  001090  2207               	addwfc	??_isdigit+3,f,c
  2931  001092  5007               	movf	??_isdigit+3,w,c
  2932  001094  E106               	bnz	u760
  2933  001096  0E0A               	movlw	10
  2934  001098  5C06               	subwf	??_isdigit+2,w,c
  2935  00109A  B0D8               	btfsc	status,0,c
  2936  00109C  D002               	goto	u760
  2937  00109E  0E01               	movlw	1
  2938  0010A0  D001               	goto	u770
  2939  0010A2                     u760:
  2940  0010A2  0E00               	movlw	0
  2941  0010A4                     u770:
  2942  0010A4  6E02               	movwf	?_isdigit,c
  2943  0010A6  6A03               	clrf	?_isdigit+1,c
  2944  0010A8  0012               	return		;funcret
  2945  0010AA                     __end_of_isdigit:
  2946                           	opt callstack 0
  2947                           
  2948 ;; *************** function ___wmul *****************
  2949 ;; Defined at:
  2950 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  multiplier      2    1[COMRAM] unsigned int 
  2953 ;;  multiplicand    2    3[COMRAM] unsigned int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  product         2    5[COMRAM] unsigned int 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  2    1[COMRAM] unsigned int 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, prodl, prodh
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2965 ;;      Params:         4       0       0       0       0       0       0       0       0
  2966 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2968 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2969 ;;Total ram usage:        6 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_atoi
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text24
  2980  001126                     __ptext24:
  2981                           	opt callstack 0
  2982  001126                     ___wmul:
  2983                           	opt callstack 27
  2984                           
  2985                           ;incstack = 0
  2986  001126  5002               	movf	___wmul@multiplier,w,c
  2987  001128  0204               	mulwf	___wmul@multiplicand,c
  2988  00112A  CFF3 F006          	movff	prodl,___wmul@product
  2989  00112E  CFF4 F007          	movff	prodh,___wmul@product+1
  2990  001132  5002               	movf	___wmul@multiplier,w,c
  2991  001134  0205               	mulwf	___wmul@multiplicand+1,c
  2992  001136  50F3               	movf	prodl,w,c
  2993  001138  2607               	addwf	___wmul@product+1,f,c
  2994  00113A  5003               	movf	___wmul@multiplier+1,w,c
  2995  00113C  0204               	mulwf	___wmul@multiplicand,c
  2996  00113E  50F3               	movf	prodl,w,c
  2997  001140  2607               	addwf	___wmul@product+1,f,c
  2998  001142  C006  F002         	movff	___wmul@product,?___wmul
  2999  001146  C007  F003         	movff	___wmul@product+1,?___wmul+1
  3000  00114A  0012               	return		;funcret
  3001  00114C                     __end_of___wmul:
  3002                           	opt callstack 0
  3003                           
  3004 ;; *************** function _interrupcao *****************
  3005 ;; Defined at:
  3006 ;;		line 194 in file "main.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    1
  3027 ;; This function calls:
  3028 ;;		_varreduraTeclado
  3029 ;; This function is called by:
  3030 ;;		Interrupt level 2
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	intcode
  3035  000008                     __pintcode:
  3036                           	opt callstack 0
  3037  000008                     _interrupcao:
  3038                           	opt callstack 24
  3039                           
  3040                           ;incstack = 0
  3041  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3042  00000A  ED6C  F008         	call	int_func,f	;refresh shadow registers
  3043                           
  3044                           	psect	intcode_body
  3045  0010D8                     __pintcode_body:
  3046                           	opt callstack 24
  3047  0010D8                     int_func:
  3048                           	opt callstack 24
  3049  0010D8  0006               	pop		; remove dummy address from shadow register refresh
  3050                           
  3051                           ;main.c: 195:     if (INTCON3bits.INT1IF) {
  3052  0010DA  A0F0               	btfss	4080,0,c	;volatile
  3053  0010DC  D002               	goto	i2l166
  3054                           
  3055                           ;main.c: 197:         INTCON3bits.INT1IF = 0;
  3056  0010DE  90F0               	bcf	4080,0,c	;volatile
  3057                           
  3058                           ;main.c: 198:     } else if (INTCON3bits.INT2IF) {
  3059  0010E0  D00D               	goto	i2l171
  3060  0010E2                     i2l166:
  3061  0010E2  A2F0               	btfss	4080,1,c	;volatile
  3062  0010E4  D002               	goto	i2l168
  3063                           
  3064                           ;main.c: 200:         INTCON3bits.INT2IF = 0;
  3065  0010E6  92F0               	bcf	4080,1,c	;volatile
  3066                           
  3067                           ;main.c: 201:     } else if (INTCONbits.TMR0IF) {
  3068  0010E8  D009               	goto	i2l171
  3069  0010EA                     i2l168:
  3070  0010EA  A4F2               	btfss	4082,2,c	;volatile
  3071  0010EC  D007               	goto	i2l171
  3072                           
  3073                           ;main.c: 202:         varreduraTeclado();
  3074  0010EE  ECAF  F007         	call	_varreduraTeclado	;wreg free
  3075                           
  3076                           ;main.c: 203:         TMR0 = 100;
  3077  0010F2  0E00               	movlw	0
  3078  0010F4  6ED7               	movwf	4055,c	;volatile
  3079  0010F6  0E64               	movlw	100
  3080  0010F8  6ED6               	movwf	4054,c	;volatile
  3081                           
  3082                           ;main.c: 204:         INTCONbits.TMR0IF = 0;
  3083  0010FA  94F2               	bcf	4082,2,c	;volatile
  3084  0010FC                     i2l171:
  3085  0010FC  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3086  0010FE  0011               	retfie		f
  3087  001100                     __end_of_interrupcao:
  3088                           	opt callstack 0
  3089                           
  3090 ;; *************** function _varreduraTeclado *****************
  3091 ;; Defined at:
  3092 ;;		line 119 in file "main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3108 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3109 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3110 ;;Total ram usage:        1 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_interrupcao
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text26
  3120  000F5E                     __ptext26:
  3121                           	opt callstack 0
  3122  000F5E                     _varreduraTeclado:
  3123                           	opt callstack 24
  3124                           
  3125                           ;main.c: 120:     if(!PORTBbits.RB3){
  3126                           
  3127                           ;incstack = 0
  3128  000F5E  B681               	btfsc	3969,3,c	;volatile
  3129  000F60  D003               	goto	i2l71
  3130                           
  3131                           ;main.c: 121:         PORTBbits.RB3 = 1;
  3132  000F62  8681               	bsf	3969,3,c	;volatile
  3133                           
  3134                           ;main.c: 122:         PORTBbits.RB2 = 0;
  3135  000F64  9481               	bcf	3969,2,c	;volatile
  3136                           
  3137                           ;main.c: 123:     }else if(!PORTBbits.RB2){
  3138  000F66  D00E               	goto	i2l74
  3139  000F68                     i2l71:
  3140  000F68  B481               	btfsc	3969,2,c	;volatile
  3141  000F6A  D003               	goto	i2l73
  3142                           
  3143                           ;main.c: 124:         PORTBbits.RB2 = 1;
  3144  000F6C  8481               	bsf	3969,2,c	;volatile
  3145                           
  3146                           ;main.c: 125:         PORTBbits.RB1 = 0;
  3147  000F6E  9281               	bcf	3969,1,c	;volatile
  3148                           
  3149                           ;main.c: 126:     }else if(!PORTBbits.RB1){
  3150  000F70  D009               	goto	i2l74
  3151  000F72                     i2l73:
  3152  000F72  B281               	btfsc	3969,1,c	;volatile
  3153  000F74  D003               	goto	i2l75
  3154                           
  3155                           ;main.c: 127:         PORTBbits.RB1 = 1;
  3156  000F76  8281               	bsf	3969,1,c	;volatile
  3157                           
  3158                           ;main.c: 128:         PORTBbits.RB0 = 0;
  3159  000F78  9081               	bcf	3969,0,c	;volatile
  3160                           
  3161                           ;main.c: 129:     }else if(!PORTBbits.RB0){
  3162  000F7A  D004               	goto	i2l74
  3163  000F7C                     i2l75:
  3164  000F7C  B081               	btfsc	3969,0,c	;volatile
  3165  000F7E  D002               	goto	i2l74
  3166                           
  3167                           ;main.c: 130:         PORTBbits.RB0 = 1;
  3168  000F80  8081               	bsf	3969,0,c	;volatile
  3169                           
  3170                           ;main.c: 131:         PORTBbits.RB3 = 0;
  3171  000F82  9681               	bcf	3969,3,c	;volatile
  3172  000F84                     i2l74:
  3173                           
  3174                           ;main.c: 133:     PORTDbits.RD0 = !PORTDbits.RD0;
  3175  000F84  B083               	btfsc	3971,0,c	;volatile
  3176  000F86  D003               	goto	i2u26_40
  3177  000F88  6A01               	clrf	??_varreduraTeclado& (0+255),c
  3178  000F8A  2A01               	incf	??_varreduraTeclado& (0+255),f,c
  3179  000F8C  D001               	goto	i2u27_48
  3180  000F8E                     i2u26_40:
  3181  000F8E  6A01               	clrf	??_varreduraTeclado& (0+255),c
  3182  000F90                     i2u27_48:
  3183  000F90  5083               	movf	3971,w,c	;volatile
  3184  000F92  1801               	xorwf	??_varreduraTeclado,w,c
  3185  000F94  0BFE               	andlw	-2
  3186  000F96  1801               	xorwf	??_varreduraTeclado,w,c
  3187  000F98  6E83               	movwf	3971,c	;volatile
  3188  000F9A  0012               	return		;funcret
  3189  000F9C                     __end_of_varreduraTeclado:
  3190                           	opt callstack 0
  3191                           
  3192                           	psect	rparam
  3193  0000                     
  3194                           	psect	temp
  3195  00005C                     btemp:
  3196                           	opt callstack 0
  3197  00005C                     	ds	1
  3198  0000                     int$flags	set	btemp
  3199  0000                     wtemp8	set	btemp+1
  3200  0000                     ttemp5	set	btemp+1
  3201  0000                     ttemp6	set	btemp+4
  3202  0000                     ttemp7	set	btemp+8
  3203                           tosu	equ	0xFFF
  3204                           tosh	equ	0xFFE
  3205                           tosl	equ	0xFFD
  3206                           stkptr	equ	0xFFC
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           pcl	equ	0xFF9
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           indf0	equ	0xFEF
  3217                           postinc0	equ	0xFEE
  3218                           postdec0	equ	0xFED
  3219                           preinc0	equ	0xFEC
  3220                           plusw0	equ	0xFEB
  3221                           fsr0h	equ	0xFEA
  3222                           fsr0l	equ	0xFE9
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           postinc1	equ	0xFE6
  3226                           postdec1	equ	0xFE5
  3227                           preinc1	equ	0xFE4
  3228                           plusw1	equ	0xFE3
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           bsr	equ	0xFE0
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           preinc2	equ	0xFDC
  3236                           plusw2	equ	0xFDB
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 

    lcdTxt@txt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_tecladoMatricial
    _verificaMemoria->_EEPROM_Ler
    _lcd->_WriteCmdXLCD
    _lcd->_WriteDataXLCD
    _config_ldc->_lcdTxt
    _lcdTxt->_putrsXLCD
    _lcdTxt->_putsXLCD
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _atoi->_isspace

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_varreduraTeclado

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0    3644
                                             29 COMRAM    44    44      0
                         _EEPROM_Ler
                               _atoi
                 _config_interrupcao
                         _config_ldc
                         _config_led
                     _config_teclado
                      _config_timer0
                                _lcd
                   _tecladoMatricial
                    _verificaMemoria
 ---------------------------------------------------------------------------------
 (1) _verificaMemoria                                      2     0      2     250
                                              3 COMRAM     2     0      2
                         _EEPROM_Ler
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Ler                                           2     0      2     250
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _tecladoMatricial                                    28    26      2     318
                                              1 COMRAM    28    26      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 19    17      2     294
                                              2 COMRAM    19    17      2
                           _BusyXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_teclado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ldc                                           0     0      0     535
                           _OpenXLCD
                       _WriteCmdXLCD
                             _lcdTxt
 ---------------------------------------------------------------------------------
 (2) _lcdTxt                                               3     1      2     430
                                              4 COMRAM     3     1      2
                       _WriteCmdXLCD
                          _putrsXLCD
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (3) _putsXLCD                                             2     0      2     151
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2     151
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      75
                                              2 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                16    13      3    1152
                                              8 COMRAM    16    13      3
                         _EEPROM_Ler (ARG)
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcao                                          0     0      0       0
                   _varreduraTeclado
 ---------------------------------------------------------------------------------
 (7) _varreduraTeclado                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Ler
   _atoi
     _EEPROM_Ler (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _isspace (ARG)
   _config_interrupcao
   _config_ldc
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _lcdTxt
       _WriteCmdXLCD
         _DelayFor18TCY
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
   _config_led
   _config_teclado
   _config_timer0
   _lcd
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _tecladoMatricial
   _verificaMemoria
     _EEPROM_Ler

 _interrupcao (ROOT)
   _varreduraTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      20        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 31 21:54:23 2022

                         l81 0ABA                           l99 0B12                           u60 0D76  
        ___wmul@multiplicand 0004                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
          ?_tecladoMatricial 0002                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
      tecladoMatricial@tecla 001C                 __CFG_CP3$OFF 000000                          l117 0B6A  
                        l284 0FFE                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        u810 0E24                          u750 0F52                          u760 10A2  
                        u770 10A4                          u781 0DE2                          u790 0DF4  
               __CFG_BOR$OFF 000000           ??_tecladoMatricial 0004                          _lcd 0DD8  
      __size_of_WriteCmdXLCD 003E                          wreg 000FE8                 __CFG_FOSC$HS 000000  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l2001 0944  
                       l1018 0D26                         l1213 0D6C                         l2021 09D4  
                       l1231 0DB6                         l1223 0D96                         l2031 09F0  
                       l2017 099A                         l1235 0DC6                         l1227 0DA6  
                       l1219 0D86                         l2035 0A2A                         l1713 1066  
                       l1801 0A7C                         l1707 1048                         l1723 1032  
                       l1811 0AA8                         l1803 0A84                         l1717 1014  
                       l1805 0A8E                         l1813 0AB2                         l1911 0BEA  
                       l1831 0AEE                         l1807 0A96                         l1903 111C  
                       l1825 0AD4                         l1833 0AF8                         l1809 0AA0  
                       ?_lcd 0003                         l1931 0C8A                         l1851 0B34  
                       l1835 0B00                         l1827 0ADC                         l1757 0F56  
                       l1925 0C48                         l1909 0BDE                         l1773 0E10  
                       l1853 0B3E                         l1861 0B62                         l1829 0AE6  
                       l1837 0B0A                         l1935 0CC2                         l1927 0C50  
                       l1919 0C38                         l1783 0E44                         l1855 0B46  
                       l1929 0C5E                         l1777 0E2A                         l1785 0E4A  
                       l1873 0B84                         l1881 0BA8                         l1849 0B2C  
                       l1857 0B50                         l1883 0BB0                         l1875 0B8C  
                       l1859 0B58                         l1971 088C                         l1877 0B96  
                       l1885 0BBA                         l1965 0836                         l1879 0B9E  
                       l1887 0BC2                         l1977 0894                         l1995 093C  
                       l1989 08EC                         STR_1 080B                         STR_2 0801  
                       u1050 0C34                         u1130 08E4                         u1140 093C  
                       u1070 0CF6                         u1150 098A                         u1080 0CF8  
                       u1160 09CC                         u1217 0A52                         u1170 09E8  
                       u1227 0E5A                         u1180 0A22                         u1237 0FA8  
                       u1190 0A3E                         u1247 11B8                         u1257 11CA  
                       u1267 11E4                         i2l71 0F68                         i2l73 0F72  
                       i2l74 0F84                         i2l75 0F7C                         _RBPU 007F8F  
                       _TMR0 000FD6                         _atoi 0BCC                         _main 080E  
  __size_of_varreduraTeclado 003E             ?_verificaMemoria 0004                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 005C       __size_of_WriteDataXLCD 003E  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000          __size_of_EEPROM_Ler 000E                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_lcd 0005                 _WriteCmdXLCD 0EE2  
              __CFG_PLLDIV$1 000000                        ?_atoi 0009                ?_SetDDRamAddr 0001  
                      ?_main 0001                        _EEADR 000FA9                        i2l171 10FC  
                      i2l166 10E2                        i2l168 10EA                        _PORTD 000F83  
              __CFG_USBDIV$1 000000                        _TRISD 000F95  __size_of_config_interrupcao 0008  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000              __end_of_isdigit 10AA  
                      atoi@n 0017                        atoi@s 0009                        main@i 0048  
            __end_of_isspace 0F5E                        tablat 000FF5                        plusw1 000FE3  
                      plusw2 000FDB                        ttemp5 005D                        ttemp6 0060  
                      ttemp7 0064                        status 000FD8              ??_config_timer0 0002  
                      wtemp8 005D               __CFG_ICPRT$OFF 000000              __initialization 10AA  
               ?_interrupcao 0001                 __end_of_atoi 0D30                 __end_of_main 0A62  
           __end_of_BusyXLCD 1012           __size_of_DelayXLCD 0012        __size_of_DelayPORXLCD 0010  
             ??_SetDDRamAddr 0002             __end_of_OpenXLCD 0DD8                       ??_atoi 000C  
                     ??_main 001E                __activetblptr 000002                _WriteDataXLCD 0EA4  
            __CFG_CCP2MX$OFF 000000                       _ADCON1 000FC1                       _EEDATA 000FA8  
                     _EECON2 000FA7                 _DelayPORXLCD 11C4               __CFG_XINST$OFF 000000  
                     ___wmul 1126         _tecladoMatricial$630 0010         _tecladoMatricial$631 0012  
       _tecladoMatricial$632 0014         _tecladoMatricial$624 0004         _tecladoMatricial$633 0016  
       _tecladoMatricial$625 0006         _tecladoMatricial$634 0018         _tecladoMatricial$626 0008  
       _tecladoMatricial$635 001A         _tecladoMatricial$627 000A         _tecladoMatricial$628 000C  
       _tecladoMatricial$629 000E                       _lcdTxt 0F9C                       _cursor 005A  
             ?_WriteDataXLCD 0001                 ??_EEPROM_Ler 0004                 __pdataCOMRAM 004A  
                  ??_isdigit 0004                 __mediumconst 0000                    ??_isspace 0004  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
           ??_config_teclado 0002             __end_of_putsXLCD 1046            __end_of_DelayXLCD 11C4  
                 __accesstop 0060      __end_of__initialization 10CA              __CFG_PBADEN$OFF 000000  
           _varreduraTeclado 0F5E                ___rparam_used 000001           __end_of_EEPROM_Ler 11E2  
             __pcstackCOMRAM 0001       __size_of_DelayFor18TCY 000A                    ?_BusyXLCD 0001  
  __size_of_tecladoMatricial 016A              WriteCmdXLCD@cmd 0002         __end_of_SetDDRamAddr 0EA4  
                  ?_OpenXLCD 0001            WriteDataXLCD@data 0002                      ?___wmul 0002  
                    ?_lcdTxt 0005         __size_of_interrupcao 10F8              ??_WriteDataXLCD 0002  
                 _config_ldc 1186                   _config_led 11F4                      i2u26_40 0F8E  
                    i2u27_48 0F90           __size_of_putrsXLCD 0034                   ??_BusyXLCD 0002  
            __CFG_VREGEN$OFF 000000                   ??_OpenXLCD 0003                      __Hparam 0000  
                    __Lparam 0000                _DelayFor18TCY 11E2     __size_of_verificaMemoria 0026  
            __size_of___wmul 0026                    ?_putsXLCD 0003                 __psmallconst 0800  
            __size_of_lcdTxt 003C              __CFG_STVREN$OFF 000000               main@senhaAdmin 0032  
                    __pcinit 10AA              putrsXLCD@buffer 0003               main@senhaAtual 002A  
                    __ramtop 0800                      __ptext0 080E                      __ptext1 1100  
                    __ptext2 11D4                      __ptext3 0A62                      __ptext4 0DD8  
 __end_of_config_interrupcao 11F4                      __ptext5 116C                      __ptext6 114C  
                    __ptext7 11F4                      __ptext8 1186                      __ptext9 0F9C  
                  _T0CONbits 000FD5                 __size_of_lcd 008C                      _isdigit 107A  
                    _isspace 0F20                      atoi@neg 0010               __pintcode_body 10D8  
       end_of_initialization 10CA                __Lmediumconst 0000                      int_func 10D8  
                 lcd@teclado 0006        __end_of_config_timer0 1186               ?_DelayFor18TCY 0001  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_putsXLCD 0005  
          __end_of_putrsXLCD 107A                    _PORTBbits 000F81                    _PORTCbits 000F82  
                  _PORTDbits 000F83     __end_of_varreduraTeclado 0F9C                EEPROM_Ler@dir 0002  
                ?_config_ldc 0001                  ?_config_led 0001                    _TRISBbits 000F93  
                  _TRISDbits 000F95                    _TRISEbits 000F96        __size_of_SetDDRamAddr 0040  
           _tecladoMatricial 0A62                    _DelayXLCD 11B2               __end_of___wmul 114C  
              __pidataCOMRAM 11A0               __end_of_lcdTxt 0FD8                 _SetDDRamAddr 0E64  
          ??_verificaMemoria 0006           SetDDRamAddr@DDaddr 0002          start_initialization 10AA  
                __end_of_lcd 0E64            __size_of_BusyXLCD 003A                   ?_DelayXLCD 0001  
            ??_DelayFor18TCY 0002            __size_of_OpenXLCD 00A8          __size_of_config_ldc 001A  
        __size_of_config_led 0006                     ??___wmul 0006                ?_WriteCmdXLCD 0001  
                   ??_lcdTxt 0007             __CFG_LPT1OSC$OFF 000000                    _atoi$1310 0016  
                  _atoi$1311 0014                    _atoi$1309 0012      __size_of_config_teclado 0020  
             putsXLCD@buffer 0003                ??_interrupcao 0002                    __pintcode 0008  
             ??_WriteCmdXLCD 0002            __size_of_putsXLCD 0034        __end_of_WriteDataXLCD 0EE2  
                __smallconst 0800                     ?_isdigit 0002                     ?_isspace 0002  
         _config_interrupcao 11EC               ___wmul@product 0006                     _LATEbits 000F8D  
                ??_DelayXLCD 0002                ?_DelayPORXLCD 0001          ?_config_interrupcao 0001  
            OpenXLCD@lcdtype 0003                     _PIR2bits 000FA1                     _RCONbits 000FD0  
           __CFG_WDTPS$32768 000000     __end_of_tecladoMatricial 0BCC                    lcdTxt@txt 0005  
        __end_of_interrupcao 1100                    main@i_760 0040                    main@i_762 0042  
                  main@i_763 003E                    main@i_766 0044                    main@i_767 0046  
          ___wmul@multiplier 0002            ?_varreduraTeclado 0001         ??_config_interrupcao 0002  
                  _putrsXLCD 1046                    main@tecla 003A                    main@senha 0022  
               ??_config_ldc 0008                 ??_config_led 0002           ??_varreduraTeclado 0001  
               _isspace$1327 0008                  _INTCON2bits 000FF1                  _INTCON3bits 000FF0  
                  copy_data0 10BE                     _BusyXLCD 0FD8               ??_DelayPORXLCD 0002  
                 _EECON1bits 000FA6                     _OpenXLCD 0D30                     __Hrparam 0000  
                   __Lrparam 0000              _verificaMemoria 1100           __end_of_config_ldc 11A0  
         __end_of_config_led 11FA                   _EEPROM_Ler 11D4                   ?_putrsXLCD 0003  
           __size_of_isdigit 0030       __size_of_config_timer0 001A             __size_of_isspace 003E  
                   __ptext10 1012                     __ptext11 1046                     __ptext20 11EC  
                   __ptext12 0EA4                     __ptext21 0BCC                     __ptext13 0D30  
                   __ptext22 0F20                     __ptext14 0EE2                     __ptext23 107A  
                   __ptext15 0E64                     __ptext24 1126                     __ptext16 11B2  
                   __ptext17 11C4                     __ptext26 0F5E                     __ptext18 0FD8  
                   __ptext19 11E2                     lcd@F3185 004A         __end_of_WriteCmdXLCD 0F20  
              __size_of_atoi 0164                __size_of_main 0254               _config_teclado 114C  
                   lcd@tecla 0003                  _interrupcao 0008                     int$flags 005C  
                   _putsXLCD 1012                     main@ctrl 003C        __CFG_CPUDIV$OSC1_PLL2 000000  
                 _INTCONbits 000FF2                     isdigit@c 0002                     intlevel2 0000  
     __end_of_config_teclado 116C                     isspace@c 0002      __end_of_verificaMemoria 1126  
              _config_timer0 116C        __end_of_DelayFor18TCY 11EC         __end_of_DelayPORXLCD 11D4  
                ?_EEPROM_Ler 0002                  ??_putrsXLCD 0005              ?_config_teclado 0001  
             ?_config_timer0 0001  
