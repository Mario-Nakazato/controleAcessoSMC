

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 31 20:27:23 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000D60                     __pidataCOMRAM:
    73                           	opt callstack 0
    74                           
    75                           ;initializer for lcd@F3185
    76  000D60  31                 	db	49
    77  000D61  32                 	db	50
    78  000D62  33                 	db	51
    79  000D63  41                 	db	65
    80  000D64  34                 	db	52
    81  000D65  35                 	db	53
    82  000D66  36                 	db	54
    83  000D67  42                 	db	66
    84  000D68  37                 	db	55
    85  000D69  38                 	db	56
    86  000D6A  39                 	db	57
    87  000D6B  43                 	db	67
    88  000D6C  2A                 	db	42
    89  000D6D  30                 	db	48
    90  000D6E  23                 	db	35
    91  000D6F  44                 	db	68
    92                           
    93                           ;initializer for _cursor
    94  000D70  00C1               	dw	193
    95  0000                     _TMR0	set	4054
    96  0000                     _LATEbits	set	3981
    97  0000                     _TRISEbits	set	3990
    98  0000                     _TRISD	set	3989
    99  0000                     _PORTD	set	3971
   100  0000                     _RCONbits	set	4048
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _T0CONbits	set	4053
   103  0000                     _INTCONbits	set	4082
   104  0000                     _INTCON3bits	set	4080
   105  0000                     _TRISDbits	set	3989
   106  0000                     _TRISBbits	set	3987
   107  0000                     _ADCON1	set	4033
   108  0000                     _PORTDbits	set	3971
   109  0000                     _PORTBbits	set	3969
   110  0000                     _RBPU	set	32655
   111                           
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt callstack 0
   115  000800  00                 	db	0
   116  000801                     STR_2:
   117  000801  46                 	db	70	;'F'
   118  000802  65                 	db	101	;'e'
   119  000803  63                 	db	99	;'c'
   120  000804  68                 	db	104	;'h'
   121  000805  61                 	db	97	;'a'
   122  000806  64                 	db	100	;'d'
   123  000807  75                 	db	117	;'u'
   124  000808  72                 	db	114	;'r'
   125  000809  61                 	db	97	;'a'
   126  00080A  00                 	db	0
   127  00080B                     STR_1:
   128  00080B  3A                 	db	58	;':'
   129  00080C  00                 	db	0
   130                           
   131                           ; #config settings
   132  00080D  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  000C84                     __pcinit:
   136                           	opt callstack 0
   137  000C84                     start_initialization:
   138                           	opt callstack 0
   139  000C84                     __initialization:
   140                           	opt callstack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (18 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  000C84  0E60               	movlw	low __pidataCOMRAM
   145  000C86  6EF6               	movwf	tblptrl,c
   146  000C88  0E0D               	movlw	high __pidataCOMRAM
   147  000C8A  6EF7               	movwf	tblptrh,c
   148  000C8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  000C8E  6EF8               	movwf	tblptru,c
   150  000C90  EE00  F020         	lfsr	0,__pdataCOMRAM
   151  000C94  EE10 F012          	lfsr	1,18
   152  000C98                     copy_data0:
   153  000C98  0009               	tblrd		*+
   154  000C9A  CFF5 FFEE          	movff	tablat,postinc0
   155  000C9E  50E5               	movf	postdec1,w,c
   156  000CA0  50E1               	movf	fsr1l,w,c
   157  000CA2  E1FA               	bnz	copy_data0
   158  000CA4                     end_of_initialization:
   159                           	opt callstack 0
   160  000CA4                     __end_of__initialization:
   161                           	opt callstack 0
   162  000CA4  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163  000CA6  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164  000CA8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   165  000CAA  6EF8               	movwf	tblptru,c
   166  000CAC  0E08               	movlw	high __Lsmallconst
   167  000CAE  6EF7               	movwf	tblptrh,c
   168  000CB0  0100               	movlb	0
   169  000CB2  EF5B  F006         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	dataCOMRAM
   172  000020                     __pdataCOMRAM:
   173                           	opt callstack 0
   174  000020                     lcd@F3185:
   175                           	opt callstack 0
   176  000020                     	ds	16
   177  000030                     _cursor:
   178                           	opt callstack 0
   179  000030                     	ds	2
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	opt callstack 0
   184  000001                     ??_varreduraTeclado:
   185  000001                     
   186                           ; 1 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     ??_DelayPORXLCD:
   189  000002                     ??_DelayXLCD:
   190  000002                     ?_tecladoMatricial:
   191                           	opt callstack 0
   192  000002                     SetDDRamAddr@DDaddr:
   193                           	opt callstack 0
   194  000002                     WriteCmdXLCD@cmd:
   195                           	opt callstack 0
   196  000002                     WriteDataXLCD@data:
   197                           	opt callstack 0
   198                           
   199                           ; 1 bytes @ 0x1
   200  000002                     	ds	1
   201  000003                     OpenXLCD@lcdtype:
   202                           	opt callstack 0
   203  000003                     lcd@tecla:
   204                           	opt callstack 0
   205  000003                     putsXLCD@buffer:
   206                           	opt callstack 0
   207  000003                     putrsXLCD@buffer:
   208                           	opt callstack 0
   209                           
   210                           ; 2 bytes @ 0x2
   211  000003                     	ds	1
   212  000004                     _tecladoMatricial$493:
   213                           	opt callstack 0
   214                           
   215                           ; 2 bytes @ 0x3
   216  000004                     	ds	1
   217  000005                     ??_lcd:
   218  000005                     lcdTxt@txt:
   219                           	opt callstack 0
   220                           
   221                           ; 2 bytes @ 0x4
   222  000005                     	ds	1
   223  000006                     _tecladoMatricial$494:
   224                           	opt callstack 0
   225  000006                     lcd@teclado:
   226                           	opt callstack 0
   227                           
   228                           ; 16 bytes @ 0x5
   229  000006                     	ds	1
   230  000007                     ??_lcdTxt:
   231                           
   232                           ; 1 bytes @ 0x6
   233  000007                     	ds	1
   234  000008                     _tecladoMatricial$495:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x7
   238  000008                     	ds	2
   239  00000A                     _tecladoMatricial$496:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x9
   243  00000A                     	ds	2
   244  00000C                     _tecladoMatricial$497:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0xB
   248  00000C                     	ds	2
   249  00000E                     _tecladoMatricial$498:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0xD
   253  00000E                     	ds	2
   254  000010                     _tecladoMatricial$499:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0xF
   258  000010                     	ds	2
   259  000012                     _tecladoMatricial$500:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x11
   263  000012                     	ds	2
   264  000014                     _tecladoMatricial$501:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x13
   268  000014                     	ds	2
   269  000016                     _tecladoMatricial$502:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x15
   273  000016                     	ds	2
   274  000018                     _tecladoMatricial$503:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x17
   278  000018                     	ds	2
   279  00001A                     _tecladoMatricial$504:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x19
   283  00001A                     	ds	2
   284  00001C                     tecladoMatricial@tecla:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x1B
   288  00001C                     	ds	2
   289  00001E                     main@tecla:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x1D
   293  00001E                     	ds	2
   294                           
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 259 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;  tecla           2   29[COMRAM] int 
   305 ;;  teclaAnterio    2    0        int 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         2       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels required when called:    7
   321 ;; This function calls:
   322 ;;		_config_interrupcao
   323 ;;		_config_ldc
   324 ;;		_config_led
   325 ;;		_config_teclado
   326 ;;		_config_timer0
   327 ;;		_lcd
   328 ;;		_tecladoMatricial
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335  000CB6                     __ptext0:
   336                           	opt callstack 0
   337  000CB6                     _main:
   338                           	opt callstack 24
   339                           
   340                           ;main.c: 261:     config_interrupcao();
   341                           
   342                           ;incstack = 0
   343  000CB6  ECCF  F006         	call	_config_interrupcao	;wreg free
   344                           
   345                           ;main.c: 265:     config_timer0();
   346  000CBA  EC96  F006         	call	_config_timer0	;wreg free
   347                           
   348                           ;main.c: 266:     config_led();
   349  000CBE  ECD3  F006         	call	_config_led	;wreg free
   350                           
   351                           ;main.c: 267:     config_teclado();
   352  000CC2  EC86  F006         	call	_config_teclado	;wreg free
   353                           
   354                           ;main.c: 268:     config_ldc();
   355  000CC6  ECA3  F006         	call	_config_ldc	;wreg free
   356  000CCA                     l1602:
   357                           
   358                           ;main.c: 273:         tecla = tecladoMatricial();
   359  000CCA  EC07  F004         	call	_tecladoMatricial	;wreg free
   360  000CCE  C002  F01E         	movff	?_tecladoMatricial,main@tecla
   361  000CD2  C003  F01F         	movff	?_tecladoMatricial+1,main@tecla+1
   362                           
   363                           ;main.c: 274:         lcd(tecla);
   364  000CD6  C01E  F003         	movff	main@tecla,lcd@tecla
   365  000CDA  C01F  F004         	movff	main@tecla+1,lcd@tecla+1
   366  000CDE  EC10  F005         	call	_lcd	;wreg free
   367  000CE2  D7F3               	goto	l1602
   368  000CE4                     __end_of_main:
   369                           	opt callstack 0
   370                           
   371 ;; *************** function _tecladoMatricial *****************
   372 ;; Defined at:
   373 ;;		line 136 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  tecla           2   27[COMRAM] int 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  2    1[COMRAM] int 
   380 ;; Registers used:
   381 ;;		wreg, status,2
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         2       0       0       0       0       0       0       0       0
   388 ;;      Locals:        26       0       0       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0
   390 ;;      Totals:        28       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:       28 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; Hardware stack levels required when called:    2
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402  00080E                     __ptext1:
   403                           	opt callstack 0
   404  00080E                     _tecladoMatricial:
   405                           	opt callstack 28
   406                           
   407                           ;main.c: 137:     int tecla;;main.c: 138:     if(!PORTBbits.RB3){
   408                           
   409                           ;incstack = 0
   410  00080E  B681               	btfsc	3969,3,c	;volatile
   411  000810  D02A               	goto	l67
   412                           
   413                           ;main.c: 139:         tecla = !PORTBbits.RB4 ? 0:
   414  000812  A881               	btfss	3969,4,c	;volatile
   415  000814  D024               	goto	l1512
   416  000816  AA81               	btfss	3969,5,c	;volatile
   417  000818  D019               	goto	l1508
   418  00081A  AC81               	btfss	3969,6,c	;volatile
   419  00081C  D00E               	goto	l1504
   420  00081E  AE81               	btfss	3969,7,c	;volatile
   421  000820  D003               	goto	l1500
   422  000822  6808               	setf	_tecladoMatricial$495,c
   423  000824  6809               	setf	_tecladoMatricial$495+1,c
   424  000826  D004               	goto	l1502
   425  000828                     l1500:
   426  000828  0E00               	movlw	0
   427  00082A  6E09               	movwf	_tecladoMatricial$495+1,c
   428  00082C  0E0C               	movlw	12
   429  00082E  6E08               	movwf	_tecladoMatricial$495,c
   430  000830                     l1502:
   431  000830  C008  F006         	movff	_tecladoMatricial$495,_tecladoMatricial$494
   432  000834  C009  F007         	movff	_tecladoMatricial$495+1,_tecladoMatricial$494+1
   433  000838  D004               	goto	l1506
   434  00083A                     l1504:
   435  00083A  0E00               	movlw	0
   436  00083C  6E07               	movwf	_tecladoMatricial$494+1,c
   437  00083E  0E08               	movlw	8
   438  000840  6E06               	movwf	_tecladoMatricial$494,c
   439  000842                     l1506:
   440  000842  C006  F004         	movff	_tecladoMatricial$494,_tecladoMatricial$493
   441  000846  C007  F005         	movff	_tecladoMatricial$494+1,_tecladoMatricial$493+1
   442  00084A  D004               	goto	l1510
   443  00084C                     l1508:
   444  00084C  0E00               	movlw	0
   445  00084E  6E05               	movwf	_tecladoMatricial$493+1,c
   446  000850  0E04               	movlw	4
   447  000852  6E04               	movwf	_tecladoMatricial$493,c
   448  000854                     l1510:
   449  000854  C004  F01C         	movff	_tecladoMatricial$493,tecladoMatricial@tecla
   450  000858  C005  F01D         	movff	_tecladoMatricial$493+1,tecladoMatricial@tecla+1
   451  00085C  D088               	goto	l1586
   452  00085E                     l1512:
   453  00085E  0E00               	movlw	0
   454  000860  6E1D               	movwf	tecladoMatricial@tecla+1,c
   455  000862  0E00               	movlw	0
   456  000864  D083               	goto	L1
   457  000866                     l67:
   458  000866  B481               	btfsc	3969,2,c	;volatile
   459  000868  D02A               	goto	l85
   460                           
   461                           ;main.c: 144:         tecla = !PORTBbits.RB4 ? 1:
   462  00086A  A881               	btfss	3969,4,c	;volatile
   463  00086C  D024               	goto	l1536
   464  00086E  AA81               	btfss	3969,5,c	;volatile
   465  000870  D019               	goto	l1532
   466  000872  AC81               	btfss	3969,6,c	;volatile
   467  000874  D00E               	goto	l1528
   468  000876  AE81               	btfss	3969,7,c	;volatile
   469  000878  D003               	goto	l1524
   470  00087A  680E               	setf	_tecladoMatricial$498,c
   471  00087C  680F               	setf	_tecladoMatricial$498+1,c
   472  00087E  D004               	goto	l1526
   473  000880                     l1524:
   474  000880  0E00               	movlw	0
   475  000882  6E0F               	movwf	_tecladoMatricial$498+1,c
   476  000884  0E0D               	movlw	13
   477  000886  6E0E               	movwf	_tecladoMatricial$498,c
   478  000888                     l1526:
   479  000888  C00E  F00C         	movff	_tecladoMatricial$498,_tecladoMatricial$497
   480  00088C  C00F  F00D         	movff	_tecladoMatricial$498+1,_tecladoMatricial$497+1
   481  000890  D004               	goto	l1530
   482  000892                     l1528:
   483  000892  0E00               	movlw	0
   484  000894  6E0D               	movwf	_tecladoMatricial$497+1,c
   485  000896  0E09               	movlw	9
   486  000898  6E0C               	movwf	_tecladoMatricial$497,c
   487  00089A                     l1530:
   488  00089A  C00C  F00A         	movff	_tecladoMatricial$497,_tecladoMatricial$496
   489  00089E  C00D  F00B         	movff	_tecladoMatricial$497+1,_tecladoMatricial$496+1
   490  0008A2  D004               	goto	l1534
   491  0008A4                     l1532:
   492  0008A4  0E00               	movlw	0
   493  0008A6  6E0B               	movwf	_tecladoMatricial$496+1,c
   494  0008A8  0E05               	movlw	5
   495  0008AA  6E0A               	movwf	_tecladoMatricial$496,c
   496  0008AC                     l1534:
   497  0008AC  C00A  F01C         	movff	_tecladoMatricial$496,tecladoMatricial@tecla
   498  0008B0  C00B  F01D         	movff	_tecladoMatricial$496+1,tecladoMatricial@tecla+1
   499  0008B4  D05C               	goto	l1586
   500  0008B6                     l1536:
   501  0008B6  0E00               	movlw	0
   502  0008B8  6E1D               	movwf	tecladoMatricial@tecla+1,c
   503  0008BA  0E01               	movlw	1
   504  0008BC  D057               	goto	L1
   505  0008BE                     l85:
   506  0008BE  B281               	btfsc	3969,1,c	;volatile
   507  0008C0  D02A               	goto	l103
   508                           
   509                           ;main.c: 149:         tecla = !PORTBbits.RB4 ? 2:
   510  0008C2  A881               	btfss	3969,4,c	;volatile
   511  0008C4  D024               	goto	l1560
   512  0008C6  AA81               	btfss	3969,5,c	;volatile
   513  0008C8  D019               	goto	l1556
   514  0008CA  AC81               	btfss	3969,6,c	;volatile
   515  0008CC  D00E               	goto	l1552
   516  0008CE  AE81               	btfss	3969,7,c	;volatile
   517  0008D0  D003               	goto	l1548
   518  0008D2  6814               	setf	_tecladoMatricial$501,c
   519  0008D4  6815               	setf	_tecladoMatricial$501+1,c
   520  0008D6  D004               	goto	l1550
   521  0008D8                     l1548:
   522  0008D8  0E00               	movlw	0
   523  0008DA  6E15               	movwf	_tecladoMatricial$501+1,c
   524  0008DC  0E0E               	movlw	14
   525  0008DE  6E14               	movwf	_tecladoMatricial$501,c
   526  0008E0                     l1550:
   527  0008E0  C014  F012         	movff	_tecladoMatricial$501,_tecladoMatricial$500
   528  0008E4  C015  F013         	movff	_tecladoMatricial$501+1,_tecladoMatricial$500+1
   529  0008E8  D004               	goto	l1554
   530  0008EA                     l1552:
   531  0008EA  0E00               	movlw	0
   532  0008EC  6E13               	movwf	_tecladoMatricial$500+1,c
   533  0008EE  0E0A               	movlw	10
   534  0008F0  6E12               	movwf	_tecladoMatricial$500,c
   535  0008F2                     l1554:
   536  0008F2  C012  F010         	movff	_tecladoMatricial$500,_tecladoMatricial$499
   537  0008F6  C013  F011         	movff	_tecladoMatricial$500+1,_tecladoMatricial$499+1
   538  0008FA  D004               	goto	l1558
   539  0008FC                     l1556:
   540  0008FC  0E00               	movlw	0
   541  0008FE  6E11               	movwf	_tecladoMatricial$499+1,c
   542  000900  0E06               	movlw	6
   543  000902  6E10               	movwf	_tecladoMatricial$499,c
   544  000904                     l1558:
   545  000904  C010  F01C         	movff	_tecladoMatricial$499,tecladoMatricial@tecla
   546  000908  C011  F01D         	movff	_tecladoMatricial$499+1,tecladoMatricial@tecla+1
   547  00090C  D030               	goto	l1586
   548  00090E                     l1560:
   549  00090E  0E00               	movlw	0
   550  000910  6E1D               	movwf	tecladoMatricial@tecla+1,c
   551  000912  0E02               	movlw	2
   552  000914  D02B               	goto	L1
   553  000916                     l103:
   554  000916  B081               	btfsc	3969,0,c	;volatile
   555  000918  D02A               	goto	l1586
   556                           
   557                           ;main.c: 154:         tecla = !PORTBbits.RB4 ? 3:
   558  00091A  A881               	btfss	3969,4,c	;volatile
   559  00091C  D024               	goto	l1584
   560  00091E  AA81               	btfss	3969,5,c	;volatile
   561  000920  D019               	goto	l1580
   562  000922  AC81               	btfss	3969,6,c	;volatile
   563  000924  D00E               	goto	l1576
   564  000926  AE81               	btfss	3969,7,c	;volatile
   565  000928  D003               	goto	l1572
   566  00092A  681A               	setf	_tecladoMatricial$504,c
   567  00092C  681B               	setf	_tecladoMatricial$504+1,c
   568  00092E  D004               	goto	l1574
   569  000930                     l1572:
   570  000930  0E00               	movlw	0
   571  000932  6E1B               	movwf	_tecladoMatricial$504+1,c
   572  000934  0E0F               	movlw	15
   573  000936  6E1A               	movwf	_tecladoMatricial$504,c
   574  000938                     l1574:
   575  000938  C01A  F018         	movff	_tecladoMatricial$504,_tecladoMatricial$503
   576  00093C  C01B  F019         	movff	_tecladoMatricial$504+1,_tecladoMatricial$503+1
   577  000940  D004               	goto	l1578
   578  000942                     l1576:
   579  000942  0E00               	movlw	0
   580  000944  6E19               	movwf	_tecladoMatricial$503+1,c
   581  000946  0E0B               	movlw	11
   582  000948  6E18               	movwf	_tecladoMatricial$503,c
   583  00094A                     l1578:
   584  00094A  C018  F016         	movff	_tecladoMatricial$503,_tecladoMatricial$502
   585  00094E  C019  F017         	movff	_tecladoMatricial$503+1,_tecladoMatricial$502+1
   586  000952  D004               	goto	l1582
   587  000954                     l1580:
   588  000954  0E00               	movlw	0
   589  000956  6E17               	movwf	_tecladoMatricial$502+1,c
   590  000958  0E07               	movlw	7
   591  00095A  6E16               	movwf	_tecladoMatricial$502,c
   592  00095C                     l1582:
   593  00095C  C016  F01C         	movff	_tecladoMatricial$502,tecladoMatricial@tecla
   594  000960  C017  F01D         	movff	_tecladoMatricial$502+1,tecladoMatricial@tecla+1
   595  000964  D004               	goto	l1586
   596  000966                     l1584:
   597  000966  0E00               	movlw	0
   598  000968  6E1D               	movwf	tecladoMatricial@tecla+1,c
   599  00096A  0E03               	movlw	3
   600  00096C                     L1:
   601  00096C  6E1C               	movwf	tecladoMatricial@tecla,c
   602  00096E                     l1586:
   603                           
   604                           ;main.c: 159:     return tecla;
   605  00096E  C01C  F002         	movff	tecladoMatricial@tecla,?_tecladoMatricial
   606  000972  C01D  F003         	movff	tecladoMatricial@tecla+1,?_tecladoMatricial+1
   607  000976  0012               	return		;funcret
   608  000978                     __end_of_tecladoMatricial:
   609                           	opt callstack 0
   610                           
   611 ;; *************** function _lcd *****************
   612 ;; Defined at:
   613 ;;		line 94 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  tecla           2    2[COMRAM] int 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  teclado        16    5[COMRAM] unsigned char [16]
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         2       0       0       0       0       0       0       0       0
   628 ;;      Locals:        16       0       0       0       0       0       0       0       0
   629 ;;      Temps:          1       0       0       0       0       0       0       0       0
   630 ;;      Totals:        19       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:       19 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    4
   634 ;; This function calls:
   635 ;;		_BusyXLCD
   636 ;;		_WriteCmdXLCD
   637 ;;		_WriteDataXLCD
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text2
   644  000A20                     __ptext2:
   645                           	opt callstack 0
   646  000A20                     _lcd:
   647                           	opt callstack 26
   648                           
   649                           ;main.c: 95:     char teclado[16] = {
   650                           
   651                           ;incstack = 0
   652  000A20  EE20  F020         	lfsr	2,lcd@F3185
   653  000A24  EE10  F006         	lfsr	1,lcd@teclado
   654  000A28  0E0F               	movlw	15
   655  000A2A                     u511:
   656  000A2A  CFDB FFE3          	movff	plusw2,plusw1
   657  000A2E  06E8               	decf	wreg,f,c
   658  000A30  E2FC               	bc	u511
   659                           
   660                           ;main.c: 102:     if(tecla != -1){
   661  000A32  2803               	incf	lcd@tecla,w,c
   662  000A34  E103               	bnz	u520
   663  000A36  2804               	incf	lcd@tecla+1,w,c
   664  000A38  B4D8               	btfsc	status,2,c
   665  000A3A  D02B               	goto	l1484
   666  000A3C                     u520:
   667                           
   668                           ;main.c: 103:         if(teclado[tecla] == '*'){
   669  000A3C  0E06               	movlw	low lcd@teclado
   670  000A3E  2403               	addwf	lcd@tecla,w,c
   671  000A40  6ED9               	movwf	fsr2l,c
   672  000A42  0E00               	movlw	high lcd@teclado
   673  000A44  2004               	addwfc	lcd@tecla+1,w,c
   674  000A46  6EDA               	movwf	fsr2h,c
   675  000A48  0E2A               	movlw	42
   676  000A4A  18DE               	xorwf	postinc2,w,c
   677  000A4C  A4D8               	btfss	status,2,c
   678  000A4E  D004               	goto	l1472
   679                           
   680                           ;main.c: 104:             cursor--;
   681  000A50  0630               	decf	_cursor,f,c
   682  000A52  A0D8               	btfss	status,0,c
   683  000A54  0631               	decf	_cursor+1,f,c
   684                           
   685                           ;main.c: 105:         }else if(teclado[tecla] == '#'){
   686  000A56  D01A               	goto	l1482
   687  000A58                     l1472:
   688  000A58  0E06               	movlw	low lcd@teclado
   689  000A5A  2403               	addwf	lcd@tecla,w,c
   690  000A5C  6ED9               	movwf	fsr2l,c
   691  000A5E  0E00               	movlw	high lcd@teclado
   692  000A60  2004               	addwfc	lcd@tecla+1,w,c
   693  000A62  6EDA               	movwf	fsr2h,c
   694  000A64  0E23               	movlw	35
   695  000A66  18DE               	xorwf	postinc2,w,c
   696  000A68  A4D8               	btfss	status,2,c
   697  000A6A  D003               	goto	l1476
   698  000A6C                     u540:
   699                           
   700                           ;main.c: 106:             cursor++;
   701  000A6C  4A30               	infsnz	_cursor,f,c
   702  000A6E  2A31               	incf	_cursor+1,f,c
   703                           
   704                           ;main.c: 107:         }else{
   705  000A70  D00D               	goto	l1482
   706  000A72                     l1476:
   707                           
   708                           ;main.c: 108:             WriteCmdXLCD(cursor);
   709  000A72  5030               	movf	_cursor,w,c
   710  000A74  EC95  F005         	call	_WriteCmdXLCD
   711                           
   712                           ;main.c: 109:             WriteDataXLCD(teclado[tecla]);
   713  000A78  0E06               	movlw	low lcd@teclado
   714  000A7A  2403               	addwf	lcd@tecla,w,c
   715  000A7C  6ED9               	movwf	fsr2l,c
   716  000A7E  0E00               	movlw	high lcd@teclado
   717  000A80  2004               	addwfc	lcd@tecla+1,w,c
   718  000A82  6EDA               	movwf	fsr2h,c
   719  000A84  50DF               	movf	indf2,w,c
   720  000A86  EC76  F005         	call	_WriteDataXLCD
   721  000A8A  D7F0               	goto	u540
   722  000A8C                     l1482:
   723                           
   724                           ;main.c: 112:         WriteCmdXLCD(cursor);
   725  000A8C  5030               	movf	_cursor,w,c
   726  000A8E  EC95  F005         	call	_WriteCmdXLCD
   727  000A92                     l1484:
   728                           
   729                           ;main.c: 114:     if(!BusyXLCD()){
   730  000A92  ECF1  F005         	call	_BusyXLCD	;wreg free
   731  000A96  0900               	iorlw	0
   732  000A98  A4D8               	btfss	status,2,c
   733  000A9A  0012               	return	
   734                           
   735                           ;main.c: 115:         _delay((unsigned long)((8)*(20000000/4000.0)));
   736  000A9C  0E34               	movlw	52
   737  000A9E  6E05               	movwf	??_lcd& (0+255),c
   738  000AA0  0EF2               	movlw	242
   739  000AA2                     u767:
   740  000AA2  2EE8               	decfsz	wreg,f,c
   741  000AA4  D7FE               	bra	u767
   742  000AA6  2E05               	decfsz	??_lcd& (0+255),f,c
   743  000AA8  D7FC               	bra	u767
   744  000AAA  0012               	return		;funcret
   745  000AAC                     __end_of_lcd:
   746                           	opt callstack 0
   747                           
   748 ;; *************** function _config_timer0 *****************
   749 ;; Defined at:
   750 ;;		line 220 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; Hardware stack levels required when called:    2
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text3
   779  000D2C                     __ptext3:
   780                           	opt callstack 0
   781  000D2C                     _config_timer0:
   782                           	opt callstack 28
   783                           
   784                           ;main.c: 221:     T0CONbits.TMR0ON = 1;
   785                           
   786                           ;incstack = 0
   787  000D2C  8ED5               	bsf	4053,7,c	;volatile
   788                           
   789                           ;main.c: 222:     T0CONbits.T08BIT = 1;
   790  000D2E  8CD5               	bsf	4053,6,c	;volatile
   791                           
   792                           ;main.c: 223:     T0CONbits.T0CS = 0;
   793  000D30  9AD5               	bcf	4053,5,c	;volatile
   794                           
   795                           ;main.c: 225:     T0CONbits.PSA = 1;
   796  000D32  86D5               	bsf	4053,3,c	;volatile
   797                           
   798                           ;main.c: 226:     T0CONbits.T0PS2 = 1;
   799  000D34  84D5               	bsf	4053,2,c	;volatile
   800                           
   801                           ;main.c: 227:     T0CONbits.T0PS1 = 0;
   802  000D36  92D5               	bcf	4053,1,c	;volatile
   803                           
   804                           ;main.c: 228:     T0CONbits.T0PS0 = 0;
   805  000D38  90D5               	bcf	4053,0,c	;volatile
   806                           
   807                           ;main.c: 229:     INTCONbits.TMR0IE = 1;
   808  000D3A  8AF2               	bsf	4082,5,c	;volatile
   809                           
   810                           ;main.c: 230:     TMR0 = 100;
   811  000D3C  0E00               	movlw	0
   812  000D3E  6ED7               	movwf	4055,c	;volatile
   813  000D40  0E64               	movlw	100
   814  000D42  6ED6               	movwf	4054,c	;volatile
   815  000D44  0012               	return		;funcret
   816  000D46                     __end_of_config_timer0:
   817                           	opt callstack 0
   818                           
   819 ;; *************** function _config_teclado *****************
   820 ;; Defined at:
   821 ;;		line 162 in file "main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         0       0       0       0       0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text4
   850  000D0C                     __ptext4:
   851                           	opt callstack 0
   852  000D0C                     _config_teclado:
   853                           	opt callstack 28
   854                           
   855                           ;main.c: 163:     RBPU = 0;
   856                           
   857                           ;incstack = 0
   858  000D0C  9EF1               	bcf	4081,7,c	;volatile
   859                           
   860                           ;main.c: 165:     ADCON1 = 0x0F;
   861  000D0E  0E0F               	movlw	15
   862  000D10  6EC1               	movwf	4033,c	;volatile
   863                           
   864                           ;main.c: 167:     TRISBbits.TRISB0 = 0;
   865  000D12  9093               	bcf	3987,0,c	;volatile
   866                           
   867                           ;main.c: 168:     TRISBbits.TRISB1 = 0;
   868  000D14  9293               	bcf	3987,1,c	;volatile
   869                           
   870                           ;main.c: 169:     TRISBbits.TRISB2 = 0;
   871  000D16  9493               	bcf	3987,2,c	;volatile
   872                           
   873                           ;main.c: 170:     TRISBbits.TRISB3 = 0;
   874  000D18  9693               	bcf	3987,3,c	;volatile
   875                           
   876                           ;main.c: 171:     TRISBbits.TRISB4 = 1;
   877  000D1A  8893               	bsf	3987,4,c	;volatile
   878                           
   879                           ;main.c: 172:     TRISBbits.TRISB5 = 1;
   880  000D1C  8A93               	bsf	3987,5,c	;volatile
   881                           
   882                           ;main.c: 173:     TRISBbits.TRISB6 = 1;
   883  000D1E  8C93               	bsf	3987,6,c	;volatile
   884                           
   885                           ;main.c: 174:     TRISBbits.TRISB7 = 1;
   886  000D20  8E93               	bsf	3987,7,c	;volatile
   887                           
   888                           ;main.c: 176:     PORTBbits.RB0 = 1;
   889  000D22  8081               	bsf	3969,0,c	;volatile
   890                           
   891                           ;main.c: 177:     PORTBbits.RB1 = 1;
   892  000D24  8281               	bsf	3969,1,c	;volatile
   893                           
   894                           ;main.c: 178:     PORTBbits.RB2 = 1;
   895  000D26  8481               	bsf	3969,2,c	;volatile
   896                           
   897                           ;main.c: 179:     PORTBbits.RB3 = 0;
   898  000D28  9681               	bcf	3969,3,c	;volatile
   899  000D2A  0012               	return		;funcret
   900  000D2C                     __end_of_config_teclado:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _config_led *****************
   904 ;; Defined at:
   905 ;;		line 189 in file "main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		None
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         0       0       0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    2
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text5
   934  000DA6                     __ptext5:
   935                           	opt callstack 0
   936  000DA6                     _config_led:
   937                           	opt callstack 28
   938                           
   939                           ;main.c: 190:     TRISDbits.TRISD0 = 0;
   940                           
   941                           ;incstack = 0
   942  000DA6  9095               	bcf	3989,0,c	;volatile
   943                           
   944                           ;main.c: 191:     PORTDbits.RD0 = 1;
   945  000DA8  8083               	bsf	3971,0,c	;volatile
   946  000DAA  0012               	return		;funcret
   947  000DAC                     __end_of_config_led:
   948                           	opt callstack 0
   949                           
   950 ;; *************** function _config_ldc *****************
   951 ;; Defined at:
   952 ;;		line 182 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         0       0       0       0       0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    6
   973 ;; This function calls:
   974 ;;		_OpenXLCD
   975 ;;		_WriteCmdXLCD
   976 ;;		_lcdTxt
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text6
   983  000D46                     __ptext6:
   984                           	opt callstack 0
   985  000D46                     _config_ldc:
   986                           	opt callstack 24
   987                           
   988                           ;main.c: 184:     OpenXLCD(0b00101100 & 0b00111000);
   989                           
   990                           ;incstack = 0
   991  000D46  0E28               	movlw	40
   992  000D48  ECBC  F004         	call	_OpenXLCD
   993                           
   994                           ;main.c: 185:     WriteCmdXLCD(0x01);
   995  000D4C  0E01               	movlw	1
   996  000D4E  EC95  F005         	call	_WriteCmdXLCD
   997                           
   998                           ;main.c: 186:     lcdTxt("Fechadura");
   999  000D52  0E01               	movlw	low STR_2
  1000  000D54  6E05               	movwf	lcdTxt@txt,c
  1001  000D56  0E08               	movlw	high STR_2
  1002  000D58  6E06               	movwf	lcdTxt@txt+1,c
  1003  000D5A  ECD3  F005         	call	_lcdTxt	;wreg free
  1004  000D5E  0012               	return		;funcret
  1005  000D60                     __end_of_config_ldc:
  1006                           	opt callstack 0
  1007                           
  1008 ;; *************** function _lcdTxt *****************
  1009 ;; Defined at:
  1010 ;;		line 85 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  txt             2    4[COMRAM] PTR unsigned char 
  1013 ;;		 -> STR_2(10), 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         2       0       0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1027 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1029 ;;Total ram usage:        3 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    5
  1032 ;; This function calls:
  1033 ;;		_WriteCmdXLCD
  1034 ;;		_putrsXLCD
  1035 ;;		_putsXLCD
  1036 ;; This function is called by:
  1037 ;;		_config_ldc
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text7
  1042  000BA6                     __ptext7:
  1043                           	opt callstack 0
  1044  000BA6                     _lcdTxt:
  1045                           	opt callstack 24
  1046                           
  1047                           ;main.c: 86:     WriteCmdXLCD(0x80);
  1048                           
  1049                           ;incstack = 0
  1050  000BA6  0E80               	movlw	128
  1051  000BA8  EC95  F005         	call	_WriteCmdXLCD
  1052                           
  1053                           ;main.c: 87:     _delay((unsigned long)((4)*(20000000/4000.0)));
  1054  000BAC  0E1A               	movlw	26
  1055  000BAE  6E07               	movwf	??_lcdTxt& (0+255),c
  1056  000BB0  0EF8               	movlw	248
  1057  000BB2                     u777:
  1058  000BB2  2EE8               	decfsz	wreg,f,c
  1059  000BB4  D7FE               	bra	u777
  1060  000BB6  2E07               	decfsz	??_lcdTxt& (0+255),f,c
  1061  000BB8  D7FC               	bra	u777
  1062  000BBA  D000               	nop2	
  1063                           
  1064                           ;main.c: 88:     putrsXLCD(txt);
  1065  000BBC  C005  F003         	movff	lcdTxt@txt,putrsXLCD@buffer
  1066  000BC0  C006  F004         	movff	lcdTxt@txt+1,putrsXLCD@buffer+1
  1067  000BC4  EC28  F006         	call	_putrsXLCD	;wreg free
  1068                           
  1069                           ;main.c: 89:     WriteCmdXLCD(0xC0);
  1070  000BC8  0EC0               	movlw	192
  1071  000BCA  EC95  F005         	call	_WriteCmdXLCD
  1072                           
  1073                           ;main.c: 90:     putsXLCD(":");
  1074  000BCE  0E0B               	movlw	low STR_1
  1075  000BD0  6E03               	movwf	putsXLCD@buffer,c
  1076  000BD2  0E08               	movlw	high STR_1
  1077  000BD4  6E04               	movwf	putsXLCD@buffer+1,c
  1078  000BD6  EC0E  F006         	call	_putsXLCD	;wreg free
  1079                           
  1080                           ;main.c: 91:     WriteCmdXLCD(0xC1);
  1081  000BDA  0EC1               	movlw	193
  1082  000BDC  EC95  F005         	call	_WriteCmdXLCD
  1083  000BE0  0012               	return		;funcret
  1084  000BE2                     __end_of_lcdTxt:
  1085                           	opt callstack 0
  1086                           
  1087 ;; *************** function _putsXLCD *****************
  1088 ;; Defined at:
  1089 ;;		line 510 in file "nxlcd.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  1092 ;;		 -> STR_1(2), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1104 ;;      Params:         2       0       0       0       0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    4
  1111 ;; This function calls:
  1112 ;;		_BusyXLCD
  1113 ;;		_WriteDataXLCD
  1114 ;; This function is called by:
  1115 ;;		_lcdTxt
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text8
  1120  000C1C                     __ptext8:
  1121                           	opt callstack 0
  1122  000C1C                     _putsXLCD:
  1123                           	opt callstack 24
  1124                           
  1125                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
  1126                           
  1127                           ;incstack = 0
  1128  000C1C  D00F               	goto	l1450
  1129  000C1E                     l1444:
  1130  000C1E  ECF1  F005         	call	_BusyXLCD	;wreg free
  1131  000C22  0900               	iorlw	0
  1132  000C24  A4D8               	btfss	status,2,c
  1133  000C26  D7FB               	goto	l1444
  1134                           
  1135                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
  1136  000C28  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1137  000C2C  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1138  000C30                     	if	0	;tblptru may be non-zero
  1139  000C30                     	endif
  1140  000C30                     	if	0	;tblptru may be non-zero
  1141  000C30                     	endif
  1142  000C30  0008               	tblrd		*
  1143  000C32  50F5               	movf	tablat,w,c
  1144  000C34  EC76  F005         	call	_WriteDataXLCD
  1145                           
  1146                           ;nxlcd.c: 516:                 buffer++;
  1147  000C38  4A03               	infsnz	putsXLCD@buffer,f,c
  1148  000C3A  2A04               	incf	putsXLCD@buffer+1,f,c
  1149  000C3C                     l1450:
  1150                           
  1151                           ;nxlcd.c: 512:         while(*buffer)
  1152  000C3C  C003  FFF6         	movff	putsXLCD@buffer,tblptrl
  1153  000C40  C004  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  1154  000C44                     	if	0	;tblptru may be non-zero
  1155  000C44                     	endif
  1156  000C44                     	if	0	;tblptru may be non-zero
  1157  000C44                     	endif
  1158  000C44  0008               	tblrd		*
  1159  000C46  50F5               	movf	tablat,w,c
  1160  000C48  0900               	iorlw	0
  1161  000C4A  B4D8               	btfsc	status,2,c
  1162  000C4C  0012               	return	
  1163  000C4E  D7E7               	goto	l1444
  1164  000C50                     __end_of_putsXLCD:
  1165                           	opt callstack 0
  1166                           
  1167 ;; *************** function _putrsXLCD *****************
  1168 ;; Defined at:
  1169 ;;		line 533 in file "nxlcd.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  buffer          2    2[COMRAM] PTR const unsigned char 
  1172 ;;		 -> STR_2(10), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        2 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    4
  1191 ;; This function calls:
  1192 ;;		_BusyXLCD
  1193 ;;		_WriteDataXLCD
  1194 ;; This function is called by:
  1195 ;;		_lcdTxt
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text9
  1200  000C50                     __ptext9:
  1201                           	opt callstack 0
  1202  000C50                     _putrsXLCD:
  1203                           	opt callstack 24
  1204                           
  1205                           ;nxlcd.c: 533: void putrsXLCD(const char *buffer);nxlcd.c: 534: {;nxlcd.c: 535:         
      +                          while(*buffer)
  1206                           
  1207                           ;incstack = 0
  1208  000C50  D00F               	goto	l1440
  1209  000C52                     l1434:
  1210  000C52  ECF1  F005         	call	_BusyXLCD	;wreg free
  1211  000C56  0900               	iorlw	0
  1212  000C58  A4D8               	btfss	status,2,c
  1213  000C5A  D7FB               	goto	l1434
  1214                           
  1215                           ;nxlcd.c: 538:                 WriteDataXLCD(*buffer);
  1216  000C5C  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1217  000C60  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1218  000C64                     	if	0	;tblptru may be non-zero
  1219  000C64                     	endif
  1220  000C64                     	if	0	;tblptru may be non-zero
  1221  000C64                     	endif
  1222  000C64  0008               	tblrd		*
  1223  000C66  50F5               	movf	tablat,w,c
  1224  000C68  EC76  F005         	call	_WriteDataXLCD
  1225                           
  1226                           ;nxlcd.c: 539:                 buffer++;
  1227  000C6C  4A03               	infsnz	putrsXLCD@buffer,f,c
  1228  000C6E  2A04               	incf	putrsXLCD@buffer+1,f,c
  1229  000C70                     l1440:
  1230                           
  1231                           ;nxlcd.c: 535:         while(*buffer)
  1232  000C70  C003  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1233  000C74  C004  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1234  000C78                     	if	0	;tblptru may be non-zero
  1235  000C78                     	endif
  1236  000C78                     	if	0	;tblptru may be non-zero
  1237  000C78                     	endif
  1238  000C78  0008               	tblrd		*
  1239  000C7A  50F5               	movf	tablat,w,c
  1240  000C7C  0900               	iorlw	0
  1241  000C7E  B4D8               	btfsc	status,2,c
  1242  000C80  0012               	return	
  1243  000C82  D7E7               	goto	l1434
  1244  000C84                     __end_of_putrsXLCD:
  1245                           	opt callstack 0
  1246                           
  1247 ;; *************** function _WriteDataXLCD *****************
  1248 ;; Defined at:
  1249 ;;		line 449 in file "nxlcd.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  data            1    wreg     unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  data            1    1[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    3
  1270 ;; This function calls:
  1271 ;;		_DelayFor18TCY
  1272 ;; This function is called by:
  1273 ;;		_lcd
  1274 ;;		_putsXLCD
  1275 ;;		_putrsXLCD
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text10
  1280  000AEC                     __ptext10:
  1281                           	opt callstack 0
  1282  000AEC                     _WriteDataXLCD:
  1283                           	opt callstack 26
  1284                           
  1285                           ;incstack = 0
  1286                           ;WriteDataXLCD@data stored from wreg
  1287  000AEC  6E02               	movwf	WriteDataXLCD@data,c
  1288                           
  1289                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  1290  000AEE  0E0F               	movlw	15
  1291  000AF0  1695               	andwf	3989,f,c	;volatile
  1292                           
  1293                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  1294  000AF2  0E0F               	movlw	15
  1295  000AF4  1683               	andwf	3971,f,c	;volatile
  1296                           
  1297                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  1298  000AF6  5002               	movf	WriteDataXLCD@data,w,c
  1299  000AF8  0BF0               	andlw	240
  1300  000AFA  1283               	iorwf	3971,f,c	;volatile
  1301                           
  1302                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  1303  000AFC  808D               	bsf	3981,0,c	;volatile
  1304                           
  1305                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  1306  000AFE  948D               	bcf	3981,2,c	;volatile
  1307                           
  1308                           ;nxlcd.c: 474:         DelayFor18TCY();
  1309  000B00  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1310                           
  1311                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  1312  000B04  828D               	bsf	3981,1,c	;volatile
  1313                           
  1314                           ;nxlcd.c: 476:         DelayFor18TCY();
  1315  000B06  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1316                           
  1317                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  1318  000B0A  928D               	bcf	3981,1,c	;volatile
  1319                           
  1320                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  1321  000B0C  0E0F               	movlw	15
  1322  000B0E  1683               	andwf	3971,f,c	;volatile
  1323                           
  1324                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  1325  000B10  3802               	swapf	WriteDataXLCD@data,w,c
  1326  000B12  0BF0               	andlw	240
  1327  000B14  0BF0               	andlw	240
  1328  000B16  1283               	iorwf	3971,f,c	;volatile
  1329                           
  1330                           ;nxlcd.c: 485:         DelayFor18TCY();
  1331  000B18  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1332                           
  1333                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  1334  000B1C  828D               	bsf	3981,1,c	;volatile
  1335                           
  1336                           ;nxlcd.c: 487:         DelayFor18TCY();
  1337  000B1E  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1338                           
  1339                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  1340  000B22  928D               	bcf	3981,1,c	;volatile
  1341                           
  1342                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  1343  000B24  0EF0               	movlw	240
  1344  000B26  1295               	iorwf	3989,f,c	;volatile
  1345  000B28  0012               	return		;funcret
  1346  000B2A                     __end_of_WriteDataXLCD:
  1347                           	opt callstack 0
  1348                           
  1349 ;; *************** function _OpenXLCD *****************
  1350 ;; Defined at:
  1351 ;;		line 41 in file "nxlcd.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  lcdtype         1    wreg     unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  lcdtype         1    2[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0
  1366 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1368 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1369 ;;Total ram usage:        1 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    4
  1372 ;; This function calls:
  1373 ;;		_BusyXLCD
  1374 ;;		_DelayPORXLCD
  1375 ;;		_DelayXLCD
  1376 ;;		_SetDDRamAddr
  1377 ;;		_WriteCmdXLCD
  1378 ;; This function is called by:
  1379 ;;		_config_ldc
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text11
  1384  000978                     __ptext11:
  1385                           	opt callstack 0
  1386  000978                     _OpenXLCD:
  1387                           	opt callstack 25
  1388                           
  1389                           ;incstack = 0
  1390                           ;OpenXLCD@lcdtype stored from wreg
  1391  000978  6E03               	movwf	OpenXLCD@lcdtype,c
  1392                           
  1393                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1394  00097A  0E0F               	movlw	15
  1395  00097C  1683               	andwf	3971,f,c	;volatile
  1396                           
  1397                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1398  00097E  0E0F               	movlw	15
  1399  000980  1695               	andwf	3989,f,c	;volatile
  1400                           
  1401                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1402  000982  9496               	bcf	3990,2,c	;volatile
  1403                           
  1404                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1405  000984  9096               	bcf	3990,0,c	;volatile
  1406                           
  1407                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  1408  000986  9296               	bcf	3990,1,c	;volatile
  1409                           
  1410                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  1411  000988  948D               	bcf	3981,2,c	;volatile
  1412                           
  1413                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  1414  00098A  908D               	bcf	3981,0,c	;volatile
  1415                           
  1416                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  1417  00098C  928D               	bcf	3981,1,c	;volatile
  1418                           
  1419                           ;nxlcd.c: 65:         DelayPORXLCD();
  1420  00098E  ECC2  F006         	call	_DelayPORXLCD	;wreg free
  1421                           
  1422                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  1423  000992  0E30               	movlw	48
  1424  000994  EC95  F005         	call	_WriteCmdXLCD
  1425                           
  1426                           ;nxlcd.c: 68:    DelayXLCD();
  1427  000998  ECB9  F006         	call	_DelayXLCD	;wreg free
  1428                           
  1429                           ;nxlcd.c: 69:    DelayXLCD();
  1430  00099C  ECB9  F006         	call	_DelayXLCD	;wreg free
  1431                           
  1432                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  1433  0009A0  0E30               	movlw	48
  1434  0009A2  EC95  F005         	call	_WriteCmdXLCD
  1435                           
  1436                           ;nxlcd.c: 71:    DelayXLCD();
  1437  0009A6  ECB9  F006         	call	_DelayXLCD	;wreg free
  1438                           
  1439                           ;nxlcd.c: 72:    DelayXLCD();
  1440  0009AA  ECB9  F006         	call	_DelayXLCD	;wreg free
  1441                           
  1442                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  1443  0009AE  0E32               	movlw	50
  1444  0009B0  EC95  F005         	call	_WriteCmdXLCD
  1445  0009B4                     l1122:
  1446  0009B4  ECF1  F005         	call	_BusyXLCD	;wreg free
  1447  0009B8  0900               	iorlw	0
  1448  0009BA  A4D8               	btfss	status,2,c
  1449  0009BC  D7FB               	goto	l1122
  1450  0009BE                     u60:
  1451  0009BE  ECF1  F005         	call	_BusyXLCD	;wreg free
  1452  0009C2  0900               	iorlw	0
  1453  0009C4  A4D8               	btfss	status,2,c
  1454  0009C6  D7FB               	goto	u60
  1455                           
  1456                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  1457  0009C8  5003               	movf	OpenXLCD@lcdtype,w,c
  1458  0009CA  EC95  F005         	call	_WriteCmdXLCD
  1459  0009CE                     l1128:
  1460  0009CE  ECF1  F005         	call	_BusyXLCD	;wreg free
  1461  0009D2  0900               	iorlw	0
  1462  0009D4  A4D8               	btfss	status,2,c
  1463  0009D6  D7FB               	goto	l1128
  1464                           
  1465                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1466  0009D8  0E08               	movlw	8
  1467  0009DA  EC95  F005         	call	_WriteCmdXLCD
  1468  0009DE                     l1132:
  1469  0009DE  ECF1  F005         	call	_BusyXLCD	;wreg free
  1470  0009E2  0900               	iorlw	0
  1471  0009E4  A4D8               	btfss	status,2,c
  1472  0009E6  D7FB               	goto	l1132
  1473                           
  1474                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1475  0009E8  0E0F               	movlw	15
  1476  0009EA  EC95  F005         	call	_WriteCmdXLCD
  1477  0009EE                     l1136:
  1478  0009EE  ECF1  F005         	call	_BusyXLCD	;wreg free
  1479  0009F2  0900               	iorlw	0
  1480  0009F4  A4D8               	btfss	status,2,c
  1481  0009F6  D7FB               	goto	l1136
  1482                           
  1483                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  1484  0009F8  0E01               	movlw	1
  1485  0009FA  EC95  F005         	call	_WriteCmdXLCD
  1486  0009FE                     l1140:
  1487  0009FE  ECF1  F005         	call	_BusyXLCD	;wreg free
  1488  000A02  0900               	iorlw	0
  1489  000A04  A4D8               	btfss	status,2,c
  1490  000A06  D7FB               	goto	l1140
  1491                           
  1492                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  1493  000A08  0E04               	movlw	4
  1494  000A0A  EC95  F005         	call	_WriteCmdXLCD
  1495  000A0E                     l1144:
  1496  000A0E  ECF1  F005         	call	_BusyXLCD	;wreg free
  1497  000A12  0900               	iorlw	0
  1498  000A14  A4D8               	btfss	status,2,c
  1499  000A16  D7FB               	goto	l1144
  1500                           
  1501                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  1502  000A18  0E80               	movlw	128
  1503  000A1A  EC56  F005         	call	_SetDDRamAddr
  1504  000A1E  0012               	return		;funcret
  1505  000A20                     __end_of_OpenXLCD:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _WriteCmdXLCD *****************
  1509 ;; Defined at:
  1510 ;;		line 388 in file "nxlcd.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  cmd             1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  cmd             1    1[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        1 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    3
  1531 ;; This function calls:
  1532 ;;		_DelayFor18TCY
  1533 ;; This function is called by:
  1534 ;;		_lcdTxt
  1535 ;;		_lcd
  1536 ;;		_config_ldc
  1537 ;;		_OpenXLCD
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text12
  1542  000B2A                     __ptext12:
  1543                           	opt callstack 0
  1544  000B2A                     _WriteCmdXLCD:
  1545                           	opt callstack 26
  1546                           
  1547                           ;incstack = 0
  1548                           ;WriteCmdXLCD@cmd stored from wreg
  1549  000B2A  6E02               	movwf	WriteCmdXLCD@cmd,c
  1550                           
  1551                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  1552  000B2C  0E0F               	movlw	15
  1553  000B2E  1695               	andwf	3989,f,c	;volatile
  1554                           
  1555                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  1556  000B30  0E0F               	movlw	15
  1557  000B32  1683               	andwf	3971,f,c	;volatile
  1558                           
  1559                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  1560  000B34  5002               	movf	WriteCmdXLCD@cmd,w,c
  1561  000B36  0BF0               	andlw	240
  1562  000B38  1283               	iorwf	3971,f,c	;volatile
  1563                           
  1564                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  1565  000B3A  948D               	bcf	3981,2,c	;volatile
  1566                           
  1567                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  1568  000B3C  908D               	bcf	3981,0,c	;volatile
  1569                           
  1570                           ;nxlcd.c: 413:         DelayFor18TCY();
  1571  000B3E  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1572                           
  1573                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  1574  000B42  828D               	bsf	3981,1,c	;volatile
  1575                           
  1576                           ;nxlcd.c: 415:         DelayFor18TCY();
  1577  000B44  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1578                           
  1579                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  1580  000B48  928D               	bcf	3981,1,c	;volatile
  1581                           
  1582                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  1583  000B4A  0E0F               	movlw	15
  1584  000B4C  1683               	andwf	3971,f,c	;volatile
  1585                           
  1586                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  1587  000B4E  3802               	swapf	WriteCmdXLCD@cmd,w,c
  1588  000B50  0BF0               	andlw	240
  1589  000B52  0BF0               	andlw	240
  1590  000B54  1283               	iorwf	3971,f,c	;volatile
  1591                           
  1592                           ;nxlcd.c: 424:         DelayFor18TCY();
  1593  000B56  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1594                           
  1595                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  1596  000B5A  828D               	bsf	3981,1,c	;volatile
  1597                           
  1598                           ;nxlcd.c: 426:         DelayFor18TCY();
  1599  000B5C  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1600                           
  1601                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  1602  000B60  928D               	bcf	3981,1,c	;volatile
  1603                           
  1604                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  1605  000B62  0EF0               	movlw	240
  1606  000B64  1295               	iorwf	3989,f,c	;volatile
  1607  000B66  0012               	return		;funcret
  1608  000B68                     __end_of_WriteCmdXLCD:
  1609                           	opt callstack 0
  1610                           
  1611 ;; *************** function _SetDDRamAddr *****************
  1612 ;; Defined at:
  1613 ;;		line 171 in file "nxlcd.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  DDaddr          1    wreg     unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  DDaddr          1    1[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		_DelayFor18TCY
  1636 ;; This function is called by:
  1637 ;;		_OpenXLCD
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text13
  1642  000AAC                     __ptext13:
  1643                           	opt callstack 0
  1644  000AAC                     _SetDDRamAddr:
  1645                           	opt callstack 25
  1646                           
  1647                           ;incstack = 0
  1648                           ;SetDDRamAddr@DDaddr stored from wreg
  1649  000AAC  6E02               	movwf	SetDDRamAddr@DDaddr,c
  1650                           
  1651                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  1652  000AAE  0E0F               	movlw	15
  1653  000AB0  1695               	andwf	3989,f,c	;volatile
  1654                           
  1655                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  1656  000AB2  0E0F               	movlw	15
  1657  000AB4  1683               	andwf	3971,f,c	;volatile
  1658                           
  1659                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  1660  000AB6  5002               	movf	SetDDRamAddr@DDaddr,w,c
  1661  000AB8  0980               	iorlw	128
  1662  000ABA  0BF0               	andlw	240
  1663  000ABC  1283               	iorwf	3971,f,c	;volatile
  1664                           
  1665                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  1666  000ABE  948D               	bcf	3981,2,c	;volatile
  1667                           
  1668                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  1669  000AC0  908D               	bcf	3981,0,c	;volatile
  1670                           
  1671                           ;nxlcd.c: 196:         DelayFor18TCY();
  1672  000AC2  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1673                           
  1674                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  1675  000AC6  828D               	bsf	3981,1,c	;volatile
  1676                           
  1677                           ;nxlcd.c: 198:         DelayFor18TCY();
  1678  000AC8  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1679                           
  1680                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  1681  000ACC  928D               	bcf	3981,1,c	;volatile
  1682                           
  1683                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  1684  000ACE  0E0F               	movlw	15
  1685  000AD0  1683               	andwf	3971,f,c	;volatile
  1686                           
  1687                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  1688  000AD2  3802               	swapf	SetDDRamAddr@DDaddr,w,c
  1689  000AD4  0BF0               	andlw	240
  1690  000AD6  0BF0               	andlw	240
  1691  000AD8  1283               	iorwf	3971,f,c	;volatile
  1692                           
  1693                           ;nxlcd.c: 207:         DelayFor18TCY();
  1694  000ADA  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1695                           
  1696                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  1697  000ADE  828D               	bsf	3981,1,c	;volatile
  1698                           
  1699                           ;nxlcd.c: 209:         DelayFor18TCY();
  1700  000AE0  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1701                           
  1702                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  1703  000AE4  928D               	bcf	3981,1,c	;volatile
  1704                           
  1705                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  1706  000AE6  0EF0               	movlw	240
  1707  000AE8  1295               	iorwf	3989,f,c	;volatile
  1708  000AEA  0012               	return		;funcret
  1709  000AEC                     __end_of_SetDDRamAddr:
  1710                           	opt callstack 0
  1711                           
  1712 ;; *************** function _DelayXLCD *****************
  1713 ;; Defined at:
  1714 ;;		line 22 in file "nxlcd.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1730 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1731 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    2
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_OpenXLCD
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text14
  1743  000D72                     __ptext14:
  1744                           	opt callstack 0
  1745  000D72                     _DelayXLCD:
  1746                           	opt callstack 26
  1747                           
  1748                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1749                           
  1750                           ;incstack = 0
  1751  000D72  0E21               	movlw	33
  1752  000D74  6E02               	movwf	??_DelayXLCD& (0+255),c
  1753  000D76  0E76               	movlw	118
  1754  000D78                     u787:
  1755  000D78  2EE8               	decfsz	wreg,f,c
  1756  000D7A  D7FE               	bra	u787
  1757  000D7C  2E02               	decfsz	??_DelayXLCD& (0+255),f,c
  1758  000D7E  D7FC               	bra	u787
  1759  000D80  D000               	nop2	
  1760  000D82  0012               	return		;funcret
  1761  000D84                     __end_of_DelayXLCD:
  1762                           	opt callstack 0
  1763                           
  1764 ;; *************** function _DelayPORXLCD *****************
  1765 ;; Defined at:
  1766 ;;		line 17 in file "nxlcd.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    2
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_OpenXLCD
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text15
  1795  000D84                     __ptext15:
  1796                           	opt callstack 0
  1797  000D84                     _DelayPORXLCD:
  1798                           	opt callstack 26
  1799                           
  1800                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  1801                           
  1802                           ;incstack = 0
  1803  000D84  0E62               	movlw	98
  1804  000D86  6E02               	movwf	??_DelayPORXLCD& (0+255),c
  1805  000D88  0E66               	movlw	102
  1806  000D8A                     u797:
  1807  000D8A  2EE8               	decfsz	wreg,f,c
  1808  000D8C  D7FE               	bra	u797
  1809  000D8E  2E02               	decfsz	??_DelayPORXLCD& (0+255),f,c
  1810  000D90  D7FC               	bra	u797
  1811  000D92  0012               	return		;funcret
  1812  000D94                     __end_of_DelayPORXLCD:
  1813                           	opt callstack 0
  1814                           
  1815 ;; *************** function _BusyXLCD *****************
  1816 ;; Defined at:
  1817 ;;		line 227 in file "nxlcd.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		_DelayFor18TCY
  1840 ;; This function is called by:
  1841 ;;		_lcd
  1842 ;;		_OpenXLCD
  1843 ;;		_putsXLCD
  1844 ;;		_putrsXLCD
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text16
  1849  000BE2                     __ptext16:
  1850                           	opt callstack 0
  1851  000BE2                     _BusyXLCD:
  1852                           	opt callstack 26
  1853                           
  1854                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  1855                           
  1856                           ;incstack = 0
  1857  000BE2  848D               	bsf	3981,2,c	;volatile
  1858                           
  1859                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  1860  000BE4  908D               	bcf	3981,0,c	;volatile
  1861                           
  1862                           ;nxlcd.c: 231:         DelayFor18TCY();
  1863  000BE6  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1864                           
  1865                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  1866  000BEA  828D               	bsf	3981,1,c	;volatile
  1867                           
  1868                           ;nxlcd.c: 233:         DelayFor18TCY();
  1869  000BEC  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1870                           
  1871                           ;nxlcd.c: 249:         if(PORTD&0x80)
  1872  000BF0  AE83               	btfss	3971,7,c	;volatile
  1873  000BF2  D00A               	goto	l238
  1874                           
  1875                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  1876  000BF4  928D               	bcf	3981,1,c	;volatile
  1877                           
  1878                           ;nxlcd.c: 255:                 DelayFor18TCY();
  1879  000BF6  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1880                           
  1881                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  1882  000BFA  828D               	bsf	3981,1,c	;volatile
  1883                           
  1884                           ;nxlcd.c: 257:                 DelayFor18TCY();
  1885  000BFC  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1886                           
  1887                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  1888  000C00  928D               	bcf	3981,1,c	;volatile
  1889                           
  1890                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  1891  000C02  948D               	bcf	3981,2,c	;volatile
  1892                           
  1893                           ;nxlcd.c: 260:                 return 1;
  1894  000C04  0E01               	movlw	1
  1895  000C06  0012               	return	
  1896  000C08                     l238:
  1897                           
  1898                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  1899  000C08  928D               	bcf	3981,1,c	;volatile
  1900                           
  1901                           ;nxlcd.c: 265:                 DelayFor18TCY();
  1902  000C0A  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1903                           
  1904                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  1905  000C0E  828D               	bsf	3981,1,c	;volatile
  1906                           
  1907                           ;nxlcd.c: 267:                 DelayFor18TCY();
  1908  000C10  ECCA  F006         	call	_DelayFor18TCY	;wreg free
  1909                           
  1910                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  1911  000C14  928D               	bcf	3981,1,c	;volatile
  1912                           
  1913                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  1914  000C16  948D               	bcf	3981,2,c	;volatile
  1915                           
  1916                           ;nxlcd.c: 270:                 return 0;
  1917  000C18  0E00               	movlw	0
  1918  000C1A  0012               	return		;funcret
  1919  000C1C                     __end_of_BusyXLCD:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _DelayFor18TCY *****************
  1923 ;; Defined at:
  1924 ;;		line 12 in file "nxlcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_SetDDRamAddr
  1949 ;;		_BusyXLCD
  1950 ;;		_WriteCmdXLCD
  1951 ;;		_WriteDataXLCD
  1952 ;;		_SetCGRamAddr
  1953 ;;		_ReadAddrXLCD
  1954 ;;		_ReadDataXLCD
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text17
  1959  000D94                     __ptext17:
  1960                           	opt callstack 0
  1961  000D94                     _DelayFor18TCY:
  1962                           	opt callstack 26
  1963                           
  1964                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  1965                           
  1966                           ;incstack = 0
  1967  000D94  0E21               	movlw	33
  1968  000D96                     u807:
  1969  000D96  2EE8               	decfsz	wreg,f,c
  1970  000D98  D7FE               	bra	u807
  1971  000D9A  F000               	nop	
  1972  000D9C  0012               	return		;funcret
  1973  000D9E                     __end_of_DelayFor18TCY:
  1974                           	opt callstack 0
  1975                           
  1976 ;; *************** function _config_interrupcao *****************
  1977 ;; Defined at:
  1978 ;;		line 253 in file "main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		None
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        0 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text18
  2007  000D9E                     __ptext18:
  2008                           	opt callstack 0
  2009  000D9E                     _config_interrupcao:
  2010                           	opt callstack 28
  2011                           
  2012                           ;main.c: 254:     RCONbits.IPEN = 1;
  2013                           
  2014                           ;incstack = 0
  2015  000D9E  8ED0               	bsf	4048,7,c	;volatile
  2016                           
  2017                           ;main.c: 255:     INTCONbits.GIEH = 1;
  2018  000DA0  8EF2               	bsf	4082,7,c	;volatile
  2019                           
  2020                           ;main.c: 256:     INTCONbits.GIEL = 1;
  2021  000DA2  8CF2               	bsf	4082,6,c	;volatile
  2022  000DA4  0012               	return		;funcret
  2023  000DA6                     __end_of_config_interrupcao:
  2024                           	opt callstack 0
  2025                           
  2026 ;; *************** function _interrupcao *****************
  2027 ;; Defined at:
  2028 ;;		line 194 in file "main.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    1
  2049 ;; This function calls:
  2050 ;;		_varreduraTeclado
  2051 ;; This function is called by:
  2052 ;;		Interrupt level 2
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	intcode
  2057  000008                     __pintcode:
  2058                           	opt callstack 0
  2059  000008                     _interrupcao:
  2060                           	opt callstack 24
  2061                           
  2062                           ;incstack = 0
  2063  000008  8232               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2064  00000A  ED72  F006         	call	int_func,f	;refresh shadow registers
  2065                           
  2066                           	psect	intcode_body
  2067  000CE4                     __pintcode_body:
  2068                           	opt callstack 24
  2069  000CE4                     int_func:
  2070                           	opt callstack 24
  2071  000CE4  0006               	pop		; remove dummy address from shadow register refresh
  2072                           
  2073                           ;main.c: 195:     if (INTCON3bits.INT1IF) {
  2074  000CE6  A0F0               	btfss	4080,0,c	;volatile
  2075  000CE8  D002               	goto	i2l152
  2076                           
  2077                           ;main.c: 197:         INTCON3bits.INT1IF = 0;
  2078  000CEA  90F0               	bcf	4080,0,c	;volatile
  2079                           
  2080                           ;main.c: 198:     } else if (INTCON3bits.INT2IF) {
  2081  000CEC  D00D               	goto	i2l157
  2082  000CEE                     i2l152:
  2083  000CEE  A2F0               	btfss	4080,1,c	;volatile
  2084  000CF0  D002               	goto	i2l154
  2085                           
  2086                           ;main.c: 200:         INTCON3bits.INT2IF = 0;
  2087  000CF2  92F0               	bcf	4080,1,c	;volatile
  2088                           
  2089                           ;main.c: 201:     } else if (INTCONbits.TMR0IF) {
  2090  000CF4  D009               	goto	i2l157
  2091  000CF6                     i2l154:
  2092  000CF6  A4F2               	btfss	4082,2,c	;volatile
  2093  000CF8  D007               	goto	i2l157
  2094                           
  2095                           ;main.c: 202:         varreduraTeclado();
  2096  000CFA  ECB4  F005         	call	_varreduraTeclado	;wreg free
  2097                           
  2098                           ;main.c: 203:         TMR0 = 100;
  2099  000CFE  0E00               	movlw	0
  2100  000D00  6ED7               	movwf	4055,c	;volatile
  2101  000D02  0E64               	movlw	100
  2102  000D04  6ED6               	movwf	4054,c	;volatile
  2103                           
  2104                           ;main.c: 204:         INTCONbits.TMR0IF = 0;
  2105  000D06  94F2               	bcf	4082,2,c	;volatile
  2106  000D08                     i2l157:
  2107  000D08  9232               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2108  000D0A  0011               	retfie		f
  2109  000D0C                     __end_of_interrupcao:
  2110                           	opt callstack 0
  2111                           
  2112 ;; *************** function _varreduraTeclado *****************
  2113 ;; Defined at:
  2114 ;;		line 119 in file "main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2130 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2131 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2132 ;;Total ram usage:        1 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_interrupcao
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text20
  2142  000B68                     __ptext20:
  2143                           	opt callstack 0
  2144  000B68                     _varreduraTeclado:
  2145                           	opt callstack 24
  2146                           
  2147                           ;main.c: 120:     if(!PORTBbits.RB3){
  2148                           
  2149                           ;incstack = 0
  2150  000B68  B681               	btfsc	3969,3,c	;volatile
  2151  000B6A  D003               	goto	i2l57
  2152                           
  2153                           ;main.c: 121:         PORTBbits.RB3 = 1;
  2154  000B6C  8681               	bsf	3969,3,c	;volatile
  2155                           
  2156                           ;main.c: 122:         PORTBbits.RB2 = 0;
  2157  000B6E  9481               	bcf	3969,2,c	;volatile
  2158                           
  2159                           ;main.c: 123:     }else if(!PORTBbits.RB2){
  2160  000B70  D00E               	goto	i2l60
  2161  000B72                     i2l57:
  2162  000B72  B481               	btfsc	3969,2,c	;volatile
  2163  000B74  D003               	goto	i2l59
  2164                           
  2165                           ;main.c: 124:         PORTBbits.RB2 = 1;
  2166  000B76  8481               	bsf	3969,2,c	;volatile
  2167                           
  2168                           ;main.c: 125:         PORTBbits.RB1 = 0;
  2169  000B78  9281               	bcf	3969,1,c	;volatile
  2170                           
  2171                           ;main.c: 126:     }else if(!PORTBbits.RB1){
  2172  000B7A  D009               	goto	i2l60
  2173  000B7C                     i2l59:
  2174  000B7C  B281               	btfsc	3969,1,c	;volatile
  2175  000B7E  D003               	goto	i2l61
  2176                           
  2177                           ;main.c: 127:         PORTBbits.RB1 = 1;
  2178  000B80  8281               	bsf	3969,1,c	;volatile
  2179                           
  2180                           ;main.c: 128:         PORTBbits.RB0 = 0;
  2181  000B82  9081               	bcf	3969,0,c	;volatile
  2182                           
  2183                           ;main.c: 129:     }else if(!PORTBbits.RB0){
  2184  000B84  D004               	goto	i2l60
  2185  000B86                     i2l61:
  2186  000B86  B081               	btfsc	3969,0,c	;volatile
  2187  000B88  D002               	goto	i2l60
  2188                           
  2189                           ;main.c: 130:         PORTBbits.RB0 = 1;
  2190  000B8A  8081               	bsf	3969,0,c	;volatile
  2191                           
  2192                           ;main.c: 131:         PORTBbits.RB3 = 0;
  2193  000B8C  9681               	bcf	3969,3,c	;volatile
  2194  000B8E                     i2l60:
  2195                           
  2196                           ;main.c: 133:     PORTDbits.RD0 = !PORTDbits.RD0;
  2197  000B8E  B083               	btfsc	3971,0,c	;volatile
  2198  000B90  D003               	goto	i2u22_40
  2199  000B92  6A01               	clrf	??_varreduraTeclado& (0+255),c
  2200  000B94  2A01               	incf	??_varreduraTeclado& (0+255),f,c
  2201  000B96  D001               	goto	i2u23_48
  2202  000B98                     i2u22_40:
  2203  000B98  6A01               	clrf	??_varreduraTeclado& (0+255),c
  2204  000B9A                     i2u23_48:
  2205  000B9A  5083               	movf	3971,w,c	;volatile
  2206  000B9C  1801               	xorwf	??_varreduraTeclado,w,c
  2207  000B9E  0BFE               	andlw	-2
  2208  000BA0  1801               	xorwf	??_varreduraTeclado,w,c
  2209  000BA2  6E83               	movwf	3971,c	;volatile
  2210  000BA4  0012               	return		;funcret
  2211  000BA6                     __end_of_varreduraTeclado:
  2212                           	opt callstack 0
  2213                           
  2214                           	psect	rparam
  2215  0000                     
  2216                           	psect	temp
  2217  000032                     btemp:
  2218                           	opt callstack 0
  2219  000032                     	ds	1
  2220  0000                     int$flags	set	btemp
  2221  0000                     wtemp8	set	btemp+1
  2222  0000                     ttemp5	set	btemp+1
  2223  0000                     ttemp6	set	btemp+4
  2224  0000                     ttemp7	set	btemp+8
  2225                           tosu	equ	0xFFF
  2226                           tosh	equ	0xFFE
  2227                           tosl	equ	0xFFD
  2228                           stkptr	equ	0xFFC
  2229                           pclatu	equ	0xFFB
  2230                           pclath	equ	0xFFA
  2231                           pcl	equ	0xFF9
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodh	equ	0xFF4
  2237                           prodl	equ	0xFF3
  2238                           indf0	equ	0xFEF
  2239                           postinc0	equ	0xFEE
  2240                           postdec0	equ	0xFED
  2241                           preinc0	equ	0xFEC
  2242                           plusw0	equ	0xFEB
  2243                           fsr0h	equ	0xFEA
  2244                           fsr0l	equ	0xFE9
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postinc1	equ	0xFE6
  2248                           postdec1	equ	0xFE5
  2249                           preinc1	equ	0xFE4
  2250                           plusw1	equ	0xFE3
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           bsr	equ	0xFE0
  2254                           indf2	equ	0xFDF
  2255                           postinc2	equ	0xFDE
  2256                           postdec2	equ	0xFDD
  2257                           preinc2	equ	0xFDC
  2258                           plusw2	equ	0xFDB
  2259                           fsr2h	equ	0xFDA
  2260                           fsr2l	equ	0xFD9
  2261                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 

    lcdTxt@txt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_tecladoMatricial
    _lcd->_WriteCmdXLCD
    _lcd->_WriteDataXLCD
    _config_ldc->_lcdTxt
    _lcdTxt->_putrsXLCD
    _lcdTxt->_putsXLCD
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD

Critical Paths under _interrupcao in COMRAM

    _interrupcao->_varreduraTeclado

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1170
                                             29 COMRAM     2     2      0
                 _config_interrupcao
                         _config_ldc
                         _config_led
                     _config_teclado
                      _config_timer0
                                _lcd
                   _tecladoMatricial
 ---------------------------------------------------------------------------------
 (1) _tecladoMatricial                                    28    26      2     318
                                              1 COMRAM    28    26      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 19    17      2     294
                                              2 COMRAM    19    17      2
                           _BusyXLCD
                       _WriteCmdXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _config_timer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_teclado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ldc                                           0     0      0     535
                           _OpenXLCD
                       _WriteCmdXLCD
                             _lcdTxt
 ---------------------------------------------------------------------------------
 (2) _lcdTxt                                               3     1      2     430
                                              4 COMRAM     3     1      2
                       _WriteCmdXLCD
                          _putrsXLCD
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (3) _putsXLCD                                             2     0      2     151
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2     151
                                              2 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0      75
                                              2 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      30
                                              1 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_interrupcao                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcao                                          0     0      0       0
                   _varreduraTeclado
 ---------------------------------------------------------------------------------
 (7) _varreduraTeclado                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_interrupcao
   _config_ldc
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _lcdTxt
       _WriteCmdXLCD
         _DelayFor18TCY
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
       _putsXLCD
         _BusyXLCD
           _DelayFor18TCY
         _WriteDataXLCD
           _DelayFor18TCY
   _config_led
   _config_teclado
   _config_timer0
   _lcd
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _tecladoMatricial

 _interrupcao (ROOT)
   _varreduraTeclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      20        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 31 20:27:23 2022

                         l67 0866                           l85 08BE                           u60 09BE  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000            ?_tecladoMatricial 0002  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000        tecladoMatricial@tecla 001C  
               __CFG_CP3$OFF 000000                          l103 0916                          l238 0C08  
               __CFG_CPB$OFF 000000                          u511 0A2A                          u520 0A3C  
               __CFG_CPD$OFF 000000                          u540 0A6C                          u807 0D96  
                        u767 0AA2                          u777 0BB2                          u787 0D78  
                        u797 0D8A                 __CFG_BOR$OFF 000000           ??_tecladoMatricial 0004  
                        _lcd 0A20        __size_of_WriteCmdXLCD 003E                          wreg 000FE8  
               __CFG_FOSC$HS 000000                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1122 09B4                         l1140 09FE                         l1132 09DE  
                       l1144 0A0E                         l1136 09EE                         l1128 09CE  
                       l1500 0828                         l1510 0854                         l1502 0830  
                       l1440 0C70                         l1504 083A                         l1512 085E  
                       l1434 0C52                         l1450 0C3C                         l1530 089A  
                       l1506 0842                         l1602 0CCA                         l1444 0C1E  
                       l1524 0880                         l1532 08A4                         l1508 084C  
                       l1550 08E0                         l1534 08AC                         l1526 0888  
                       l1472 0A58                         l1552 08EA                         l1560 090E  
                       l1528 0892                         l1536 08B6                         l1482 0A8C  
                       l1554 08F2                         l1476 0A72                         l1484 0A92  
                       l1572 0930                         l1580 0954                         l1548 08D8  
                       l1556 08FC                         l1582 095C                         l1574 0938  
                       l1558 0904                         l1576 0942                         l1584 0966  
                       l1578 094A                         l1586 096E                         ?_lcd 0003  
                       STR_1 080B                         STR_2 0801                         i2l60 0B8E  
                       i2l61 0B86                         i2l57 0B72                         i2l59 0B7C  
                       _RBPU 007F8F                         _TMR0 000FD6                         _main 0CB6  
  __size_of_varreduraTeclado 003E                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0032       __size_of_WriteDataXLCD 003E  
                       start 000E                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_lcd 0005                 _WriteCmdXLCD 0B2A  
              __CFG_PLLDIV$1 000000                ?_SetDDRamAddr 0001                        ?_main 0001  
                      i2l152 0CEE                        i2l154 0CF6                        i2l157 0D08  
                      _PORTD 000F83                __CFG_USBDIV$1 000000                        _TRISD 000F95  
__size_of_config_interrupcao 0008                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      tablat 000FF5                        plusw1 000FE3                        plusw2 000FDB  
                      ttemp5 0033                        ttemp6 0036                        ttemp7 003A  
                      status 000FD8              ??_config_timer0 0002                        wtemp8 0033  
             __CFG_ICPRT$OFF 000000              __initialization 0C84                 ?_interrupcao 0001  
               __end_of_main 0CE4             __end_of_BusyXLCD 0C1C           __size_of_DelayXLCD 0012  
      __size_of_DelayPORXLCD 0010               ??_SetDDRamAddr 0002             __end_of_OpenXLCD 0A20  
                     ??_main 001E                __activetblptr 000001                _WriteDataXLCD 0AEC  
            __CFG_CCP2MX$OFF 000000                       _ADCON1 000FC1                 _DelayPORXLCD 0D84  
             __CFG_XINST$OFF 000000         _tecladoMatricial$500 0012         _tecladoMatricial$501 0014  
       _tecladoMatricial$502 0016         _tecladoMatricial$503 0018         _tecladoMatricial$504 001A  
       _tecladoMatricial$493 0004         _tecladoMatricial$494 0006         _tecladoMatricial$495 0008  
       _tecladoMatricial$496 000A         _tecladoMatricial$497 000C         _tecladoMatricial$498 000E  
       _tecladoMatricial$499 0010                       _lcdTxt 0BA6                       _cursor 0030  
             ?_WriteDataXLCD 0001                 __pdataCOMRAM 0020                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
           ??_config_teclado 0002             __end_of_putsXLCD 0C50            __end_of_DelayXLCD 0D84  
                 __accesstop 0060      __end_of__initialization 0CA4              __CFG_PBADEN$OFF 000000  
           _varreduraTeclado 0B68                ___rparam_used 000001               __pcstackCOMRAM 0001  
     __size_of_DelayFor18TCY 000A                    ?_BusyXLCD 0001    __size_of_tecladoMatricial 016A  
            WriteCmdXLCD@cmd 0002         __end_of_SetDDRamAddr 0AEC                    ?_OpenXLCD 0001  
          WriteDataXLCD@data 0002                      ?_lcdTxt 0005         __size_of_interrupcao 0D04  
            ??_WriteDataXLCD 0002                   _config_ldc 0D46                   _config_led 0DA6  
                    i2u22_40 0B98                      i2u23_48 0B9A           __size_of_putrsXLCD 0034  
                 ??_BusyXLCD 0002              __CFG_VREGEN$OFF 000000                   ??_OpenXLCD 0003  
                    __Hparam 0000                      __Lparam 0000                _DelayFor18TCY 0D94  
                  ?_putsXLCD 0003                 __psmallconst 0800              __size_of_lcdTxt 003C  
            __CFG_STVREN$OFF 000000                      __pcinit 0C84              putrsXLCD@buffer 0003  
                    __ramtop 0800                      __ptext0 0CB6                      __ptext1 080E  
                    __ptext2 0A20                      __ptext3 0D2C                      __ptext4 0D0C  
 __end_of_config_interrupcao 0DA6                      __ptext5 0DA6                      __ptext6 0D46  
                    __ptext7 0BA6                      __ptext8 0C1C                      __ptext9 0C50  
                  _T0CONbits 000FD5                 __size_of_lcd 008C               __pintcode_body 0CE4  
       end_of_initialization 0CA4                      int_func 0CE4                   lcd@teclado 0006  
      __end_of_config_timer0 0D46               ?_DelayFor18TCY 0001                      postdec1 000FE5  
                    postinc0 000FEE                      postinc2 000FDE                   ??_putsXLCD 0005  
          __end_of_putrsXLCD 0C84                    _PORTBbits 000F81                    _PORTDbits 000F83  
   __end_of_varreduraTeclado 0BA6                  ?_config_ldc 0001                  ?_config_led 0001  
                  _TRISBbits 000F93                    _TRISDbits 000F95                    _TRISEbits 000F96  
      __size_of_SetDDRamAddr 0040             _tecladoMatricial 080E                    _DelayXLCD 0D72  
              __pidataCOMRAM 0D60               __end_of_lcdTxt 0BE2                 _SetDDRamAddr 0AAC  
         SetDDRamAddr@DDaddr 0002          start_initialization 0C84                  __end_of_lcd 0AAC  
          __size_of_BusyXLCD 003A                   ?_DelayXLCD 0001              ??_DelayFor18TCY 0002  
          __size_of_OpenXLCD 00A8          __size_of_config_ldc 001A          __size_of_config_led 0006  
              ?_WriteCmdXLCD 0001                     ??_lcdTxt 0007             __CFG_LPT1OSC$OFF 000000  
    __size_of_config_teclado 0020               putsXLCD@buffer 0003                ??_interrupcao 0002  
                  __pintcode 0008               ??_WriteCmdXLCD 0002            __size_of_putsXLCD 0034  
      __end_of_WriteDataXLCD 0B2A                  __smallconst 0800           _config_interrupcao 0D9E  
                   _LATEbits 000F8D                  ??_DelayXLCD 0002                ?_DelayPORXLCD 0001  
        ?_config_interrupcao 0001              OpenXLCD@lcdtype 0003                     _RCONbits 000FD0  
           __CFG_WDTPS$32768 000000     __end_of_tecladoMatricial 0978                    lcdTxt@txt 0005  
        __end_of_interrupcao 0D0C            ?_varreduraTeclado 0001         ??_config_interrupcao 0002  
                  _putrsXLCD 0C50                    main@tecla 001E                 ??_config_ldc 0008  
               ??_config_led 0002           ??_varreduraTeclado 0001                  _INTCON2bits 000FF1  
                _INTCON3bits 000FF0                    copy_data0 0C98                     _BusyXLCD 0BE2  
             ??_DelayPORXLCD 0002                     _OpenXLCD 0978                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 0800           __end_of_config_ldc 0D60  
         __end_of_config_led 0DAC                   ?_putrsXLCD 0003       __size_of_config_timer0 001A  
                   __ptext10 0AEC                     __ptext11 0978                     __ptext20 0B68  
                   __ptext12 0B2A                     __ptext13 0AAC                     __ptext14 0D72  
                   __ptext15 0D84                     __ptext16 0BE2                     __ptext17 0D94  
                   __ptext18 0D9E                     lcd@F3185 0020         __end_of_WriteCmdXLCD 0B68  
              __size_of_main 002E               _config_teclado 0D0C                     lcd@tecla 0003  
                _interrupcao 0008                     int$flags 0032                     _putsXLCD 0C1C  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                     intlevel2 0000  
     __end_of_config_teclado 0D2C                _config_timer0 0D2C        __end_of_DelayFor18TCY 0D9E  
       __end_of_DelayPORXLCD 0D94                  ??_putrsXLCD 0005              ?_config_teclado 0001  
             ?_config_timer0 0001  
